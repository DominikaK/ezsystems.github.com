{
    "project": {
        "name": "eZ Platform UI Bundle JavaScript API",
        "description": "API doc of the PlatformUI JavaScript components",
        "version": "1.0.0",
        "url": "https://github.com/ezsystems/PlatformUIBundle",
        "logo": "http://ez.no/extension/ez_ezno/design/ezno_2014/images/ez-logo.png"
    },
    "files": {
        "Resources/public/js/apps/plugins/ez-confirmboxplugin.js": {
            "name": "Resources/public/js/apps/plugins/ez-confirmboxplugin.js",
            "modules": {
                "ez-confirmboxplugin": 1
            },
            "classes": {
                "eZ.Plugin.ConfirmBox": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/apps/plugins/ez-domstateplugin.js": {
            "name": "Resources/public/js/apps/plugins/ez-domstateplugin.js",
            "modules": {
                "ez-domstateplugin": 1
            },
            "classes": {
                "eZ.Plugin.DomState": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/apps/plugins/ez-languageselectionboxplugin.js": {
            "name": "Resources/public/js/apps/plugins/ez-languageselectionboxplugin.js",
            "modules": {
                "ez-languageselectionboxplugin": 1
            },
            "classes": {
                "eZ.Plugin.LanguageSelectionBox": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/apps/plugins/ez-notificationhubplugin.js": {
            "name": "Resources/public/js/apps/plugins/ez-notificationhubplugin.js",
            "modules": {
                "ez-notificationhubplugin": 1
            },
            "classes": {
                "eZ.Plugin.NotificationHub": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/apps/plugins/ez-positionplugin.js": {
            "name": "Resources/public/js/apps/plugins/ez-positionplugin.js",
            "modules": {
                "ez-positionplugin": 1
            },
            "classes": {
                "eZ.Plugin.Position": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/apps/plugins/ez-registerlanguagehelpersplugin.js": {
            "name": "Resources/public/js/apps/plugins/ez-registerlanguagehelpersplugin.js",
            "modules": {
                "ez-registerhelpersplugin": 1
            },
            "classes": {
                "eZ.Plugin.RegisterLanguageHelpers": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/apps/plugins/ez-registerurlhelpersplugin.js": {
            "name": "Resources/public/js/apps/plugins/ez-registerurlhelpersplugin.js",
            "modules": {},
            "classes": {
                "eZ.Plugin.RegisterUrlHelpers": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/apps/plugins/ez-universaldiscoveryplugin.js": {
            "name": "Resources/public/js/apps/plugins/ez-universaldiscoveryplugin.js",
            "modules": {
                "ez-universaldiscoveryplugin": 1
            },
            "classes": {
                "eZ.Plugin.DiscoveryWidget": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/apps/plugins/ez-updatetreeplugin.js": {
            "name": "Resources/public/js/apps/plugins/ez-updatetreeplugin.js",
            "modules": {
                "ez-updatetreeplugin": 1
            },
            "classes": {
                "eZ.Plugin.UpdateTree": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/apps/ez-platformuiapp.js": {
            "name": "Resources/public/js/apps/ez-platformuiapp.js",
            "modules": {
                "ez-platformuiapp": 1
            },
            "classes": {
                "eZ.PlatformUIApp": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/actions/ez-buttonactionview.js": {
            "name": "Resources/public/js/views/actions/ez-buttonactionview.js",
            "modules": {
                "ez-buttonactionview": 1
            },
            "classes": {
                "eZ.ButtonActionView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/actions/ez-createcontentactionview.js": {
            "name": "Resources/public/js/views/actions/ez-createcontentactionview.js",
            "modules": {
                "ez-createcontentactionview": 1
            },
            "classes": {
                "eZ.CreateContentActionView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/actions/ez-movecontentactionview.js": {
            "name": "Resources/public/js/views/actions/ez-movecontentactionview.js",
            "modules": {
                "ez-movecontentactionview": 1
            },
            "classes": {
                "eZ.MoveContentActionView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/actions/ez-previewactionview.js": {
            "name": "Resources/public/js/views/actions/ez-previewactionview.js",
            "modules": {
                "ez-previewactionview": 1
            },
            "classes": {
                "eZ.PreviewActionView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/actions/ez-translateactionview.js": {
            "name": "Resources/public/js/views/actions/ez-translateactionview.js",
            "modules": {
                "ez-translateactionview": 1
            },
            "classes": {
                "eZ.TranslateActionView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/actions/ez-treeactionview.js": {
            "name": "Resources/public/js/views/actions/ez-treeactionview.js",
            "modules": {},
            "classes": {
                "eZ.TreeActionView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-author-editview.js": {
            "name": "Resources/public/js/views/fields/ez-author-editview.js",
            "modules": {
                "ez-author-editview": 1
            },
            "classes": {
                "Author": 1,
                "AuthorList": 1,
                "eZ.AuthorInputView": 1,
                "eZ.AuthorEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-author-view.js": {
            "name": "Resources/public/js/views/fields/ez-author-view.js",
            "modules": {
                "ez-author-view": 1
            },
            "classes": {
                "eZ.AuthorView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-binarybase-editview.js": {
            "name": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "modules": {
                "ez-binarybase-editview": 1
            },
            "classes": {
                "eZ.BinaryBaseEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-binaryfile-editview.js": {
            "name": "Resources/public/js/views/fields/ez-binaryfile-editview.js",
            "modules": {
                "ez-binaryfile-editview": 1
            },
            "classes": {
                "eZ.BinaryFileEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-binaryfile-view.js": {
            "name": "Resources/public/js/views/fields/ez-binaryfile-view.js",
            "modules": {
                "ez-binaryfile-view": 1
            },
            "classes": {
                "eZ.BinaryFileView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-checkbox-editview.js": {
            "name": "Resources/public/js/views/fields/ez-checkbox-editview.js",
            "modules": {
                "ez-checkbox-editview": 1
            },
            "classes": {
                "eZ.CheckboxEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-checkbox-view.js": {
            "name": "Resources/public/js/views/fields/ez-checkbox-view.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-country-editview.js": {
            "name": "Resources/public/js/views/fields/ez-country-editview.js",
            "modules": {
                "ez-country-editview": 1
            },
            "classes": {
                "eZ.CountryEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-country-view.js": {
            "name": "Resources/public/js/views/fields/ez-country-view.js",
            "modules": {
                "ez-country-view": 1
            },
            "classes": {
                "eZ.CountryView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-date-editview.js": {
            "name": "Resources/public/js/views/fields/ez-date-editview.js",
            "modules": {
                "ez-date-editview": 1
            },
            "classes": {
                "eZ.DateEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-date-view.js": {
            "name": "Resources/public/js/views/fields/ez-date-view.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-dateandtime-editview.js": {
            "name": "Resources/public/js/views/fields/ez-dateandtime-editview.js",
            "modules": {
                "ez-dateandtime-editview": 1
            },
            "classes": {
                "eZ.DateAndTimeEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-dateandtime-view.js": {
            "name": "Resources/public/js/views/fields/ez-dateandtime-view.js",
            "modules": {
                "ez-dateandtime-view": 1
            },
            "classes": {
                "eZ.DateAndTimeView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-emailaddress-editview.js": {
            "name": "Resources/public/js/views/fields/ez-emailaddress-editview.js",
            "modules": {
                "ez-emailaddress-editview": 1
            },
            "classes": {
                "eZ.EmailAddressEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-float-editview.js": {
            "name": "Resources/public/js/views/fields/ez-float-editview.js",
            "modules": {
                "ez-float-editview": 1
            },
            "classes": {
                "eZ.FloatEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-float-view.js": {
            "name": "Resources/public/js/views/fields/ez-float-view.js",
            "modules": {
                "ez-float-view": 1
            },
            "classes": {
                "eZ.FloatView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-image-editview.js": {
            "name": "Resources/public/js/views/fields/ez-image-editview.js",
            "modules": {
                "ez-image-editview": 1
            },
            "classes": {
                "eZ.ImageEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-image-view.js": {
            "name": "Resources/public/js/views/fields/ez-image-view.js",
            "modules": {
                "ez-image-view": 1
            },
            "classes": {
                "eZ.ImageView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-integer-editview.js": {
            "name": "Resources/public/js/views/fields/ez-integer-editview.js",
            "modules": {
                "ez-integer-editview": 1
            },
            "classes": {
                "eZ.IntegerEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-integer-view.js": {
            "name": "Resources/public/js/views/fields/ez-integer-view.js",
            "modules": {
                "ez-integer-view": 1
            },
            "classes": {
                "eZ.IntegerView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-isbn-editview.js": {
            "name": "Resources/public/js/views/fields/ez-isbn-editview.js",
            "modules": {
                "ez-isbn-editview": 1
            },
            "classes": {
                "eZ.ISBNEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-keyword-editview.js": {
            "name": "Resources/public/js/views/fields/ez-keyword-editview.js",
            "modules": {
                "ez-keyword-editview": 1
            },
            "classes": {
                "eZ.KeywordEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-keyword-view.js": {
            "name": "Resources/public/js/views/fields/ez-keyword-view.js",
            "modules": {
                "ez-keyword-view": 1
            },
            "classes": {
                "eZ.KeywordView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-maplocation-editview.js": {
            "name": "Resources/public/js/views/fields/ez-maplocation-editview.js",
            "modules": {
                "ez-maplocation-editview": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-maplocation-view.js": {
            "name": "Resources/public/js/views/fields/ez-maplocation-view.js",
            "modules": {
                "ez-maplocation-view": 1
            },
            "classes": {
                "eZ.MapLocationEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-media-editview.js": {
            "name": "Resources/public/js/views/fields/ez-media-editview.js",
            "modules": {
                "ez-media-editview": 1
            },
            "classes": {
                "eZ.MediaEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-media-view.js": {
            "name": "Resources/public/js/views/fields/ez-media-view.js",
            "modules": {
                "ez-media-view": 1
            },
            "classes": {
                "eZ.MediaView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-relation-editview.js": {
            "name": "Resources/public/js/views/fields/ez-relation-editview.js",
            "modules": {
                "ez-relation-editview": 1
            },
            "classes": {
                "eZ.RelationEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-relation-view.js": {
            "name": "Resources/public/js/views/fields/ez-relation-view.js",
            "modules": {
                "ez-relation-view": 1
            },
            "classes": {
                "eZ.RelationView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-relationlist-editview.js": {
            "name": "Resources/public/js/views/fields/ez-relationlist-editview.js",
            "modules": {
                "ez-relationlist-editview": 1
            },
            "classes": {
                "eZ.RelationListEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-relationlist-view.js": {
            "name": "Resources/public/js/views/fields/ez-relationlist-view.js",
            "modules": {
                "ez-relationlist-view": 1
            },
            "classes": {
                "eZ.RelationListView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-richtext-editview.js": {
            "name": "Resources/public/js/views/fields/ez-richtext-editview.js",
            "modules": {
                "ez-richtext-editview": 1
            },
            "classes": {
                "eZ.RichTextEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-richtext-view.js": {
            "name": "Resources/public/js/views/fields/ez-richtext-view.js",
            "modules": {
                "ez-richtext-view": 1
            },
            "classes": {
                "eZ.RichTextView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-selection-editview.js": {
            "name": "Resources/public/js/views/fields/ez-selection-editview.js",
            "modules": {
                "ez-selection-editview": 1
            },
            "classes": {
                "eZ.SelectionEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-selection-view.js": {
            "name": "Resources/public/js/views/fields/ez-selection-view.js",
            "modules": {
                "ez-selection-view": 1
            },
            "classes": {
                "eZ.SelectionView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-textblock-editview.js": {
            "name": "Resources/public/js/views/fields/ez-textblock-editview.js",
            "modules": {
                "ez-textblock-editview": 1
            },
            "classes": {
                "eZ.TextBlockEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-textline-editview.js": {
            "name": "Resources/public/js/views/fields/ez-textline-editview.js",
            "modules": {
                "ez-textline-editview": 1
            },
            "classes": {
                "eZ.TextLineEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-time-editview.js": {
            "name": "Resources/public/js/views/fields/ez-time-editview.js",
            "modules": {
                "ez-time-editview": 1
            },
            "classes": {
                "eZ.timeEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-time-view.js": {
            "name": "Resources/public/js/views/fields/ez-time-view.js",
            "modules": {
                "ez-checkbox-view": 1
            },
            "classes": {
                "eZ.CheckboxView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-url-editview.js": {
            "name": "Resources/public/js/views/fields/ez-url-editview.js",
            "modules": {
                "ez-url-editview": 1
            },
            "classes": {
                "eZ.UrlEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-url-view.js": {
            "name": "Resources/public/js/views/fields/ez-url-view.js",
            "modules": {
                "ez-url-view": 1
            },
            "classes": {
                "eZ.UrlView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-user-editview.js": {
            "name": "Resources/public/js/views/fields/ez-user-editview.js",
            "modules": {
                "ez-user-editview": 1
            },
            "classes": {
                "eZ.UserEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-user-view.js": {
            "name": "Resources/public/js/views/fields/ez-user-view.js",
            "modules": {
                "ez-user-view": 1
            },
            "classes": {
                "eZ.UserView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-xmltext-editview.js": {
            "name": "Resources/public/js/views/fields/ez-xmltext-editview.js",
            "modules": {
                "ez-xmltext-editview": 1
            },
            "classes": {
                "eZ.XmlTextEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/fields/ez-xmltext-view.js": {
            "name": "Resources/public/js/views/fields/ez-xmltext-view.js",
            "modules": {
                "ez-xmltext-view": 1
            },
            "classes": {
                "eZ.XmlTextView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/navigation/ez-navigationitemparameterview.js": {
            "name": "Resources/public/js/views/navigation/ez-navigationitemparameterview.js",
            "modules": {
                "ez-navigationitemparameterview": 1
            },
            "classes": {
                "eZ.NavigationItemParameterView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/navigation/ez-navigationitemsubtreeview.js": {
            "name": "Resources/public/js/views/navigation/ez-navigationitemsubtreeview.js",
            "modules": {
                "ez-navigationitemsubtreeview": 1
            },
            "classes": {
                "eZ.NavigationItemSubtreeView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/navigation/ez-navigationitemview.js": {
            "name": "Resources/public/js/views/navigation/ez-navigationitemview.js",
            "modules": {
                "ez-navigationitemview": 1
            },
            "classes": {
                "eZ.NavigationItemView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/serverside/ez-contenttypeeditserversideview.js": {
            "name": "Resources/public/js/views/serverside/ez-contenttypeeditserversideview.js",
            "modules": {
                "ez-contenttypeeditserversideview": 1
            },
            "classes": {
                "eZ.ContentTypeEditServerSideView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/serverside/ez-roleserversideview.js": {
            "name": "Resources/public/js/views/serverside/ez-roleserversideview.js",
            "modules": {
                "ez-roleserversideview": 1
            },
            "classes": {
                "eZ.RoleServerSideView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/serverside/ez-sectionserversideview.js": {
            "name": "Resources/public/js/views/serverside/ez-sectionserversideview.js",
            "modules": {
                "ez-sectionserversideview": 1
            },
            "classes": {
                "eZ.SectionServerSideView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/services/plugins/ez-contentcreateplugin.js": {
            "name": "Resources/public/js/views/services/plugins/ez-contentcreateplugin.js",
            "modules": {
                "ez-contentcreateplugin": 1
            },
            "classes": {
                "eZ.Plugin.ContentCreate": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/views/services/plugins/ez-contentsetmainlocationplugin.js": {
            "name": "Resources/public/js/views/services/plugins/ez-contentsetmainlocationplugin.js",
            "modules": {
                "ez-contentsetmainlocationplugin": 1
            },
            "classes": {
                "eZ.Plugin.ContentSetMainLocation": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/views/services/plugins/ez-contenttreeplugin.js": {
            "name": "Resources/public/js/views/services/plugins/ez-contenttreeplugin.js",
            "modules": {
                "ez-contenttreeplugin": 1
            },
            "classes": {
                "eZ.Plugin.ContentTree": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/views/services/plugins/ez-copycontentplugin.js": {
            "name": "Resources/public/js/views/services/plugins/ez-copycontentplugin.js",
            "modules": {
                "ez-copycontentplugin": 1
            },
            "classes": {
                "eZ.Plugin.CopyContent": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/views/services/plugins/ez-discarddraftplugin.js": {
            "name": "Resources/public/js/views/services/plugins/ez-discarddraftplugin.js",
            "modules": {
                "ez-discarddraftplugin": 1
            },
            "classes": {
                "eZ.Plugin.DiscardDraft": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/views/services/plugins/ez-discoverybarcontenttreeplugin.js": {
            "name": "Resources/public/js/views/services/plugins/ez-discoverybarcontenttreeplugin.js",
            "modules": {
                "ez-discoverybarcontenttreeplugin": 1
            },
            "classes": {
                "eZ.Plugin.DiscoveryBarContentTree": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/views/services/plugins/ez-imagevariationloadplugin.js": {
            "name": "Resources/public/js/views/services/plugins/ez-imagevariationloadplugin.js",
            "modules": {
                "ez-imagevariationloadplugin": 1
            },
            "classes": {
                "eZ.Plugin.ImageVariationLoad": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/views/services/plugins/ez-locationcreateplugin.js": {
            "name": "Resources/public/js/views/services/plugins/ez-locationcreateplugin.js",
            "modules": {
                "ez-locationcreateplugin": 1
            },
            "classes": {
                "eZ.Plugin.LocationCreate": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/views/services/plugins/ez-locationremoveplugin.js": {
            "name": "Resources/public/js/views/services/plugins/ez-locationremoveplugin.js",
            "modules": {
                "ez-locationremoveplugin": 1
            },
            "classes": {
                "eZ.Plugin.LocationRemove": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/views/services/plugins/ez-locationsearchplugin.js": {
            "name": "Resources/public/js/views/services/plugins/ez-locationsearchplugin.js",
            "modules": {
                "ez-locationsearchplugin": 1
            },
            "classes": {
                "eZ.Plugin.LocationSearch": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/views/services/plugins/ez-locationsloadplugin.js": {
            "name": "Resources/public/js/views/services/plugins/ez-locationsloadplugin.js",
            "modules": {
                "ez-locationsloadplugin": 1
            },
            "classes": {
                "eZ.Plugin.LocationsLoad": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/views/services/plugins/ez-loginavailableplugin.js": {
            "name": "Resources/public/js/views/services/plugins/ez-loginavailableplugin.js",
            "modules": {
                "ez-loginavailableplugin": 1
            },
            "classes": {
                "eZ.Plugin.LoginAvailable": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/views/services/plugins/ez-objectrelationloadplugin.js": {
            "name": "Resources/public/js/views/services/plugins/ez-objectrelationloadplugin.js",
            "modules": {
                "ez-objectrelationloadplugin": 1
            },
            "classes": {
                "eZ.Plugin.ObjectRelationLoad": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/views/services/plugins/ez-objectrelationsloadplugin.js": {
            "name": "Resources/public/js/views/services/plugins/ez-objectrelationsloadplugin.js",
            "modules": {
                "ez-objectrelationsloadplugin": 1
            },
            "classes": {
                "eZ.Plugin.ObjectRelationsLoad": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/views/services/plugins/ez-publishdraftplugin.js": {
            "name": "Resources/public/js/views/services/plugins/ez-publishdraftplugin.js",
            "modules": {
                "ez-publishdraftplugin": 1
            },
            "classes": {
                "eZ.Plugin.PublishDraft": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/views/services/plugins/ez-savedraftplugin.js": {
            "name": "Resources/public/js/views/services/plugins/ez-savedraftplugin.js",
            "modules": {
                "ez-savedraftplugin": 1
            },
            "classes": {
                "eZ.Plugin.SaveDraft": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/views/services/plugins/ez-universaldiscoverycontenttreeplugin.js": {
            "name": "Resources/public/js/views/services/plugins/ez-universaldiscoverycontenttreeplugin.js",
            "modules": {
                "ez-universaldiscoverycontenttreeplugin": 1
            },
            "classes": {
                "eZ.Plugin.UniversalDiscoveryContentTree": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/views/services/plugins/ez-userloadplugin.js": {
            "name": "Resources/public/js/views/services/plugins/ez-userloadplugin.js",
            "modules": {
                "ez-userloadplugin": 1
            },
            "classes": {
                "eZ.Plugin.UserLoad": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/views/services/plugins/ez-viewservicebaseplugin.js": {
            "name": "Resources/public/js/views/services/plugins/ez-viewservicebaseplugin.js",
            "modules": {
                "ez-viewservicebaseplugin": 1
            },
            "classes": {
                "eZ.Plugin.ViewServiceBase": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/views/services/plugins/ez-visibilityswitcherplugin.js": {
            "name": "Resources/public/js/views/services/plugins/ez-visibilityswitcherplugin.js",
            "modules": {
                "ez-visibilityswitcherplugin": 1
            },
            "classes": {
                "eZ.Plugin.VisibilitySwitcherPlugin": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            }
        },
        "Resources/public/js/views/services/ez-confirmboxviewservice.js": {
            "name": "Resources/public/js/views/services/ez-confirmboxviewservice.js",
            "modules": {},
            "classes": {
                "eZ.ConfirmBoxViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/services/ez-contentcreateviewservice.js": {
            "name": "Resources/public/js/views/services/ez-contentcreateviewservice.js",
            "modules": {
                "ez-contenteditviewservice": 1
            },
            "classes": {
                "eZ.ContentCreateViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/services/ez-contenteditviewservice.js": {
            "name": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "modules": {},
            "classes": {
                "eZ.ContentEditViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/services/ez-discoverybarviewservice.js": {
            "name": "Resources/public/js/views/services/ez-discoverybarviewservice.js",
            "modules": {
                "ez-discoverybarviewservice": 1
            },
            "classes": {
                "eZ.DiscoveryBarViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/services/ez-languageselectionboxviewservice.js": {
            "name": "Resources/public/js/views/services/ez-languageselectionboxviewservice.js",
            "modules": {
                "ez-languageselectionboxviewservice": 1
            },
            "classes": {
                "eZ.LanguageSelectionBoxViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/services/ez-locationviewviewservice.js": {
            "name": "Resources/public/js/views/services/ez-locationviewviewservice.js",
            "modules": {
                "ez-locationviewviewservice": 1
            },
            "classes": {
                "eZ.LocationViewViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/services/ez-loginformviewservice.js": {
            "name": "Resources/public/js/views/services/ez-loginformviewservice.js",
            "modules": {
                "ez-loginformviewservice": 1
            },
            "classes": {
                "eZ.LoginFormViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/services/ez-navigationhubviewservice.js": {
            "name": "Resources/public/js/views/services/ez-navigationhubviewservice.js",
            "modules": {
                "ez-navigationhubviewservice": 1
            },
            "classes": {
                "eZ.NavigationHubViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/services/ez-notificationhubviewservice.js": {
            "name": "Resources/public/js/views/services/ez-notificationhubviewservice.js",
            "modules": {},
            "classes": {
                "eZ.NotificationHubViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/services/ez-roleserversideviewservice.js": {
            "name": "Resources/public/js/views/services/ez-roleserversideviewservice.js",
            "modules": {},
            "classes": {
                "eZ.RoleServerSideViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/services/ez-sectionserversideviewservice.js": {
            "name": "Resources/public/js/views/services/ez-sectionserversideviewservice.js",
            "modules": {},
            "classes": {
                "eZ.SectionServerSideViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/services/ez-serversideviewservice.js": {
            "name": "Resources/public/js/views/services/ez-serversideviewservice.js",
            "modules": {},
            "classes": {
                "eZ.ServerSideViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/services/ez-universaldiscoveryviewservice.js": {
            "name": "Resources/public/js/views/services/ez-universaldiscoveryviewservice.js",
            "modules": {
                "ez-universaldiscoveryviewservice": 1
            },
            "classes": {
                "eZ.UniversalDiscoveryViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/services/ez-viewservice.js": {
            "name": "Resources/public/js/views/services/ez-viewservice.js",
            "modules": {
                "ez-viewservice": 1
            },
            "classes": {
                "eZ.ViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/tabs/ez-locationviewdetailstabview.js": {
            "name": "Resources/public/js/views/tabs/ez-locationviewdetailstabview.js",
            "modules": {
                "ez-locationviewdetailstabview": 1
            },
            "classes": {
                "eZ.LocationViewDetailsTabView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js": {
            "name": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "modules": {
                "ez-locationviewlocationstabview": 1
            },
            "classes": {
                "eZ.LocationViewLocationsTabView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/tabs/ez-locationviewrelationstabview.js": {
            "name": "Resources/public/js/views/tabs/ez-locationviewrelationstabview.js",
            "modules": {
                "ez-locationviewrelationstabview": 1
            },
            "classes": {
                "eZ.LocationViewRelationsTabView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/tabs/ez-locationviewviewtabview.js": {
            "name": "Resources/public/js/views/tabs/ez-locationviewviewtabview.js",
            "modules": {
                "ez-locationviewviewtabview": 1
            },
            "classes": {
                "eZ.LocationViewViewTabView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/universaldiscovery/ez-universaldiscoverybrowseview.js": {
            "name": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverybrowseview.js",
            "modules": {
                "ez-universaldiscoverybrowseview": 1
            },
            "classes": {
                "eZ.UniversalDiscoveryBrowseView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js": {
            "name": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js",
            "modules": {
                "ez-universaldiscoveryconfirmedlistview": 1
            },
            "classes": {
                "eZ.UniversalDiscoveryConfirmedListView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/universaldiscovery/ez-universaldiscoverymethodbaseview.js": {
            "name": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverymethodbaseview.js",
            "modules": {
                "ez-universaldiscoverymethodbaseview": 1
            },
            "classes": {
                "eZ.UniversalDiscoveryMethodBaseView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js": {
            "name": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "modules": {
                "ez-universaldiscoverysearchview": 1
            },
            "classes": {
                "eZ.UniversalDiscoverySearchView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryselectedview.js": {
            "name": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryselectedview.js",
            "modules": {
                "ez-universaldiscoveryselectedview": 1
            },
            "classes": {
                "eZ.UniversalDiscoverySelectedView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-actionbarview.js": {
            "name": "Resources/public/js/views/ez-actionbarview.js",
            "modules": {
                "ez-actionbarview": 1
            },
            "classes": {
                "eZ.ActionBarView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-barview.js": {
            "name": "Resources/public/js/views/ez-barview.js",
            "modules": {
                "ez-barview": 1
            },
            "classes": {
                "eZ.BarView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-confirmboxview.js": {
            "name": "Resources/public/js/views/ez-confirmboxview.js",
            "modules": {},
            "classes": {
                "eZ.ConfirmBoxView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-contenteditformview.js": {
            "name": "Resources/public/js/views/ez-contenteditformview.js",
            "modules": {
                "ez-contenteditformview": 1
            },
            "classes": {
                "eZ.ContentEditFormView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-contenteditview.js": {
            "name": "Resources/public/js/views/ez-contenteditview.js",
            "modules": {
                "ez-contenteditview": 1
            },
            "classes": {
                "eZ.ContentEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-contenttypeselectorview.js": {
            "name": "Resources/public/js/views/ez-contenttypeselectorview.js",
            "modules": {
                "ez-contenttypeselector": 1
            },
            "classes": {
                "eZ.ContentTypeSelectorView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-dashboardview.js": {
            "name": "Resources/public/js/views/ez-dashboardview.js",
            "modules": {
                "ez-dashboardview": 1
            },
            "classes": {
                "eZ.DashboardView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-discoverybarview.js": {
            "name": "Resources/public/js/views/ez-discoverybarview.js",
            "modules": {
                "ez-discoverybarview": 1
            },
            "classes": {
                "eZ.DiscoveryBarView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-editactionbarview.js": {
            "name": "Resources/public/js/views/ez-editactionbarview.js",
            "modules": {
                "ez-editactionbarview": 1
            },
            "classes": {
                "eZ.EditActionBarView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-editpreviewview.js": {
            "name": "Resources/public/js/views/ez-editpreviewview.js",
            "modules": {
                "ez-editpreviewview": 1
            },
            "classes": {
                "eZ.EditPreviewView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-fieldeditview.js": {
            "name": "Resources/public/js/views/ez-fieldeditview.js",
            "modules": {
                "ez-fieldeditview": 1
            },
            "classes": {
                "eZ.FieldEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-fieldview.js": {
            "name": "Resources/public/js/views/ez-fieldview.js",
            "modules": {
                "ez-fieldview": 1
            },
            "classes": {
                "eZ.FieldView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-languageselectionboxview.js": {
            "name": "Resources/public/js/views/ez-languageselectionboxview.js",
            "modules": {
                "ez-languageselectionboxview": 1
            },
            "classes": {
                "eZ.LanguageSelectionBoxView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-languageswitcherview.js": {
            "name": "Resources/public/js/views/ez-languageswitcherview.js",
            "modules": {
                "ez-languageswitcherview": 1
            },
            "classes": {
                "eZ.LanguageSwitcherView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-locationviewtabview.js": {
            "name": "Resources/public/js/views/ez-locationviewtabview.js",
            "modules": {},
            "classes": {
                "eZ.LocationViewTabView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-locationviewview.js": {
            "name": "Resources/public/js/views/ez-locationviewview.js",
            "modules": {
                "ez-locationviewview": 1
            },
            "classes": {
                "eZ.LocationViewView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-loginformview.js": {
            "name": "Resources/public/js/views/ez-loginformview.js",
            "modules": {
                "ez-loginformview": 1
            },
            "classes": {
                "eZ.LoginFormView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-navigationhubview.js": {
            "name": "Resources/public/js/views/ez-navigationhubview.js",
            "modules": {
                "ez-navigationhubview": 1
            },
            "classes": {
                "eZ.NavigationHubView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-notificationhubview.js": {
            "name": "Resources/public/js/views/ez-notificationhubview.js",
            "modules": {
                "ez-notificationhubview": 1
            },
            "classes": {
                "eZ.NotificationHubView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-notificationview.js": {
            "name": "Resources/public/js/views/ez-notificationview.js",
            "modules": {},
            "classes": {
                "eZ.NotificationView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-rawcontentview.js": {
            "name": "Resources/public/js/views/ez-rawcontentview.js",
            "modules": {
                "ez-rawcontentview": 1
            },
            "classes": {
                "eZ.RawContentView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-selectionfilterview.js": {
            "name": "Resources/public/js/views/ez-selectionfilterview.js",
            "modules": {
                "ez-selectionfilterview": 1
            },
            "classes": {
                "eZ.SelectionFilterView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-serversideview.js": {
            "name": "Resources/public/js/views/ez-serversideview.js",
            "modules": {
                "ez-serversideview": 1
            },
            "classes": {
                "eZ.ServerSideView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-studiopluspresentationview.js": {
            "name": "Resources/public/js/views/ez-studiopluspresentationview.js",
            "modules": {
                "ez-studiopluspresentationview": 1
            },
            "classes": {
                "eZ.StudioPlusPresentationView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-studiopresentationview.js": {
            "name": "Resources/public/js/views/ez-studiopresentationview.js",
            "modules": {
                "ez-studiopresentationview": 1
            },
            "classes": {
                "eZ.StudioPresentationView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-subitemlistview.js": {
            "name": "Resources/public/js/views/ez-subitemlistview.js",
            "modules": {
                "ez-subitemlistview": 1
            },
            "classes": {
                "eZ.SubitemListView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-templatebasedview.js": {
            "name": "Resources/public/js/views/ez-templatebasedview.js",
            "modules": {
                "ez-templatebasedview": 1
            },
            "classes": {
                "eZ.TemplateBasedView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-treeview.js": {
            "name": "Resources/public/js/views/ez-treeview.js",
            "modules": {},
            "classes": {
                "eZ.TreeView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-universaldiscoveryview.js": {
            "name": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "modules": {
                "ez-universaldiscoveryview": 1
            },
            "classes": {
                "eZ.UniversalDiscoveryView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/views/ez-view.js": {
            "name": "Resources/public/js/views/ez-view.js",
            "modules": {
                "ez-view": 1
            },
            "classes": {
                "eZ.View": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/models/extensions/ez-contentinfo-attributes.js": {
            "name": "Resources/public/js/models/extensions/ez-contentinfo-attributes.js",
            "modules": {
                "ez-contentinfo-attributes": 1
            },
            "classes": {
                "eZ.ContentInfoAttributes": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/models/structs/ez-contenttree.js": {
            "name": "Resources/public/js/models/structs/ez-contenttree.js",
            "modules": {
                "ez-contenttree": 1
            },
            "classes": {
                "eZ.ContentTree": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/models/structs/ez-notification.js": {
            "name": "Resources/public/js/models/structs/ez-notification.js",
            "modules": {},
            "classes": {
                "eZ.Notification": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/models/structs/ez-notificationlist.js": {
            "name": "Resources/public/js/models/structs/ez-notificationlist.js",
            "modules": {},
            "classes": {
                "eZ.NotificationList": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/models/ez-contentinfomodel.js": {
            "name": "Resources/public/js/models/ez-contentinfomodel.js",
            "modules": {
                "ez-contentinfomodel": 1
            },
            "classes": {
                "eZ.ContentInfo": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/models/ez-contentmodel.js": {
            "name": "Resources/public/js/models/ez-contentmodel.js",
            "modules": {
                "ez-contentmodel": 1
            },
            "classes": {
                "eZ.Content": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/models/ez-contenttypegroupmodel.js": {
            "name": "Resources/public/js/models/ez-contenttypegroupmodel.js",
            "modules": {
                "ez-contenttypegroupmodel": 1
            },
            "classes": {
                "eZ.ContentTypeGroup": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/models/ez-contenttypemodel.js": {
            "name": "Resources/public/js/models/ez-contenttypemodel.js",
            "modules": {
                "ez-contenttypemodel": 1
            },
            "classes": {
                "eZ.ContentType": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/models/ez-locationmodel.js": {
            "name": "Resources/public/js/models/ez-locationmodel.js",
            "modules": {
                "ez-locationmodel": 1
            },
            "classes": {
                "eZ.Location": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/models/ez-restmodel.js": {
            "name": "Resources/public/js/models/ez-restmodel.js",
            "modules": {
                "ez-restmodel": 1
            },
            "classes": {
                "eZ.RestModel": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/models/ez-usermodel.js": {
            "name": "Resources/public/js/models/ez-usermodel.js",
            "modules": {
                "ez-usermodel": 1
            },
            "classes": {
                "eZ.User": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/models/ez-versionmodel.js": {
            "name": "Resources/public/js/models/ez-versionmodel.js",
            "modules": {
                "ez-versionmodel": 1
            },
            "classes": {
                "eZ.Version": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/extensions/ez-accordion-element.js": {
            "name": "Resources/public/js/extensions/ez-accordion-element.js",
            "modules": {
                "ez-accordion-element": 1
            },
            "classes": {
                "eZ.AccordionElement": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/extensions/ez-asynchronousview.js": {
            "name": "Resources/public/js/extensions/ez-asynchronousview.js",
            "modules": {
                "ez-expandable": 1
            },
            "classes": {
                "eZ.AsynchronousView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/extensions/ez-expandable.js": {
            "name": "Resources/public/js/extensions/ez-expandable.js",
            "modules": {},
            "classes": {
                "eZ.Expandable": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/extensions/ez-height-change.js": {
            "name": "Resources/public/js/extensions/ez-height-change.js",
            "modules": {
                "ez-height-change": 1
            },
            "classes": {
                "eZ.HeightChange": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/extensions/ez-height-fit.js": {
            "name": "Resources/public/js/extensions/ez-height-fit.js",
            "modules": {
                "ez-height-fit": 1
            },
            "classes": {
                "eZ.HeightFit": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/extensions/ez-selection-table.js": {
            "name": "Resources/public/js/extensions/ez-selection-table.js",
            "modules": {
                "ez-selection-table": 1
            },
            "classes": {
                "eZ.SelectionTable": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/extensions/ez-sideviewservice.js": {
            "name": "Resources/public/js/extensions/ez-sideviewservice.js",
            "modules": {
                "ez-sideviewservice": 1
            },
            "classes": {
                "eZ.SideViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/extensions/ez-tabs.js": {
            "name": "Resources/public/js/extensions/ez-tabs.js",
            "modules": {
                "ez-tabs": 1
            },
            "classes": {
                "eZ.Tabs": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/external/ez-capi.js": {
            "name": "Resources/public/js/external/ez-capi.js",
            "modules": {},
            "classes": {
                "eZ.CAPI": 1,
                "eZ.SessionAuthAgent": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/services/ez-googlemapapiloader.js": {
            "name": "Resources/public/js/services/ez-googlemapapiloader.js",
            "modules": {
                "ez-googlemapapiloader": 1
            },
            "classes": {
                "eZ.GoogleMapAPILoader": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/services/ez-pluginregistry.js": {
            "name": "Resources/public/js/services/ez-pluginregistry.js",
            "modules": {
                "ez-pluginregistry": 1
            },
            "classes": {
                "eZ.PluginRegistry": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/alloyeditor/buttons/mixins/blocktextalign.js": {
            "name": "Resources/public/js/alloyeditor/buttons/mixins/blocktextalign.js",
            "modules": {
                "ez-alloyeditor-button-mixin-blocktextalign": 1
            },
            "classes": {
                "eZ.AlloyEditorButton.ButtonBlockTextAlign": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorButton": 1
            }
        },
        "Resources/public/js/alloyeditor/buttons/mixins/embeddiscovercontent.js": {
            "name": "Resources/public/js/alloyeditor/buttons/mixins/embeddiscovercontent.js",
            "modules": {
                "ez-alloyeditor-button-mixin-embeddiscovercontent": 1
            },
            "classes": {
                "eZ.AlloyEditorButton.ButtonEmbedDiscoverContent": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorButton": 1
            }
        },
        "Resources/public/js/alloyeditor/buttons/mixins/embedimage.js": {
            "name": "Resources/public/js/alloyeditor/buttons/mixins/embedimage.js",
            "modules": {
                "ez-alloyeditor-button-mixin-embedimage": 1
            },
            "classes": {
                "eZ.AlloyEditorButton.ButtonEmbedImage": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorButton": 1
            }
        },
        "Resources/public/js/alloyeditor/buttons/blockremove.js": {
            "name": "Resources/public/js/alloyeditor/buttons/blockremove.js",
            "modules": {},
            "classes": {
                "eZ.AlloyEditorButton.ButtonBlockRemove": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorButton": 1
            }
        },
        "Resources/public/js/alloyeditor/buttons/blocktextaligncenter.js": {
            "name": "Resources/public/js/alloyeditor/buttons/blocktextaligncenter.js",
            "modules": {
                "ez-alloyeditor-button-blocktextaligncenter": 1
            },
            "classes": {
                "eZ.AlloyEditorButton.ButtonBlockTextAlignCenter": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorButton": 1
            }
        },
        "Resources/public/js/alloyeditor/buttons/blocktextalignjustify.js": {
            "name": "Resources/public/js/alloyeditor/buttons/blocktextalignjustify.js",
            "modules": {
                "ez-alloyeditor-button-blocktextalignjustify": 1
            },
            "classes": {
                "eZ.AlloyEditorButton.ButtonBlockTextAlignJustify": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorButton": 1
            }
        },
        "Resources/public/js/alloyeditor/buttons/blocktextalignleft.js": {
            "name": "Resources/public/js/alloyeditor/buttons/blocktextalignleft.js",
            "modules": {
                "ez-alloyeditor-button-blocktextalignleft": 1
            },
            "classes": {
                "eZ.AlloyEditorButton.ButtonBlockTextAlignLeft": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorButton": 1
            }
        },
        "Resources/public/js/alloyeditor/buttons/blocktextalignright.js": {
            "name": "Resources/public/js/alloyeditor/buttons/blocktextalignright.js",
            "modules": {
                "ez-alloyeditor-button-blocktextalignright": 1
            },
            "classes": {
                "eZ.AlloyEditorButton.ButtonBlockTextAlignRight": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorButton": 1
            }
        },
        "Resources/public/js/alloyeditor/buttons/embed.js": {
            "name": "Resources/public/js/alloyeditor/buttons/embed.js",
            "modules": {},
            "classes": {
                "eZ.AlloyEditorButton.eZ.AlloyEditor.ButtonEmbed": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Resources/public/js/alloyeditor/buttons/embedhref.js": {
            "name": "Resources/public/js/alloyeditor/buttons/embedhref.js",
            "modules": {
                "ez-alloyeditor-button-remove": 1
            },
            "classes": {
                "eZ.AlloyEditorButton.ButtonEmbedHref": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorButton": 1
            }
        },
        "Resources/public/js/alloyeditor/buttons/heading.js": {
            "name": "Resources/public/js/alloyeditor/buttons/heading.js",
            "modules": {},
            "classes": {
                "eZ.AlloyEditorButton.eZ.AlloyEditor.ButtonHeading": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Resources/public/js/alloyeditor/buttons/image.js": {
            "name": "Resources/public/js/alloyeditor/buttons/image.js",
            "modules": {},
            "classes": {
                "eZ.AlloyEditorButton.eZ.AlloyEditor.ButtonImage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Resources/public/js/alloyeditor/buttons/imagehref.js": {
            "name": "Resources/public/js/alloyeditor/buttons/imagehref.js",
            "modules": {
                "ez-alloyeditor-button-imagehref": 1
            },
            "classes": {
                "eZ.AlloyEditorButton.ButtonImageHref": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorButton": 1
            }
        },
        "Resources/public/js/alloyeditor/buttons/paragraph.js": {
            "name": "Resources/public/js/alloyeditor/buttons/paragraph.js",
            "modules": {},
            "classes": {
                "eZ.AlloyEditorButton.eZ.AlloyEditor.ButtonParagraph": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "Resources/public/js/alloyeditor/plugins/addcontent.js": {
            "name": "Resources/public/js/alloyeditor/plugins/addcontent.js",
            "modules": {},
            "classes": {
                "CKEDITOR.plugins.ezaddcontent": 1
            },
            "fors": {},
            "namespaces": {
                "CKEDITOR.plugins": 1
            }
        },
        "Resources/public/js/alloyeditor/plugins/embed.js": {
            "name": "Resources/public/js/alloyeditor/plugins/embed.js",
            "modules": {},
            "classes": {
                "CKEDITOR.plugins.ezembed": 1
            },
            "fors": {},
            "namespaces": {
                "CKEDITOR.plugins": 1
            }
        },
        "Resources/public/js/alloyeditor/plugins/focusblock.js": {
            "name": "Resources/public/js/alloyeditor/plugins/focusblock.js",
            "modules": {},
            "classes": {
                "CKEDITOR.plugins.ezfocusblock": 1
            },
            "fors": {},
            "namespaces": {
                "CKEDITOR.plugins": 1
            }
        },
        "Resources/public/js/alloyeditor/plugins/removeblock.js": {
            "name": "Resources/public/js/alloyeditor/plugins/removeblock.js",
            "modules": {},
            "classes": {
                "CKEDITOR.plugins.ezremoveblock": 1
            },
            "fors": {},
            "namespaces": {
                "CKEDITOR.plugins": 1
            }
        },
        "Resources/public/js/alloyeditor/processors/base.js": {
            "name": "Resources/public/js/alloyeditor/processors/base.js",
            "modules": {
                "ez-editorcontentprocessorbase": 1
            },
            "classes": {
                "eZ.EditorContentProcessorBase": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/alloyeditor/processors/removeids.js": {
            "name": "Resources/public/js/alloyeditor/processors/removeids.js",
            "modules": {
                "ez-editorcontentprocessorremoveids": 1
            },
            "classes": {
                "eZ.EditorContentProcessorRemoveIds": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/alloyeditor/processors/xhtml5edit.js": {
            "name": "Resources/public/js/alloyeditor/processors/xhtml5edit.js",
            "modules": {
                "ez-editorcontentprocessorxhtml5edit": 1
            },
            "classes": {
                "eZ.EditorContentProcessorXHTML5Edit": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            }
        },
        "Resources/public/js/alloyeditor/toolbars/config/block-base.js": {
            "name": "Resources/public/js/alloyeditor/toolbars/config/block-base.js",
            "modules": {
                "ez-alloyeditor-toolbar-config-block-base": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "Resources/public/js/alloyeditor/toolbars/config/embed.js": {
            "name": "Resources/public/js/alloyeditor/toolbars/config/embed.js",
            "modules": {
                "ez-alloyeditor-toolbar-config-embed": 1
            },
            "classes": {
                "eZ.AlloyEditorToolbarConfig.Embed": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorToolbarConfig": 1
            }
        },
        "Resources/public/js/alloyeditor/toolbars/config/heading.js": {
            "name": "Resources/public/js/alloyeditor/toolbars/config/heading.js",
            "modules": {
                "ez-alloyeditor-toolbar-config-heading": 1
            },
            "classes": {
                "eZ.AlloyEditorToolbarConfig.Heading": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorToolbarConfig": 1
            }
        },
        "Resources/public/js/alloyeditor/toolbars/config/image.js": {
            "name": "Resources/public/js/alloyeditor/toolbars/config/image.js",
            "modules": {
                "ez-alloyeditor-toolbar-config-image": 1
            },
            "classes": {
                "eZ.AlloyEditorToolbarConfig.Image": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorToolbarConfig": 1
            }
        },
        "Resources/public/js/alloyeditor/toolbars/config/link.js": {
            "name": "Resources/public/js/alloyeditor/toolbars/config/link.js",
            "modules": {
                "ez-alloyeditor-toolbar-config-paragraph": 1
            },
            "classes": {
                "eZ.AlloyEditorToolbarConfig.Link": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorToolbarConfig": 1
            }
        },
        "Resources/public/js/alloyeditor/toolbars/config/paragraph.js": {
            "name": "Resources/public/js/alloyeditor/toolbars/config/paragraph.js",
            "modules": {},
            "classes": {
                "eZ.AlloyEditorToolbarConfig.Paragraph": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorToolbarConfig": 1
            }
        },
        "Resources/public/js/alloyeditor/toolbars/config/table.js": {
            "name": "Resources/public/js/alloyeditor/toolbars/config/table.js",
            "modules": {},
            "classes": {
                "eZ.AlloyEditorToolbarConfig.Table": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorToolbarConfig": 1
            }
        },
        "Resources/public/js/alloyeditor/toolbars/config/text.js": {
            "name": "Resources/public/js/alloyeditor/toolbars/config/text.js",
            "modules": {},
            "classes": {
                "eZ.AlloyEditorToolbarConfig.Text": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorToolbarConfig": 1
            }
        }
    },
    "modules": {
        "ez-confirmboxplugin": {
            "name": "ez-confirmboxplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.ConfirmBox": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/apps/plugins/ez-confirmboxplugin.js",
            "line": 14,
            "description": "Provides the confirm box plugin"
        },
        "ez-domstateplugin": {
            "name": "ez-domstateplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.DomState": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/apps/plugins/ez-domstateplugin.js",
            "line": 16,
            "description": "Provides the DOM state plugin"
        },
        "ez-languageselectionboxplugin": {
            "name": "ez-languageselectionboxplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.LanguageSelectionBox": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/apps/plugins/ez-languageselectionboxplugin.js",
            "line": 14,
            "description": "Provides the language selection box plugin"
        },
        "ez-notificationhubplugin": {
            "name": "ez-notificationhubplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.NotificationHub": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/apps/plugins/ez-notificationhubplugin.js",
            "line": 14,
            "description": "Provides the notification hub plugin"
        },
        "ez-positionplugin": {
            "name": "ez-positionplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.Position": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/apps/plugins/ez-positionplugin.js",
            "line": 14,
            "description": "Provides the position plugin"
        },
        "ez-registerhelpersplugin": {
            "name": "ez-registerhelpersplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.RegisterLanguageHelpers": 1,
                "eZ.Plugin.RegisterUrlHelpers": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/apps/plugins/ez-registerurlhelpersplugin.js",
            "line": 14,
            "description": "Provides the register language helpers plugin"
        },
        "ez-universaldiscoveryplugin": {
            "name": "ez-universaldiscoveryplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.DiscoveryWidget": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/apps/plugins/ez-universaldiscoveryplugin.js",
            "line": 14,
            "description": "Provides the universal discovery plugin"
        },
        "ez-updatetreeplugin": {
            "name": "ez-updatetreeplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.UpdateTree": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/apps/plugins/ez-updatetreeplugin.js",
            "line": 14,
            "description": "Provides the update tree plugin"
        },
        "ez-platformuiapp": {
            "name": "ez-platformuiapp",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.PlatformUIApp": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 19,
            "description": "Provides the PlatformUI Application class"
        },
        "ez-buttonactionview": {
            "name": "ez-buttonactionview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.ButtonActionView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/actions/ez-buttonactionview.js",
            "line": 16,
            "description": "Provides the button action view class"
        },
        "ez-createcontentactionview": {
            "name": "ez-createcontentactionview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.CreateContentActionView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/actions/ez-createcontentactionview.js",
            "line": 16,
            "description": "Provides the create content action view class"
        },
        "ez-movecontentactionview": {
            "name": "ez-movecontentactionview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.MoveContentActionView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/actions/ez-movecontentactionview.js",
            "line": 14,
            "description": "Provides the move content action view class"
        },
        "ez-previewactionview": {
            "name": "ez-previewactionview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.PreviewActionView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/actions/ez-previewactionview.js",
            "line": 17,
            "description": "Provides the Preview Action View class"
        },
        "ez-translateactionview": {
            "name": "ez-translateactionview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.TranslateActionView": 1,
                "eZ.TreeActionView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/actions/ez-treeactionview.js",
            "line": 16,
            "description": "Provides the translate action view class"
        },
        "ez-author-editview": {
            "name": "ez-author-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "Author": 1,
                "AuthorList": 1,
                "eZ.AuthorInputView": 1,
                "eZ.AuthorEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 338,
            "description": "Provides the field edit view for the Author (ezauthor) fields"
        },
        "ez-author-view": {
            "name": "ez-author-view",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.AuthorView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-author-view.js",
            "line": 14,
            "description": "Provides the Author View class"
        },
        "ez-binarybase-editview": {
            "name": "ez-binarybase-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.BinaryBaseEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 43,
            "description": "Provides a base class for the field edit view of file based field types\n(Image, BinaryFile, Media)"
        },
        "ez-binaryfile-editview": {
            "name": "ez-binaryfile-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.BinaryFileEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-binaryfile-editview.js",
            "line": 17,
            "description": "Provides the field edit view for the BinaryFile (ezbinaryfile) fields"
        },
        "ez-binaryfile-view": {
            "name": "ez-binaryfile-view",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.BinaryFileView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-binaryfile-view.js",
            "line": 14,
            "description": "Provides the Binary File field view"
        },
        "ez-checkbox-editview": {
            "name": "ez-checkbox-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.CheckboxEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-checkbox-editview.js",
            "line": 17,
            "description": "Provides the field edit view for the Checkbox (ezboolean) fields"
        },
        "ez-checkbox-view": {
            "name": "ez-checkbox-view",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.CheckboxView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-time-view.js",
            "line": 14,
            "description": "Provides the Checkbox view"
        },
        "ez-country-editview": {
            "name": "ez-country-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.CountryEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-country-editview.js",
            "line": 17,
            "description": "Provides the field edit view for the country fields"
        },
        "ez-country-view": {
            "name": "ez-country-view",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.CountryView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-country-view.js",
            "line": 14,
            "description": "Provides the Country field view"
        },
        "ez-date-editview": {
            "name": "ez-date-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.DateEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 17,
            "description": "Provides the field edit view for the date fields"
        },
        "ez-dateandtime-editview": {
            "name": "ez-dateandtime-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.DateAndTimeEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-dateandtime-editview.js",
            "line": 40,
            "description": "Provides the field edit view for the date and time fields"
        },
        "ez-dateandtime-view": {
            "name": "ez-dateandtime-view",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.DateAndTimeView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-dateandtime-view.js",
            "line": 14,
            "description": "Provides the DateAndTime view"
        },
        "ez-emailaddress-editview": {
            "name": "ez-emailaddress-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.EmailAddressEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-emailaddress-editview.js",
            "line": 20,
            "description": "Provides the field edit view for the Email Address (ezemail) fields"
        },
        "ez-float-editview": {
            "name": "ez-float-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.FloatEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-float-editview.js",
            "line": 18,
            "description": "Provides the field edit view for the Float (ezfloat) fields"
        },
        "ez-float-view": {
            "name": "ez-float-view",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.FloatView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-float-view.js",
            "line": 14,
            "description": "Provides the Float field view"
        },
        "ez-image-editview": {
            "name": "ez-image-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.ImageEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-image-editview.js",
            "line": 28,
            "description": "Provides the field edit view for the Image (ezimage) fields"
        },
        "ez-image-view": {
            "name": "ez-image-view",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.ImageView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-image-view.js",
            "line": 14,
            "description": "Provides the Image View class"
        },
        "ez-integer-editview": {
            "name": "ez-integer-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.IntegerEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-integer-editview.js",
            "line": 18,
            "description": "Provides the field edit view for the Integer (ezinteger) fields"
        },
        "ez-integer-view": {
            "name": "ez-integer-view",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.IntegerView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-integer-view.js",
            "line": 14,
            "description": "Provides the Integer field view"
        },
        "ez-isbn-editview": {
            "name": "ez-isbn-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.ISBNEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-isbn-editview.js",
            "line": 16,
            "description": "Provides the field edit view for the ISBN field"
        },
        "ez-keyword-editview": {
            "name": "ez-keyword-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.KeywordEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-keyword-editview.js",
            "line": 16,
            "description": "Provides the field edit view for the keyword fields"
        },
        "ez-keyword-view": {
            "name": "ez-keyword-view",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.KeywordView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-keyword-view.js",
            "line": 14,
            "description": "Provides the Keyword field view"
        },
        "ez-maplocation-editview": {
            "name": "ez-maplocation-editview",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-maplocation-editview.js",
            "line": 8,
            "description": "Provides the field edit view for the Map Location (ezgmaplocation) fields"
        },
        "ez-maplocation-view": {
            "name": "ez-maplocation-view",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.MapLocationEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-maplocation-view.js",
            "line": 22,
            "description": "Provides the Map Location field view"
        },
        "ez-media-editview": {
            "name": "ez-media-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.MediaEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-media-editview.js",
            "line": 27,
            "description": "Provides the field edit view for the Media (ezmedia) fields"
        },
        "ez-media-view": {
            "name": "ez-media-view",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.MediaView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-media-view.js",
            "line": 16,
            "description": "Provides the Media field view"
        },
        "ez-relation-editview": {
            "name": "ez-relation-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.RelationEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-relation-editview.js",
            "line": 16,
            "description": "Provides the field edit view for the relation fields"
        },
        "ez-relation-view": {
            "name": "ez-relation-view",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.RelationView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-relation-view.js",
            "line": 14,
            "description": "Provides the Relation View class"
        },
        "ez-relationlist-editview": {
            "name": "ez-relationlist-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.RelationListEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-relationlist-editview.js",
            "line": 16,
            "description": "Provides the field edit view for the relation list fields"
        },
        "ez-relationlist-view": {
            "name": "ez-relationlist-view",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.RelationListView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-relationlist-view.js",
            "line": 14,
            "description": "Provides the Relation list View class"
        },
        "ez-richtext-editview": {
            "name": "ez-richtext-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.RichTextEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-richtext-editview.js",
            "line": 23,
            "description": "Provides the field edit view for the RichText (ezrichtext) fields"
        },
        "ez-richtext-view": {
            "name": "ez-richtext-view",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.RichTextView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-richtext-view.js",
            "line": 14,
            "description": "Provides the RichText field view class"
        },
        "ez-selection-editview": {
            "name": "ez-selection-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.SelectionEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 18,
            "description": "Provides the field edit view for the Selection (ezselection) fields"
        },
        "ez-selection-view": {
            "name": "ez-selection-view",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.SelectionView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-selection-view.js",
            "line": 14,
            "description": "Provides the Selection View class"
        },
        "ez-textblock-editview": {
            "name": "ez-textblock-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.TextBlockEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-textblock-editview.js",
            "line": 16,
            "description": "Provides the field edit view for the Text Block (eztext) fields"
        },
        "ez-textline-editview": {
            "name": "ez-textline-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.TextLineEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-textline-editview.js",
            "line": 17,
            "description": "Provides the field edit view for the Text Line (ezstring) fields"
        },
        "ez-time-editview": {
            "name": "ez-time-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.timeEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-time-editview.js",
            "line": 16,
            "description": "Provides the field edit view for the time fields"
        },
        "ez-url-editview": {
            "name": "ez-url-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.UrlEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-url-editview.js",
            "line": 16,
            "description": "Provides the field edit view for the Url (ezurl) fields"
        },
        "ez-url-view": {
            "name": "ez-url-view",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.UrlView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-url-view.js",
            "line": 14,
            "description": "Provides the Url field view"
        },
        "ez-user-editview": {
            "name": "ez-user-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.UserEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 21,
            "description": "Provides the field edit view for the User (ezuser) fields"
        },
        "ez-user-view": {
            "name": "ez-user-view",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.UserView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-user-view.js",
            "line": 14,
            "description": "Provides the User View class"
        },
        "ez-xmltext-editview": {
            "name": "ez-xmltext-editview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.XmlTextEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-xmltext-editview.js",
            "line": 16,
            "description": "Provides the field edit view for the XmlText (ezxmltext) fields"
        },
        "ez-xmltext-view": {
            "name": "ez-xmltext-view",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.XmlTextView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/fields/ez-xmltext-view.js",
            "line": 14,
            "description": "Provides the XmlText view"
        },
        "ez-navigationitemparameterview": {
            "name": "ez-navigationitemparameterview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.NavigationItemParameterView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/navigation/ez-navigationitemparameterview.js",
            "line": 14,
            "description": "Provides a navigation item parameter view"
        },
        "ez-navigationitemsubtreeview": {
            "name": "ez-navigationitemsubtreeview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.NavigationItemSubtreeView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/navigation/ez-navigationitemsubtreeview.js",
            "line": 14,
            "description": "Provides a navigation item implementation to point to a subtree"
        },
        "ez-navigationitemview": {
            "name": "ez-navigationitemview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.NavigationItemView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/navigation/ez-navigationitemview.js",
            "line": 16,
            "description": "Provides the navigation item view"
        },
        "ez-contenttypeeditserversideview": {
            "name": "ez-contenttypeeditserversideview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.ContentTypeEditServerSideView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/serverside/ez-contenttypeeditserversideview.js",
            "line": 20,
            "description": "Provides the content type server side view"
        },
        "ez-roleserversideview": {
            "name": "ez-roleserversideview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.RoleServerSideView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/serverside/ez-roleserversideview.js",
            "line": 20,
            "description": "Provides the role server side view"
        },
        "ez-sectionserversideview": {
            "name": "ez-sectionserversideview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.SectionServerSideView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/serverside/ez-sectionserversideview.js",
            "line": 20,
            "description": "Provides the section server side view"
        },
        "ez-contentcreateplugin": {
            "name": "ez-contentcreateplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.ContentCreate": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/plugins/ez-contentcreateplugin.js",
            "line": 14,
            "description": "Provides the content create plugin for the location view view service."
        },
        "ez-contentsetmainlocationplugin": {
            "name": "ez-contentsetmainlocationplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.ContentSetMainLocation": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/plugins/ez-contentsetmainlocationplugin.js",
            "line": 14,
            "description": "Provides the plugin for set the main location"
        },
        "ez-contenttreeplugin": {
            "name": "ez-contenttreeplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.ContentTree": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/plugins/ez-contenttreeplugin.js",
            "line": 14,
            "description": "Provides the base content tree plugin"
        },
        "ez-copycontentplugin": {
            "name": "ez-copycontentplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.CopyContent": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/plugins/ez-copycontentplugin.js",
            "line": 14,
            "description": "Provides the Copy Content plugin."
        },
        "ez-discarddraftplugin": {
            "name": "ez-discarddraftplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.DiscardDraft": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/plugins/ez-discarddraftplugin.js",
            "line": 14,
            "description": "Provides the discard draft plugin."
        },
        "ez-discoverybarcontenttreeplugin": {
            "name": "ez-discoverybarcontenttreeplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.DiscoveryBarContentTree": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/plugins/ez-discoverybarcontenttreeplugin.js",
            "line": 14,
            "description": "Provides the discovery bar content tree plugin for the discovery bar view service."
        },
        "ez-imagevariationloadplugin": {
            "name": "ez-imagevariationloadplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.ImageVariationLoad": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/plugins/ez-imagevariationloadplugin.js",
            "line": 14,
            "description": "Provides the image variation load plugin"
        },
        "ez-locationcreateplugin": {
            "name": "ez-locationcreateplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.LocationCreate": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/plugins/ez-locationcreateplugin.js",
            "line": 14,
            "description": "Provides the plugin for creating location"
        },
        "ez-locationremoveplugin": {
            "name": "ez-locationremoveplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.LocationRemove": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/plugins/ez-locationremoveplugin.js",
            "line": 14,
            "description": "Provides the plugin for removing location"
        },
        "ez-locationsearchplugin": {
            "name": "ez-locationsearchplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.LocationSearch": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/plugins/ez-locationsearchplugin.js",
            "line": 14,
            "description": "Provides the location search plugin"
        },
        "ez-locationsloadplugin": {
            "name": "ez-locationsloadplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.LocationsLoad": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/plugins/ez-locationsloadplugin.js",
            "line": 14,
            "description": "Provides the locations list load plugin"
        },
        "ez-loginavailableplugin": {
            "name": "ez-loginavailableplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.LoginAvailable": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/plugins/ez-loginavailableplugin.js",
            "line": 16,
            "description": "Provides the login available plugin"
        },
        "ez-objectrelationloadplugin": {
            "name": "ez-objectrelationloadplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.ObjectRelationLoad": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/plugins/ez-objectrelationloadplugin.js",
            "line": 14,
            "description": "Provides the object relation load plugin"
        },
        "ez-objectrelationsloadplugin": {
            "name": "ez-objectrelationsloadplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.ObjectRelationsLoad": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/plugins/ez-objectrelationsloadplugin.js",
            "line": 14,
            "description": "Provides the object relations load plugin"
        },
        "ez-publishdraftplugin": {
            "name": "ez-publishdraftplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.PublishDraft": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/plugins/ez-publishdraftplugin.js",
            "line": 14,
            "description": "Provides the publish draft plugin"
        },
        "ez-savedraftplugin": {
            "name": "ez-savedraftplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.SaveDraft": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/plugins/ez-savedraftplugin.js",
            "line": 14,
            "description": "Provides the save draft plugin."
        },
        "ez-universaldiscoverycontenttreeplugin": {
            "name": "ez-universaldiscoverycontenttreeplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.UniversalDiscoveryContentTree": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/plugins/ez-universaldiscoverycontenttreeplugin.js",
            "line": 14,
            "description": "Provides the content tree plugin for the universal discovery"
        },
        "ez-userloadplugin": {
            "name": "ez-userloadplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.UserLoad": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/plugins/ez-userloadplugin.js",
            "line": 14,
            "description": "Provides the user load plugin"
        },
        "ez-viewservicebaseplugin": {
            "name": "ez-viewservicebaseplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.ViewServiceBase": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/plugins/ez-viewservicebaseplugin.js",
            "line": 10,
            "description": "Provides the base class to create view service plugin"
        },
        "ez-visibilityswitcherplugin": {
            "name": "ez-visibilityswitcherplugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Plugin.VisibilitySwitcherPlugin": 1,
                "eZ.ConfirmBoxViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.Plugin": 1,
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/ez-confirmboxviewservice.js",
            "line": 13,
            "description": "Provides the visibility switcher plugin"
        },
        "ez-contenteditviewservice": {
            "name": "ez-contenteditviewservice",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.ContentCreateViewService": 1,
                "eZ.ContentEditViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 14,
            "description": "Provides the view service components to create some content"
        },
        "ez-discoverybarviewservice": {
            "name": "ez-discoverybarviewservice",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.DiscoveryBarViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/ez-discoverybarviewservice.js",
            "line": 14,
            "description": "Provides the view service component for the discovery bar"
        },
        "ez-languageselectionboxviewservice": {
            "name": "ez-languageselectionboxviewservice",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.LanguageSelectionBoxViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/ez-languageselectionboxviewservice.js",
            "line": 13,
            "description": "Provides the language selection box view service class"
        },
        "ez-locationviewviewservice": {
            "name": "ez-locationviewviewservice",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.LocationViewViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/ez-locationviewviewservice.js",
            "line": 14,
            "description": "Provides the view service component for the location view"
        },
        "ez-loginformviewservice": {
            "name": "ez-loginformviewservice",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.LoginFormViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/ez-loginformviewservice.js",
            "line": 14,
            "description": "Provides the view service component for the login form view"
        },
        "ez-navigationhubviewservice": {
            "name": "ez-navigationhubviewservice",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.NavigationHubViewService": 1,
                "eZ.NotificationHubViewService": 1,
                "eZ.RoleServerSideViewService": 1,
                "eZ.SectionServerSideViewService": 1,
                "eZ.ServerSideViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/ez-serversideviewservice.js",
            "line": 18,
            "description": "Provides the view service component for the navigation hub"
        },
        "ez-universaldiscoveryviewservice": {
            "name": "ez-universaldiscoveryviewservice",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.UniversalDiscoveryViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/ez-universaldiscoveryviewservice.js",
            "line": 14,
            "description": "Provides the view service the universal discovery"
        },
        "ez-viewservice": {
            "name": "ez-viewservice",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.ViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/services/ez-viewservice.js",
            "line": 21,
            "description": "Provides the view service base class"
        },
        "ez-locationviewdetailstabview": {
            "name": "ez-locationviewdetailstabview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.LocationViewDetailsTabView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/tabs/ez-locationviewdetailstabview.js",
            "line": 14,
            "description": "Provides the Location View View Tab view class."
        },
        "ez-locationviewlocationstabview": {
            "name": "ez-locationviewlocationstabview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.LocationViewLocationsTabView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "line": 29,
            "description": "Provides the Location View Locations Tab view class."
        },
        "ez-locationviewrelationstabview": {
            "name": "ez-locationviewrelationstabview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.LocationViewRelationsTabView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/tabs/ez-locationviewrelationstabview.js",
            "line": 16,
            "description": "Provides the Location View Relations Tab view class."
        },
        "ez-locationviewviewtabview": {
            "name": "ez-locationviewviewtabview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.LocationViewViewTabView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/tabs/ez-locationviewviewtabview.js",
            "line": 14,
            "description": "Provides the Location View View Tab view class."
        },
        "ez-universaldiscoverybrowseview": {
            "name": "ez-universaldiscoverybrowseview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.UniversalDiscoveryBrowseView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverybrowseview.js",
            "line": 14,
            "description": "Provides the universal discovery browse method"
        },
        "ez-universaldiscoveryconfirmedlistview": {
            "name": "ez-universaldiscoveryconfirmedlistview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.UniversalDiscoveryConfirmedListView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js",
            "line": 18,
            "description": "Provides the universal discovery confirmed list view."
        },
        "ez-universaldiscoverymethodbaseview": {
            "name": "ez-universaldiscoverymethodbaseview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.UniversalDiscoveryMethodBaseView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverymethodbaseview.js",
            "line": 14,
            "description": "Provides the Universal discovery method base view"
        },
        "ez-universaldiscoverysearchview": {
            "name": "ez-universaldiscoverysearchview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.UniversalDiscoverySearchView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 33,
            "description": "Provides the universal discovery search method"
        },
        "ez-universaldiscoveryselectedview": {
            "name": "ez-universaldiscoveryselectedview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.UniversalDiscoverySelectedView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryselectedview.js",
            "line": 16,
            "description": "Provides the universal discovery selected view"
        },
        "ez-actionbarview": {
            "name": "ez-actionbarview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.ActionBarView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-actionbarview.js",
            "line": 14,
            "description": "Provides the Action Bar class"
        },
        "ez-barview": {
            "name": "ez-barview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.BarView": 1,
                "eZ.ConfirmBoxView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-confirmboxview.js",
            "line": 15,
            "description": "Provides the base Bar view class"
        },
        "ez-contenteditformview": {
            "name": "ez-contenteditformview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.ContentEditFormView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-contenteditformview.js",
            "line": 20,
            "description": "Provides the Form View class"
        },
        "ez-contenteditview": {
            "name": "ez-contenteditview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.ContentEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 20,
            "description": "Provides the Content Edit View class"
        },
        "ez-contenttypeselector": {
            "name": "ez-contenttypeselector",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.ContentTypeSelectorView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-contenttypeselectorview.js",
            "line": 18,
            "description": "Provides the content type selector view class"
        },
        "ez-dashboardview": {
            "name": "ez-dashboardview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.DashboardView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-dashboardview.js",
            "line": 14,
            "description": "Provides the Dashboard View class"
        },
        "ez-discoverybarview": {
            "name": "ez-discoverybarview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.DiscoveryBarView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-discoverybarview.js",
            "line": 14,
            "description": "Provides the Discovery Bar class"
        },
        "ez-editactionbarview": {
            "name": "ez-editactionbarview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.EditActionBarView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-editactionbarview.js",
            "line": 14,
            "description": "Provides the Edit Action Bar class"
        },
        "ez-editpreviewview": {
            "name": "ez-editpreviewview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.EditPreviewView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-editpreviewview.js",
            "line": 17,
            "description": "Provides the Edit Preview View class"
        },
        "ez-fieldeditview": {
            "name": "ez-fieldeditview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.FieldEditView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 30,
            "description": "Provides the base class for the field edit views"
        },
        "ez-fieldview": {
            "name": "ez-fieldview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.FieldView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-fieldview.js",
            "line": 17,
            "description": "Provides the generic Field View class"
        },
        "ez-languageselectionboxview": {
            "name": "ez-languageselectionboxview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.LanguageSelectionBoxView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 20,
            "description": "Provides the language selection box view class"
        },
        "ez-languageswitcherview": {
            "name": "ez-languageswitcherview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.LanguageSwitcherView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-languageswitcherview.js",
            "line": 14,
            "description": "Provides the Language Switcher View class"
        },
        "ez-universaldiscoveryview": {
            "name": "ez-universaldiscoveryview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.LocationViewTabView": 1,
                "eZ.UniversalDiscoveryView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 18,
            "description": "Provides the Universal discovery View class"
        },
        "ez-locationviewview": {
            "name": "ez-locationviewview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.LocationViewView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 16,
            "description": "Provides the Location view View class"
        },
        "ez-loginformview": {
            "name": "ez-loginformview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.LoginFormView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-loginformview.js",
            "line": 27,
            "description": "Provides the Login Form View class"
        },
        "ez-navigationhubview": {
            "name": "ez-navigationhubview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.NavigationHubView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 22,
            "description": "Provides the navigation hub view"
        },
        "ez-notificationhubview": {
            "name": "ez-notificationhubview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.NotificationHubView": 1,
                "eZ.NotificationView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-notificationview.js",
            "line": 15,
            "description": "Provides the notification hub view class"
        },
        "ez-rawcontentview": {
            "name": "ez-rawcontentview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.RawContentView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-rawcontentview.js",
            "line": 18,
            "description": "Provides the Raw Content View class"
        },
        "ez-selectionfilterview": {
            "name": "ez-selectionfilterview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.SelectionFilterView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 23,
            "description": "Provides the the Selection Filter View"
        },
        "ez-serversideview": {
            "name": "ez-serversideview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.ServerSideView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-serversideview.js",
            "line": 14,
            "description": "Provides the generic server side view class"
        },
        "ez-studiopluspresentationview": {
            "name": "ez-studiopluspresentationview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.StudioPlusPresentationView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-studiopluspresentationview.js",
            "line": 14,
            "description": "Provides the Studio Plus Presentation View class"
        },
        "ez-studiopresentationview": {
            "name": "ez-studiopresentationview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.StudioPresentationView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-studiopresentationview.js",
            "line": 14,
            "description": "Provides the Studio Presentation View class"
        },
        "ez-subitemlistview": {
            "name": "ez-subitemlistview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.SubitemListView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-subitemlistview.js",
            "line": 21,
            "description": "Provides the subitem list view."
        },
        "ez-templatebasedview": {
            "name": "ez-templatebasedview",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.TemplateBasedView": 1,
                "eZ.TreeView": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-treeview.js",
            "line": 22,
            "description": "Provides the Template Based view"
        },
        "ez-view": {
            "name": "ez-view",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.View": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/views/ez-view.js",
            "line": 14,
            "description": "Provides the base eZ View"
        },
        "ez-contentinfo-attributes": {
            "name": "ez-contentinfo-attributes",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.ContentInfoAttributes": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/models/extensions/ez-contentinfo-attributes.js",
            "line": 14,
            "description": "The content info attributes extension"
        },
        "ez-contenttree": {
            "name": "ez-contenttree",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.ContentTree": 1,
                "eZ.Notification": 1,
                "eZ.NotificationList": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/models/structs/ez-notificationlist.js",
            "line": 13,
            "description": "Provides the content tree structure based on Y.Tree and different plugins"
        },
        "ez-contentinfomodel": {
            "name": "ez-contentinfomodel",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.ContentInfo": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/models/ez-contentinfomodel.js",
            "line": 15,
            "description": "Provides the ContentInfo model class"
        },
        "ez-contentmodel": {
            "name": "ez-contentmodel",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Content": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/models/ez-contentmodel.js",
            "line": 15,
            "description": "Provides the Content model class"
        },
        "ez-contenttypegroupmodel": {
            "name": "ez-contenttypegroupmodel",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.ContentTypeGroup": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/models/ez-contenttypegroupmodel.js",
            "line": 15,
            "description": "Provides the Content type group model class"
        },
        "ez-contenttypemodel": {
            "name": "ez-contenttypemodel",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.ContentType": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/models/ez-contenttypemodel.js",
            "line": 17,
            "description": "Provides the Content type model class"
        },
        "ez-locationmodel": {
            "name": "ez-locationmodel",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Location": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 15,
            "description": "Provides the Location model cass"
        },
        "ez-restmodel": {
            "name": "ez-restmodel",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.RestModel": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/models/ez-restmodel.js",
            "line": 18,
            "description": "Provides the RestModel abstract class"
        },
        "ez-usermodel": {
            "name": "ez-usermodel",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.User": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/models/ez-usermodel.js",
            "line": 15,
            "description": "Provides the User model class"
        },
        "ez-versionmodel": {
            "name": "ez-versionmodel",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Version": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 15,
            "description": "Provides the Version model class"
        },
        "ez-accordion-element": {
            "name": "ez-accordion-element",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.AccordionElement": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/extensions/ez-accordion-element.js",
            "line": 15,
            "description": "The accordion extension"
        },
        "ez-expandable": {
            "name": "ez-expandable",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.AsynchronousView": 1,
                "eZ.Expandable": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/extensions/ez-expandable.js",
            "line": 16,
            "description": "Provides the Asynchronous extension for the view"
        },
        "ez-height-change": {
            "name": "ez-height-change",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.HeightChange": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/extensions/ez-height-change.js",
            "line": 14,
            "description": "The height change extension"
        },
        "ez-height-fit": {
            "name": "ez-height-fit",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.HeightFit": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/extensions/ez-height-fit.js",
            "line": 14,
            "description": "The height fit extension"
        },
        "ez-selection-table": {
            "name": "ez-selection-table",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.SelectionTable": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/extensions/ez-selection-table.js",
            "line": 20,
            "description": "The selection table extension"
        },
        "ez-sideviewservice": {
            "name": "ez-sideviewservice",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.SideViewService": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/extensions/ez-sideviewservice.js",
            "line": 14,
            "description": "The side view service extension"
        },
        "ez-tabs": {
            "name": "ez-tabs",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.Tabs": 1,
                "eZ.CAPI": 1,
                "eZ.SessionAuthAgent": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/external/ez-capi.js",
            "line": 21,
            "description": "The tabs extension"
        },
        "ez-googlemapapiloader": {
            "name": "ez-googlemapapiloader",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.GoogleMapAPILoader": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/services/ez-googlemapapiloader.js",
            "line": 19,
            "description": "Provides the Google map api loader service"
        },
        "ez-pluginregistry": {
            "name": "ez-pluginregistry",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.PluginRegistry": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/services/ez-pluginregistry.js",
            "line": 10,
            "description": "Provides the plugin registry"
        },
        "ez-alloyeditor-button-mixin-blocktextalign": {
            "name": "ez-alloyeditor-button-mixin-blocktextalign",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.AlloyEditorButton.ButtonBlockTextAlign": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorButton": 1
            },
            "tag": "module",
            "file": "Resources/public/js/alloyeditor/buttons/mixins/blocktextalign.js",
            "line": 18,
            "description": "Provides the BlockTextAlign mixin"
        },
        "ez-alloyeditor-button-mixin-embeddiscovercontent": {
            "name": "ez-alloyeditor-button-mixin-embeddiscovercontent",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.AlloyEditorButton.ButtonEmbedDiscoverContent": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorButton": 1
            },
            "tag": "module",
            "file": "Resources/public/js/alloyeditor/buttons/mixins/embeddiscovercontent.js",
            "line": 17,
            "description": "Provides the EmbedDiscoverContent mixin"
        },
        "ez-alloyeditor-button-mixin-embedimage": {
            "name": "ez-alloyeditor-button-mixin-embedimage",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.AlloyEditorButton.ButtonEmbedImage": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorButton": 1
            },
            "tag": "module",
            "file": "Resources/public/js/alloyeditor/buttons/mixins/embedimage.js",
            "line": 16,
            "description": "Provides the ButtonEmbedImage mixin"
        },
        "ez-alloyeditor-button-remove": {
            "name": "ez-alloyeditor-button-remove",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.AlloyEditorButton.ButtonBlockRemove": 1,
                "eZ.AlloyEditorButton.ButtonEmbedHref": 1,
                "eZ.AlloyEditorButton.eZ.AlloyEditor.ButtonHeading": 1,
                "eZ.AlloyEditorButton.eZ.AlloyEditor.ButtonImage": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorButton": 1
            },
            "tag": "module",
            "file": "Resources/public/js/alloyeditor/buttons/image.js",
            "line": 17,
            "description": "Provides the embedhref href button"
        },
        "ez-alloyeditor-button-blocktextaligncenter": {
            "name": "ez-alloyeditor-button-blocktextaligncenter",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.AlloyEditorButton.ButtonBlockTextAlignCenter": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorButton": 1
            },
            "tag": "module",
            "file": "Resources/public/js/alloyeditor/buttons/blocktextaligncenter.js",
            "line": 23,
            "description": "Provides the block text align center button"
        },
        "ez-alloyeditor-button-blocktextalignjustify": {
            "name": "ez-alloyeditor-button-blocktextalignjustify",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.AlloyEditorButton.ButtonBlockTextAlignJustify": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorButton": 1
            },
            "tag": "module",
            "file": "Resources/public/js/alloyeditor/buttons/blocktextalignjustify.js",
            "line": 23,
            "description": "Provides the block text align justify button"
        },
        "ez-alloyeditor-button-blocktextalignleft": {
            "name": "ez-alloyeditor-button-blocktextalignleft",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.AlloyEditorButton.ButtonBlockTextAlignLeft": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorButton": 1
            },
            "tag": "module",
            "file": "Resources/public/js/alloyeditor/buttons/blocktextalignleft.js",
            "line": 23,
            "description": "Provides the block text align left button"
        },
        "ez-alloyeditor-button-blocktextalignright": {
            "name": "ez-alloyeditor-button-blocktextalignright",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.AlloyEditorButton.ButtonBlockTextAlignRight": 1,
                "eZ.AlloyEditorButton.eZ.AlloyEditor.ButtonEmbed": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorButton": 1
            },
            "tag": "module",
            "file": "Resources/public/js/alloyeditor/buttons/embed.js",
            "line": 17,
            "description": "Provides the block text align right button"
        },
        "ez-alloyeditor-button-imagehref": {
            "name": "ez-alloyeditor-button-imagehref",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.AlloyEditorButton.ButtonImageHref": 1,
                "eZ.AlloyEditorButton.eZ.AlloyEditor.ButtonParagraph": 1,
                "CKEDITOR.plugins.ezaddcontent": 1,
                "CKEDITOR.plugins.ezembed": 1,
                "CKEDITOR.plugins.ezfocusblock": 1,
                "CKEDITOR.plugins.ezremoveblock": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorButton": 1,
                "CKEDITOR.plugins": 1
            },
            "tag": "module",
            "file": "Resources/public/js/alloyeditor/plugins/removeblock.js",
            "line": 90,
            "description": "Provides the ezimagehref button"
        },
        "ez-editorcontentprocessorbase": {
            "name": "ez-editorcontentprocessorbase",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.EditorContentProcessorBase": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/alloyeditor/processors/base.js",
            "line": 15,
            "description": "Provides the base EditorContentProcessor"
        },
        "ez-editorcontentprocessorremoveids": {
            "name": "ez-editorcontentprocessorremoveids",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.EditorContentProcessorRemoveIds": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/alloyeditor/processors/removeids.js",
            "line": 15,
            "description": "Provides the removeids EditorContentProcessor"
        },
        "ez-editorcontentprocessorxhtml5edit": {
            "name": "ez-editorcontentprocessorxhtml5edit",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.EditorContentProcessorXHTML5Edit": 1
            },
            "fors": {},
            "namespaces": {
                "eZ": 1
            },
            "tag": "module",
            "file": "Resources/public/js/alloyeditor/processors/xhtml5edit.js",
            "line": 19,
            "description": "Provides the xhtml5edit EditorContentProcessor"
        },
        "ez-alloyeditor-toolbar-config-block-base": {
            "name": "ez-alloyeditor-toolbar-config-block-base",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "Resources/public/js/alloyeditor/toolbars/config/block-base.js",
            "line": 8,
            "description": "Provides base methods to toolbar dedicated to block element (heading,\nparagraph, ...)."
        },
        "ez-alloyeditor-toolbar-config-embed": {
            "name": "ez-alloyeditor-toolbar-config-embed",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.AlloyEditorToolbarConfig.Embed": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorToolbarConfig": 1
            },
            "tag": "module",
            "file": "Resources/public/js/alloyeditor/toolbars/config/embed.js",
            "line": 17,
            "description": "Provides the AlloyEditor `styles` toolbar configuration for embeds."
        },
        "ez-alloyeditor-toolbar-config-heading": {
            "name": "ez-alloyeditor-toolbar-config-heading",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.AlloyEditorToolbarConfig.Heading": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorToolbarConfig": 1
            },
            "tag": "module",
            "file": "Resources/public/js/alloyeditor/toolbars/config/heading.js",
            "line": 29,
            "description": "Provides the AlloyEditor `styles` toolbar configuration for headings."
        },
        "ez-alloyeditor-toolbar-config-image": {
            "name": "ez-alloyeditor-toolbar-config-image",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.AlloyEditorToolbarConfig.Image": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorToolbarConfig": 1
            },
            "tag": "module",
            "file": "Resources/public/js/alloyeditor/toolbars/config/image.js",
            "line": 17,
            "description": "Provides the AlloyEditor `styles` toolbar configuration for images."
        },
        "ez-alloyeditor-toolbar-config-paragraph": {
            "name": "ez-alloyeditor-toolbar-config-paragraph",
            "submodules": {},
            "elements": {},
            "classes": {
                "eZ.AlloyEditorToolbarConfig.Link": 1,
                "eZ.AlloyEditorToolbarConfig.Paragraph": 1,
                "eZ.AlloyEditorToolbarConfig.Table": 1,
                "eZ.AlloyEditorToolbarConfig.Text": 1
            },
            "fors": {},
            "namespaces": {
                "eZ.AlloyEditorToolbarConfig": 1
            },
            "tag": "module",
            "file": "Resources/public/js/alloyeditor/toolbars/config/text.js",
            "line": 16,
            "description": "Provides the AlloyEditor `styles` toolbar configuration for paragraphs."
        }
    },
    "classes": {
        "eZ.Plugin.ConfirmBox": {
            "name": "eZ.Plugin.ConfirmBox",
            "shortname": "eZ.Plugin.ConfirmBox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-confirmboxplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/apps/plugins/ez-confirmboxplugin.js",
            "line": 14,
            "description": "The confirm box plugin. It's a plugin the application to set up the\n`confirmBoxOpen` and `confirmBoxClose` event handlers.",
            "is_constructor": 1,
            "extends": "Plugin.Base"
        },
        "eZ.Plugin.DomState": {
            "name": "eZ.Plugin.DomState",
            "shortname": "eZ.Plugin.DomState",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-domstateplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/apps/plugins/ez-domstateplugin.js",
            "line": 16,
            "description": "DOM State plugin. Reflects the application state in the DOM by setting\nsome classes depending on the events.",
            "is_constructor": 1,
            "extends": "Plugin.Base"
        },
        "eZ.Plugin.LanguageSelectionBox": {
            "name": "eZ.Plugin.LanguageSelectionBox",
            "shortname": "eZ.Plugin.LanguageSelectionBox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-languageselectionboxplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/apps/plugins/ez-languageselectionboxplugin.js",
            "line": 14,
            "description": "The language selection box plugin. It's a plugin the application to set up the\n`languageSelect`, `languageSelected` and `cancelLanguageSelection` event handlers.",
            "is_constructor": 1,
            "extends": "Plugin.Base"
        },
        "eZ.Plugin.NotificationHub": {
            "name": "eZ.Plugin.NotificationHub",
            "shortname": "eZ.Plugin.NotificationHub",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-notificationhubplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/apps/plugins/ez-notificationhubplugin.js",
            "line": 14,
            "description": "The notification hub plugin for the application. It is responsible for\ncatching the `notify` events and to give the corresponding notification\nto the notification hub view service.",
            "is_constructor": 1,
            "extends": "Plugin.Base"
        },
        "eZ.Plugin.Position": {
            "name": "eZ.Plugin.Position",
            "shortname": "eZ.Plugin.Position",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-positionplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/apps/plugins/ez-positionplugin.js",
            "line": 14,
            "description": "The position plugin is responsible for handling the `heightChange` events\nto adjust the margin of the main views node so that the navigation hub\nand notification hub views don't overlap the main views. It also informs\nthe active view of its new position when a heightChange event is caught.",
            "is_constructor": 1,
            "extends": "Plugin.Base"
        },
        "eZ.Plugin.RegisterLanguageHelpers": {
            "name": "eZ.Plugin.RegisterLanguageHelpers",
            "shortname": "eZ.Plugin.RegisterLanguageHelpers",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-registerhelpersplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/apps/plugins/ez-registerlanguagehelpersplugin.js",
            "line": 14,
            "description": "Register Language Helpers plugin for the Platform UI application. It registers\nhandlebars helper allowing to get language name based on language code:\n\n  * `language_name` is for returning language name based on given language code. It takes the\n  language code as an argument",
            "is_constructor": 1,
            "extends": "Plugin.Base"
        },
        "eZ.Plugin.RegisterUrlHelpers": {
            "name": "eZ.Plugin.RegisterUrlHelpers",
            "shortname": "eZ.Plugin.RegisterUrlHelpers",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-registerhelpersplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/apps/plugins/ez-registerurlhelpersplugin.js",
            "line": 14,
            "description": "Register Url Helpers plugin for the Platform UI application. It registers\ntwo handlebars helpers to deal with the url:\n\n  * `path` is meant to build link to application routes. It takes the\n  name of a route and the expected route parameters as a literal object\n  * `asset` is meant to build url to a static file provided by the\n  PlatformUIBundle (typically an image)",
            "is_constructor": 1,
            "extends": "Plugin.Base"
        },
        "eZ.Plugin.DiscoveryWidget": {
            "name": "eZ.Plugin.DiscoveryWidget",
            "shortname": "eZ.Plugin.DiscoveryWidget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-universaldiscoveryplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/apps/plugins/ez-universaldiscoveryplugin.js",
            "line": 14,
            "description": "Universal discovery plugin. It connects the PlatformUI app and the\nuniversal discovery widget by setting the event handlers for the\n`contentDiscover`, `contentDiscovered` and `cancelDiscover` events.\nBy triggering those events, any component can control the universal\ndiscovery widget.",
            "is_constructor": 1,
            "extends": "Plugin.Base"
        },
        "eZ.Plugin.UpdateTree": {
            "name": "eZ.Plugin.UpdateTree",
            "shortname": "eZ.Plugin.UpdateTree",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-updatetreeplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/apps/plugins/ez-updatetreeplugin.js",
            "line": 14,
            "description": "The update tree plugin for the application. It will update the discoveryBar tree\nafter catching an associated event. Events can be send by actions like DELETE/MOVE/COPY/EDIT/CREATE",
            "is_constructor": 1,
            "extends": "Plugin.Base"
        },
        "eZ.PlatformUIApp": {
            "name": "eZ.PlatformUIApp",
            "shortname": "eZ.PlatformUIApp",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-platformuiapp",
            "namespace": "eZ",
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 19,
            "description": "PlatformUI Application",
            "is_constructor": 1,
            "extends": "App"
        },
        "eZ.ButtonActionView": {
            "name": "eZ.ButtonActionView",
            "shortname": "eZ.ButtonActionView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-buttonactionview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/actions/ez-buttonactionview.js",
            "line": 16,
            "description": "Button Action View",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.CreateContentActionView": {
            "name": "eZ.CreateContentActionView",
            "shortname": "eZ.CreateContentActionView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-createcontentactionview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/actions/ez-createcontentactionview.js",
            "line": 16,
            "description": "Create Content Action View",
            "is_constructor": 1,
            "extends": "eZ.ButtonActionView"
        },
        "eZ.MoveContentActionView": {
            "name": "eZ.MoveContentActionView",
            "shortname": "eZ.MoveContentActionView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-movecontentactionview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/actions/ez-movecontentactionview.js",
            "line": 14,
            "description": "Move Content Action View",
            "is_constructor": 1,
            "extends": "eZ.ButtonActionView"
        },
        "eZ.PreviewActionView": {
            "name": "eZ.PreviewActionView",
            "shortname": "eZ.PreviewActionView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-previewactionview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/actions/ez-previewactionview.js",
            "line": 17,
            "description": "Preview Action View",
            "is_constructor": 1,
            "extends": "eZ.ButtonActionView"
        },
        "eZ.TranslateActionView": {
            "name": "eZ.TranslateActionView",
            "shortname": "eZ.TranslateActionView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-translateactionview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/actions/ez-translateactionview.js",
            "line": 20,
            "description": "Translate Action View",
            "is_constructor": 1,
            "extends": "eZ.ButtonActionView"
        },
        "eZ.TreeActionView": {
            "name": "eZ.TreeActionView",
            "shortname": "eZ.TreeActionView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-translateactionview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/actions/ez-treeactionview.js",
            "line": 16,
            "description": "Tree action view",
            "is_constructor": 1,
            "extends": "eZ.ButtonActionView"
        },
        "Author": {
            "name": "Author",
            "shortname": "Author",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-author-editview",
            "namespace": "",
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 21,
            "description": "Internal author model",
            "access": "private",
            "tagname": "",
            "is_constructor": 1,
            "extends": "Model"
        },
        "AuthorList": {
            "name": "AuthorList",
            "shortname": "AuthorList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-author-editview",
            "namespace": "",
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 66,
            "description": "Internal author models list",
            "access": "private",
            "tagname": "",
            "is_constructor": 1,
            "extends": "ModelList"
        },
        "eZ.AuthorInputView": {
            "name": "eZ.AuthorInputView",
            "shortname": "AuthorInputView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-author-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 76,
            "description": "Internal author input view. The author input views are responsible for\nhandling one author.",
            "access": "private",
            "tagname": "",
            "is_constructor": 1,
            "extends": "eZ.FieldEditView"
        },
        "eZ.AuthorEditView": {
            "name": "eZ.AuthorEditView",
            "shortname": "eZ.AuthorEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-author-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 338,
            "description": "Author edit view",
            "is_constructor": 1,
            "extends": "eZ.FieldEditView"
        },
        "eZ.AuthorView": {
            "name": "eZ.AuthorView",
            "shortname": "eZ.AuthorView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-author-view",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-author-view.js",
            "line": 14,
            "description": "The author view",
            "is_constructor": 1,
            "extends": "eZ.FieldView"
        },
        "eZ.BinaryBaseEditView": {
            "name": "eZ.BinaryBaseEditView",
            "shortname": "eZ.BinaryBaseEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-binarybase-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 43,
            "description": "The BinaryBase field edit view. This class is meant to be extended.",
            "is_constructor": 1,
            "extends": "FieldEditView"
        },
        "eZ.BinaryFileEditView": {
            "name": "eZ.BinaryFileEditView",
            "shortname": "eZ.BinaryFileEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-binaryfile-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-binaryfile-editview.js",
            "line": 17,
            "description": "The BinaryFile edit view",
            "is_constructor": 1,
            "extends": "eZ.BinaryBaseEditView"
        },
        "eZ.BinaryFileView": {
            "name": "eZ.BinaryFileView",
            "shortname": "eZ.BinaryFileView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-binaryfile-view",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-binaryfile-view.js",
            "line": 14,
            "description": "The Binary File field view",
            "is_constructor": 1,
            "extends": "eZ.FieldView"
        },
        "eZ.CheckboxEditView": {
            "name": "eZ.CheckboxEditView",
            "shortname": "eZ.CheckboxEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-checkbox-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-checkbox-editview.js",
            "line": 17,
            "description": "Checkbox edit view",
            "is_constructor": 1,
            "extends": "eZ.FieldEditView"
        },
        "eZ.CheckboxView": {
            "name": "eZ.CheckboxView",
            "shortname": "eZ.CheckboxView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-checkbox-view",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-time-view.js",
            "line": 14,
            "description": "The Checkbox field view",
            "is_constructor": 1,
            "extends": "eZ.FieldView"
        },
        "eZ.CountryEditView": {
            "name": "eZ.CountryEditView",
            "shortname": "eZ.CountryEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-country-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-country-editview.js",
            "line": 17,
            "description": "Country edit view",
            "is_constructor": 1,
            "extends": "eZ.SelectionEditView"
        },
        "eZ.CountryView": {
            "name": "eZ.CountryView",
            "shortname": "eZ.CountryView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-country-view",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-country-view.js",
            "line": 14,
            "description": "The country field view",
            "is_constructor": 1,
            "extends": "eZ.FieldView"
        },
        "eZ.DateEditView": {
            "name": "eZ.DateEditView",
            "shortname": "eZ.DateEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-date-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 17,
            "description": "Date edit view",
            "is_constructor": 1,
            "extends": "eZ.FieldEditView"
        },
        "eZ.DateAndTimeEditView": {
            "name": "eZ.DateAndTimeEditView",
            "shortname": "eZ.DateAndTimeEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-dateandtime-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-dateandtime-editview.js",
            "line": 40,
            "description": "Date and time edit view",
            "is_constructor": 1,
            "extends": "eZ.FieldEditView"
        },
        "eZ.DateAndTimeView": {
            "name": "eZ.DateAndTimeView",
            "shortname": "eZ.DateAndTimeView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-dateandtime-view",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-dateandtime-view.js",
            "line": 14,
            "description": "The DateAndTime field view",
            "is_constructor": 1,
            "extends": "eZ.FieldView"
        },
        "eZ.EmailAddressEditView": {
            "name": "eZ.EmailAddressEditView",
            "shortname": "eZ.EmailAddressEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-emailaddress-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-emailaddress-editview.js",
            "line": 20,
            "description": "Email Address edit view",
            "is_constructor": 1,
            "extends": "eZ.FieldEditView"
        },
        "eZ.FloatEditView": {
            "name": "eZ.FloatEditView",
            "shortname": "eZ.FloatEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-float-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-float-editview.js",
            "line": 18,
            "description": "Float edit view",
            "is_constructor": 1,
            "extends": "eZ.FieldEditView"
        },
        "eZ.FloatView": {
            "name": "eZ.FloatView",
            "shortname": "eZ.FloatView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-float-view",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-float-view.js",
            "line": 14,
            "description": "The Float field view",
            "is_constructor": 1,
            "extends": "eZ.FieldView"
        },
        "eZ.ImageEditView": {
            "name": "eZ.ImageEditView",
            "shortname": "eZ.ImageEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-image-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-image-editview.js",
            "line": 28,
            "description": "The Image edit view",
            "is_constructor": 1,
            "extends": "eZ.BinaryBaseEditView"
        },
        "eZ.ImageView": {
            "name": "eZ.ImageView",
            "shortname": "eZ.ImageView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-image-view",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-image-view.js",
            "line": 14,
            "description": "The image view",
            "is_constructor": 1,
            "extends": "eZ.FieldView"
        },
        "eZ.IntegerEditView": {
            "name": "eZ.IntegerEditView",
            "shortname": "eZ.IntegerEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-integer-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-integer-editview.js",
            "line": 18,
            "description": "Integer edit view",
            "is_constructor": 1,
            "extends": "eZ.FieldEditView"
        },
        "eZ.IntegerView": {
            "name": "eZ.IntegerView",
            "shortname": "eZ.IntegerView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-integer-view",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-integer-view.js",
            "line": 14,
            "description": "The Integer field view",
            "is_constructor": 1,
            "extends": "eZ.FieldView"
        },
        "eZ.ISBNEditView": {
            "name": "eZ.ISBNEditView",
            "shortname": "eZ.ISBNEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-isbn-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-isbn-editview.js",
            "line": 16,
            "description": "ISBN edit view",
            "is_constructor": 1,
            "extends": "eZ.FieldEditView"
        },
        "eZ.KeywordEditView": {
            "name": "eZ.KeywordEditView",
            "shortname": "eZ.KeywordEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-keyword-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-keyword-editview.js",
            "line": 16,
            "description": "Keyword edit view",
            "is_constructor": 1,
            "extends": "eZ.FieldEditView"
        },
        "eZ.KeywordView": {
            "name": "eZ.KeywordView",
            "shortname": "eZ.KeywordView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-keyword-view",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-keyword-view.js",
            "line": 14,
            "description": "The keyword field view",
            "is_constructor": 1,
            "extends": "eZ.FieldView"
        },
        "eZ.MapLocationEditView": {
            "name": "eZ.MapLocationEditView",
            "shortname": "eZ.MapLocationEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-maplocation-view",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-maplocation-view.js",
            "line": 22,
            "description": "Map Location edit view",
            "is_constructor": 1,
            "extends": "eZ.FieldEditView"
        },
        "eZ.MediaEditView": {
            "name": "eZ.MediaEditView",
            "shortname": "eZ.MediaEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-media-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-media-editview.js",
            "line": 27,
            "description": "The Media edit view",
            "is_constructor": 1,
            "extends": "eZ.BinaryBaseEditView"
        },
        "eZ.MediaView": {
            "name": "eZ.MediaView",
            "shortname": "eZ.MediaView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-media-view",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-media-view.js",
            "line": 16,
            "description": "The Media field view",
            "is_constructor": 1,
            "extends": "eZ.FieldView"
        },
        "eZ.RelationEditView": {
            "name": "eZ.RelationEditView",
            "shortname": "eZ.RelationEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-relation-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-relation-editview.js",
            "line": 16,
            "description": "Relation edit view",
            "is_constructor": 1,
            "extends": "eZ.FieldEditView"
        },
        "eZ.RelationView": {
            "name": "eZ.RelationView",
            "shortname": "eZ.RelationView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-relation-view",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-relation-view.js",
            "line": 14,
            "description": "The relation view",
            "is_constructor": 1,
            "extends": "eZ.FieldView"
        },
        "eZ.RelationListEditView": {
            "name": "eZ.RelationListEditView",
            "shortname": "eZ.RelationListEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-relationlist-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-relationlist-editview.js",
            "line": 16,
            "description": "Relation list edit view",
            "is_constructor": 1,
            "extends": "eZ.FieldEditView"
        },
        "eZ.RelationListView": {
            "name": "eZ.RelationListView",
            "shortname": "eZ.RelationListView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-relationlist-view",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-relationlist-view.js",
            "line": 14,
            "description": "The relation list view",
            "is_constructor": 1,
            "extends": "eZ.FieldView"
        },
        "eZ.RichTextEditView": {
            "name": "eZ.RichTextEditView",
            "shortname": "eZ.RichTextEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-richtext-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-richtext-editview.js",
            "line": 23,
            "description": "Rich Text edit view",
            "is_constructor": 1,
            "extends": "eZ.FieldEditView"
        },
        "eZ.RichTextView": {
            "name": "eZ.RichTextView",
            "shortname": "eZ.RichTextView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-richtext-view",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-richtext-view.js",
            "line": 14,
            "description": "The field view to display RichText fields",
            "is_constructor": 1,
            "extends": "eZ.FieldView"
        },
        "eZ.SelectionEditView": {
            "name": "eZ.SelectionEditView",
            "shortname": "eZ.SelectionEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-selection-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 18,
            "description": "Selection edit view. It uses the SelectionFilterView to provide a rich UI\nto help selecting one or several items over a long list.",
            "is_constructor": 1,
            "extends": "eZ.FieldEditView"
        },
        "eZ.SelectionView": {
            "name": "eZ.SelectionView",
            "shortname": "eZ.SelectionView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-selection-view",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-selection-view.js",
            "line": 14,
            "description": "The selection view",
            "is_constructor": 1,
            "extends": "eZ.FieldView"
        },
        "eZ.TextBlockEditView": {
            "name": "eZ.TextBlockEditView",
            "shortname": "eZ.TextBlockEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-textblock-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-textblock-editview.js",
            "line": 16,
            "description": "Text Block edit view",
            "is_constructor": 1,
            "extends": "eZ.FieldEditView"
        },
        "eZ.TextLineEditView": {
            "name": "eZ.TextLineEditView",
            "shortname": "eZ.TextLineEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-textline-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-textline-editview.js",
            "line": 17,
            "description": "Text Line edit view",
            "is_constructor": 1,
            "extends": "eZ.FieldEditView"
        },
        "eZ.timeEditView": {
            "name": "eZ.timeEditView",
            "shortname": "eZ.timeEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-time-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-time-editview.js",
            "line": 16,
            "description": "Time edit view",
            "is_constructor": 1,
            "extends": "eZ.FieldEditView"
        },
        "eZ.UrlEditView": {
            "name": "eZ.UrlEditView",
            "shortname": "eZ.UrlEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-url-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-url-editview.js",
            "line": 16,
            "description": "Url edit view",
            "is_constructor": 1,
            "extends": "eZ.FieldEditView"
        },
        "eZ.UrlView": {
            "name": "eZ.UrlView",
            "shortname": "eZ.UrlView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-url-view",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-url-view.js",
            "line": 14,
            "description": "The Url field view",
            "is_constructor": 1,
            "extends": "eZ.FieldView"
        },
        "eZ.UserEditView": {
            "name": "eZ.UserEditView",
            "shortname": "eZ.UserEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-user-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 21,
            "description": "User edit field view",
            "is_constructor": 1,
            "extends": "eZ.FieldEditView"
        },
        "eZ.UserView": {
            "name": "eZ.UserView",
            "shortname": "eZ.UserView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-user-view",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-user-view.js",
            "line": 14,
            "description": "The user view",
            "is_constructor": 1,
            "extends": "eZ.FieldView"
        },
        "eZ.XmlTextEditView": {
            "name": "eZ.XmlTextEditView",
            "shortname": "eZ.XmlTextEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-xmltext-editview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-xmltext-editview.js",
            "line": 16,
            "description": "Xml Text edit view",
            "is_constructor": 1,
            "extends": "eZ.FieldEditView"
        },
        "eZ.XmlTextView": {
            "name": "eZ.XmlTextView",
            "shortname": "eZ.XmlTextView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-xmltext-view",
            "namespace": "eZ",
            "file": "Resources/public/js/views/fields/ez-xmltext-view.js",
            "line": 14,
            "description": "The XmlText field view",
            "is_constructor": 1,
            "extends": "eZ.FieldView"
        },
        "eZ.NavigationItemParameterView": {
            "name": "eZ.NavigationItemParameterView",
            "shortname": "eZ.NavigationItemParameterView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-navigationitemparameterview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/navigation/ez-navigationitemparameterview.js",
            "line": 14,
            "description": "The navigation item parameter view. It can be used when the associated\nroute is generic route and the matching needs to take a parameter into\naccount.",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.NavigationItemSubtreeView": {
            "name": "eZ.NavigationItemSubtreeView",
            "shortname": "eZ.NavigationItemSubtreeView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-navigationitemsubtreeview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/navigation/ez-navigationitemsubtreeview.js",
            "line": 14,
            "description": "The navigation item subtree view. It can be used to represent a\nnavigation item pointing to a location in the location tree.",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.NavigationItemView": {
            "name": "eZ.NavigationItemView",
            "shortname": "eZ.NavigationItemView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-navigationitemview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/navigation/ez-navigationitemview.js",
            "line": 16,
            "description": "The navigation item view. It represents a navigation item to be\nrendered in the navigation of a zone.",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.ContentTypeEditServerSideView": {
            "name": "eZ.ContentTypeEditServerSideView",
            "shortname": "eZ.ContentTypeEditServerSideView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-contenttypeeditserversideview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/serverside/ez-contenttypeeditserversideview.js",
            "line": 20,
            "description": "The content type server side view.",
            "is_constructor": 1,
            "extends": "eZ.ServerSideView"
        },
        "eZ.RoleServerSideView": {
            "name": "eZ.RoleServerSideView",
            "shortname": "eZ.RoleServerSideView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-roleserversideview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/serverside/ez-roleserversideview.js",
            "line": 20,
            "description": "The role server side view. It adds the handling of the role assign\nbutton.",
            "is_constructor": 1,
            "extends": "eZ.ServerSideView"
        },
        "eZ.SectionServerSideView": {
            "name": "eZ.SectionServerSideView",
            "shortname": "eZ.SectionServerSideView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-sectionserversideview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/serverside/ez-sectionserversideview.js",
            "line": 20,
            "description": "The section server side view. It adds the handling of the section assign\nbutton.",
            "is_constructor": 1,
            "extends": "eZ.ServerSideView"
        },
        "eZ.Plugin.ContentCreate": {
            "name": "eZ.Plugin.ContentCreate",
            "shortname": "eZ.Plugin.ContentCreate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-contentcreateplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/views/services/plugins/ez-contentcreateplugin.js",
            "line": 14,
            "description": "Content create plugin.",
            "is_constructor": 1,
            "extends": "eZ.Plugin.ViewServiceBase"
        },
        "eZ.Plugin.ContentSetMainLocation": {
            "name": "eZ.Plugin.ContentSetMainLocation",
            "shortname": "eZ.Plugin.ContentSetMainLocation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-contentsetmainlocationplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/views/services/plugins/ez-contentsetmainlocationplugin.js",
            "line": 14,
            "description": "Set main location plugin. It sets an event handler to set the given location as\nmain location of given content.\n\nIn order to use it you need to fire `setMainLocation` event with parameter\n`locationId` containing the location id which will be set as main location of content.",
            "is_constructor": 1,
            "extends": "eZ.Plugin.ViewServiceBase"
        },
        "eZ.Plugin.ContentTree": {
            "name": "eZ.Plugin.ContentTree",
            "shortname": "eZ.Plugin.ContentTree",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-contenttreeplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/views/services/plugins/ez-contenttreeplugin.js",
            "line": 14,
            "description": "Base Content Tree Plugin. This class provides the methods to handle a\nlazy loaded content tree and is meant to be extended.",
            "is_constructor": 1,
            "extends": "eZ.Plugin.ViewServiceBase"
        },
        "eZ.Plugin.CopyContent": {
            "name": "eZ.Plugin.CopyContent",
            "shortname": "eZ.Plugin.CopyContent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-copycontentplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/views/services/plugins/ez-copycontentplugin.js",
            "line": 14,
            "description": "CopyContentPlugin fires the universal discovery widget to copy\na content under the selected location, on copyAction event.",
            "is_constructor": 1,
            "extends": "eZ.Plugin.ViewServiceBase"
        },
        "eZ.Plugin.DiscardDraft": {
            "name": "eZ.Plugin.DiscardDraft",
            "shortname": "eZ.Plugin.DiscardDraft",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-discarddraftplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/views/services/plugins/ez-discarddraftplugin.js",
            "line": 14,
            "description": "Discard draft plugin. It discards the draft when the discardAction is\ntriggered.",
            "is_constructor": 1,
            "extends": "eZ.Plugin.ViewServiceBase"
        },
        "eZ.Plugin.DiscoveryBarContentTree": {
            "name": "eZ.Plugin.DiscoveryBarContentTree",
            "shortname": "eZ.Plugin.DiscoveryBarContentTree",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-discoverybarcontenttreeplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/views/services/plugins/ez-discoverybarcontenttreeplugin.js",
            "line": 14,
            "description": "Discovery Bar Content Tree Plugin. It enhances the discovery bar to\nhandle the content tree related events and fetching.",
            "is_constructor": 1,
            "extends": "eZ.Plugin.ContentTree"
        },
        "eZ.Plugin.ImageVariationLoad": {
            "name": "eZ.Plugin.ImageVariationLoad",
            "shortname": "eZ.Plugin.ImageVariationLoad",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-imagevariationloadplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/views/services/plugins/ez-imagevariationloadplugin.js",
            "line": 14,
            "description": "Image variation load plugin. It sets an event handler on the\nloadImageVariation event to load an image variation",
            "is_constructor": 1,
            "extends": "eZ.Plugin.ViewServiceBase"
        },
        "eZ.Plugin.LocationCreate": {
            "name": "eZ.Plugin.LocationCreate",
            "shortname": "eZ.Plugin.LocationCreate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-locationcreateplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/views/services/plugins/ez-locationcreateplugin.js",
            "line": 14,
            "description": "Create location plugin. It sets an event handler to create location\nfor given content.\n\nIn order to use it you need to fire `createLocation` event with parameter\n`content` containing the eZ.Content object for which you want to create location.",
            "is_constructor": 1,
            "extends": "eZ.Plugin.ViewServiceBase"
        },
        "eZ.Plugin.LocationRemove": {
            "name": "eZ.Plugin.LocationRemove",
            "shortname": "eZ.Plugin.LocationRemove",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-locationremoveplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/views/services/plugins/ez-locationremoveplugin.js",
            "line": 14,
            "description": "Remove locations plugin. It sets an event handler to remove locations.\n\nIn order to use it you need to fire `removeLocations` event with parameter\n`locations` containing the array with eZ.Location objects that will be removed.",
            "is_constructor": 1,
            "extends": "eZ.Plugin.ViewServiceBase"
        },
        "eZ.Plugin.LocationSearch": {
            "name": "eZ.Plugin.LocationSearch",
            "shortname": "eZ.Plugin.LocationSearch",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-locationsearchplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/views/services/plugins/ez-locationsearchplugin.js",
            "line": 14,
            "description": "Location search plugin. It listens to the `locationSearch` event and\nexecute the corresponding location search.",
            "is_constructor": 1,
            "extends": "eZ.Plugin.ViewServiceBase"
        },
        "eZ.Plugin.LocationsLoad": {
            "name": "eZ.Plugin.LocationsLoad",
            "shortname": "eZ.Plugin.LocationsLoad",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-locationsloadplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/views/services/plugins/ez-locationsloadplugin.js",
            "line": 14,
            "description": "Object locations load plugin. It sets an event handler to load locations\nof content for locations tab in location view.\n\nIn order to use it you need to fire `loadLocations` event with parameter\n`content` containing the eZ.Content object for which you want to load locations.",
            "is_constructor": 1,
            "extends": "eZ.Plugin.ViewServiceBase"
        },
        "eZ.Plugin.LoginAvailable": {
            "name": "eZ.Plugin.LoginAvailable",
            "shortname": "eZ.Plugin.LoginAvailable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-loginavailableplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/views/services/plugins/ez-loginavailableplugin.js",
            "line": 16,
            "description": "Login available plugin. It sets an event handler to check if a login is\navailable.",
            "is_constructor": 1,
            "extends": "eZ.Plugin.ViewServiceBase"
        },
        "eZ.Plugin.ObjectRelationLoad": {
            "name": "eZ.Plugin.ObjectRelationLoad",
            "shortname": "eZ.Plugin.ObjectRelationLoad",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-objectrelationloadplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/views/services/plugins/ez-objectrelationloadplugin.js",
            "line": 14,
            "description": "Object relation load plugin. It sets an event handler to load a content\nin an object relation field.",
            "is_constructor": 1,
            "extends": "eZ.Plugin.ViewServiceBase"
        },
        "eZ.Plugin.ObjectRelationsLoad": {
            "name": "eZ.Plugin.ObjectRelationsLoad",
            "shortname": "eZ.Plugin.ObjectRelationsLoad",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-objectrelationsloadplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/views/services/plugins/ez-objectrelationsloadplugin.js",
            "line": 14,
            "description": "Object relations load plugin. It sets an event handler to load related contents.",
            "is_constructor": 1,
            "extends": "eZ.Plugin.ViewServiceBase"
        },
        "eZ.Plugin.PublishDraft": {
            "name": "eZ.Plugin.PublishDraft",
            "shortname": "eZ.Plugin.PublishDraft",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-publishdraftplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/views/services/plugins/ez-publishdraftplugin.js",
            "line": 14,
            "description": "Publish draft plugin. It publishes the version hold by the host object (a\nservice) when the publishAction event is triggered.",
            "is_constructor": 1,
            "extends": "eZ.Plugin.ViewServiceBase"
        },
        "eZ.Plugin.SaveDraft": {
            "name": "eZ.Plugin.SaveDraft",
            "shortname": "eZ.Plugin.SaveDraft",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-savedraftplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/views/services/plugins/ez-savedraftplugin.js",
            "line": 14,
            "description": "Save draft plugin. It saves the draft when the `saveAction` event is\ntriggered.",
            "is_constructor": 1,
            "extends": "eZ.Plugin.ViewServiceBase"
        },
        "eZ.Plugin.UniversalDiscoveryContentTree": {
            "name": "eZ.Plugin.UniversalDiscoveryContentTree",
            "shortname": "eZ.Plugin.UniversalDiscoveryContentTree",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-universaldiscoverycontenttreeplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/views/services/plugins/ez-universaldiscoverycontenttreeplugin.js",
            "line": 14,
            "description": "Universal Discovery Content Tree Plugin. It enhances the universal\ndiscovery to handle the content tree related events and fetching.",
            "is_constructor": 1,
            "extends": "eZ.Plugin.ContentTree"
        },
        "eZ.Plugin.UserLoad": {
            "name": "eZ.Plugin.UserLoad",
            "shortname": "eZ.Plugin.UserLoad",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-userloadplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/views/services/plugins/ez-userloadplugin.js",
            "line": 14,
            "description": "Object user load plugin. It sets an event handler to load contents\nin an object relation list field.\n\nIn order to use it you need to fire the `loadUser` event with two parameters:\n - `userId` of the user to be loaded\n - `attributeName` where to store the result",
            "is_constructor": 1,
            "extends": "eZ.Plugin.ViewServiceBase"
        },
        "eZ.Plugin.ViewServiceBase": {
            "name": "eZ.Plugin.ViewServiceBase",
            "shortname": "eZ.Plugin.ViewServiceBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-viewservicebaseplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/views/services/plugins/ez-viewservicebaseplugin.js",
            "line": 10,
            "description": "View Service Base Plugin class. This class is meant to be extended to\ncreate view service plugins. It defines 3 public methods you can override\nat will to enrich the behavior of a view service. In addition, it's\ncommon to add an `initializer` method where you can setup custom event\nhandlers and you **must** define a `NS` static property.\n\nAfter creating the class, don't forget to register the plugin in the\neZ.PluginRegistry.",
            "is_constructor": 1,
            "extends": "Plugin.Base",
            "example": [
                "\n     MyPlugin = Y.Base.create('myPlugin', Y.eZ.Plugin.ViewServiceBase,[], {\n         initializer: function () {\n             this.get('host').on('*:customEvent', this._customEventHandler);\n         },\n\n         _customEventHandler: function () {\n             // logic here\n         },\n\n         afterLoad: function (cb) {\n             // logic here to fill someValue\n             this.set('something', someValue);\n             cb();\n         },\n\n         getViewParameters: function () {\n             return {something: this.get('something')};\n         },\n     }, {\n         NS: \"mandatoryStaticNamespace\",\n         ATTRS: {\n             something: {}\n         },\n     });\n\n     Y.eZ.PluginRegistry.registerPlugin(MyPlugin, ['identifierOfTheViewServiceToExtend']);\n"
            ]
        },
        "eZ.Plugin.VisibilitySwitcherPlugin": {
            "name": "eZ.Plugin.VisibilitySwitcherPlugin",
            "shortname": "eZ.Plugin.VisibilitySwitcherPlugin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-visibilityswitcherplugin",
            "namespace": "eZ.Plugin",
            "file": "Resources/public/js/views/services/plugins/ez-visibilityswitcherplugin.js",
            "line": 14,
            "description": "Location visibility switcher plugin. It sets an event handler to update the\nvisibility of a location\n\nIn order to use it you need to fire the `switchVisibility` event with two parameters:\n - `location` to be modified\n - `callback` to be called once done",
            "is_constructor": 1,
            "extends": "eZ.Plugin.ViewServiceBase"
        },
        "eZ.ConfirmBoxViewService": {
            "name": "eZ.ConfirmBoxViewService",
            "shortname": "eZ.ConfirmBoxViewService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-visibilityswitcherplugin",
            "namespace": "eZ",
            "file": "Resources/public/js/views/services/ez-confirmboxviewservice.js",
            "line": 13,
            "description": "The confirm box view service",
            "is_constructor": 1,
            "extends": "eZ.ViewService"
        },
        "eZ.ContentCreateViewService": {
            "name": "eZ.ContentCreateViewService",
            "shortname": "eZ.ContentCreateViewService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-contenteditviewservice",
            "namespace": "eZ",
            "file": "Resources/public/js/views/services/ez-contentcreateviewservice.js",
            "line": 14,
            "description": "Content create view service.\n\nIt initializes the models to use while creating a content.",
            "is_constructor": 1,
            "extends": "eZ.ContentEditViewService"
        },
        "eZ.ContentEditViewService": {
            "name": "eZ.ContentEditViewService",
            "shortname": "eZ.ContentEditViewService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-contenteditviewservice",
            "namespace": "eZ",
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 14,
            "description": "Content edit view service.\n\nLoads the models needed by the content edit view",
            "is_constructor": 1,
            "extends": "eZ.ViewService"
        },
        "eZ.DiscoveryBarViewService": {
            "name": "eZ.DiscoveryBarViewService",
            "shortname": "eZ.DiscoveryBarViewService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-discoverybarviewservice",
            "namespace": "eZ",
            "file": "Resources/public/js/views/services/ez-discoverybarviewservice.js",
            "line": 14,
            "description": "Discovery bar view service.",
            "is_constructor": 1,
            "extends": "eZ.ViewService"
        },
        "eZ.LanguageSelectionBoxViewService": {
            "name": "eZ.LanguageSelectionBoxViewService",
            "shortname": "eZ.LanguageSelectionBoxViewService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-languageselectionboxviewservice",
            "namespace": "eZ",
            "file": "Resources/public/js/views/services/ez-languageselectionboxviewservice.js",
            "line": 13,
            "description": "The language selection box view service",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.LocationViewViewService": {
            "name": "eZ.LocationViewViewService",
            "shortname": "eZ.LocationViewViewService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-locationviewviewservice",
            "namespace": "eZ",
            "file": "Resources/public/js/views/services/ez-locationviewviewservice.js",
            "line": 14,
            "description": "Location view view service.\n\nLoads the models needed by the location view",
            "is_constructor": 1,
            "extends": "eZ.ViewService"
        },
        "eZ.LoginFormViewService": {
            "name": "eZ.LoginFormViewService",
            "shortname": "eZ.LoginFormViewService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-loginformviewservice",
            "namespace": "eZ",
            "file": "Resources/public/js/views/services/ez-loginformviewservice.js",
            "line": 14,
            "description": "Login form view service.",
            "is_constructor": 1,
            "extends": "eZ.ViewService"
        },
        "eZ.NavigationHubViewService": {
            "name": "eZ.NavigationHubViewService",
            "shortname": "eZ.NavigationHubViewService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ",
            "file": "Resources/public/js/views/services/ez-navigationhubviewservice.js",
            "line": 14,
            "description": "Navigation hub view service.",
            "is_constructor": 1,
            "extends": "eZ.ViewService"
        },
        "eZ.NotificationHubViewService": {
            "name": "eZ.NotificationHubViewService",
            "shortname": "eZ.NotificationHubViewService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ",
            "file": "Resources/public/js/views/services/ez-notificationhubviewservice.js",
            "line": 13,
            "description": "The notification hub view service. It is responsible for adding or\nupdating the notifications in the notification list.",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.RoleServerSideViewService": {
            "name": "eZ.RoleServerSideViewService",
            "shortname": "eZ.RoleServerSideViewService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ",
            "file": "Resources/public/js/views/services/ez-roleserversideviewservice.js",
            "line": 14,
            "description": "The Role Server Side View Service class.",
            "is_constructor": 1,
            "extends": "eZ.ServerSideViewService"
        },
        "eZ.SectionServerSideViewService": {
            "name": "eZ.SectionServerSideViewService",
            "shortname": "eZ.SectionServerSideViewService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ",
            "file": "Resources/public/js/views/services/ez-sectionserversideviewservice.js",
            "line": 14,
            "description": "The Section Server Side View Service class.",
            "is_constructor": 1,
            "extends": "eZ.ServerSideViewService"
        },
        "eZ.ServerSideViewService": {
            "name": "eZ.ServerSideViewService",
            "shortname": "eZ.ServerSideViewService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ",
            "file": "Resources/public/js/views/services/ez-serversideviewservice.js",
            "line": 18,
            "description": "The Server Side View Service class. It is meant to be used to load the\ncontent of a server side view.",
            "is_constructor": 1,
            "extends": "eZ.ViewService"
        },
        "eZ.UniversalDiscoveryViewService": {
            "name": "eZ.UniversalDiscoveryViewService",
            "shortname": "eZ.UniversalDiscoveryViewService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-universaldiscoveryviewservice",
            "namespace": "eZ",
            "file": "Resources/public/js/views/services/ez-universaldiscoveryviewservice.js",
            "line": 14,
            "description": "View service for the universal discovery widget. It only provides the\nconfiguration to the universal discovery view.",
            "is_constructor": 1,
            "extends": "eZ.ViewService"
        },
        "eZ.ViewService": {
            "name": "eZ.ViewService",
            "shortname": "eZ.ViewService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-viewservice",
            "namespace": "eZ",
            "file": "Resources/public/js/views/services/ez-viewservice.js",
            "line": 21,
            "description": "View service base class.\nThe classes extending this one are supposed to be used in the route\ndefinition, see {{#crossLink \"eZ.PlatformUIApp\"}}the route\nattribute of eZ.PlatformUIApp{{/crossLink}}",
            "is_constructor": 1,
            "extends": "Base"
        },
        "eZ.LocationViewDetailsTabView": {
            "name": "eZ.LocationViewDetailsTabView",
            "shortname": "eZ.LocationViewDetailsTabView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-locationviewdetailstabview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/tabs/ez-locationviewdetailstabview.js",
            "line": 14,
            "description": "The Location View View Details tab class.",
            "is_constructor": 1,
            "extends": "eZ.LocationViewTabView"
        },
        "eZ.LocationViewLocationsTabView": {
            "name": "eZ.LocationViewLocationsTabView",
            "shortname": "eZ.LocationViewLocationsTabView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-locationviewlocationstabview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "line": 29,
            "description": "The Location View Locations Tab View class.",
            "is_constructor": 1,
            "extends": "eZ.LocationViewTabView"
        },
        "eZ.LocationViewRelationsTabView": {
            "name": "eZ.LocationViewRelationsTabView",
            "shortname": "eZ.LocationViewRelationsTabView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-locationviewrelationstabview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/tabs/ez-locationviewrelationstabview.js",
            "line": 16,
            "description": "The Location View Relations tab class.",
            "is_constructor": 1,
            "extends": "eZ.LocationViewTabView"
        },
        "eZ.LocationViewViewTabView": {
            "name": "eZ.LocationViewViewTabView",
            "shortname": "eZ.LocationViewViewTabView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-locationviewviewtabview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/tabs/ez-locationviewviewtabview.js",
            "line": 14,
            "description": "The Location View View tab class.",
            "is_constructor": 1,
            "extends": "eZ.LocationViewTabView"
        },
        "eZ.UniversalDiscoveryBrowseView": {
            "name": "eZ.UniversalDiscoveryBrowseView",
            "shortname": "eZ.UniversalDiscoveryBrowseView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-universaldiscoverybrowseview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverybrowseview.js",
            "line": 14,
            "description": "The universal discovery browse method view. It allows the user to pick a\ncontent in the repository by browsing using a tree.",
            "is_constructor": 1,
            "extends": "eZ.UniversalDiscoveryMethodBaseView"
        },
        "eZ.UniversalDiscoveryConfirmedListView": {
            "name": "eZ.UniversalDiscoveryConfirmedListView",
            "shortname": "eZ.UniversalDiscoveryConfirmedListView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-universaldiscoveryconfirmedlistview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js",
            "line": 18,
            "description": "The universal discovery confirmed list view. It displays the contents\nchoosen by the user in the universal discovery widget. By default, only\nthe last 3 contents are really displayed.",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.UniversalDiscoveryMethodBaseView": {
            "name": "eZ.UniversalDiscoveryMethodBaseView",
            "shortname": "eZ.UniversalDiscoveryMethodBaseView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-universaldiscoverymethodbaseview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverymethodbaseview.js",
            "line": 14,
            "description": "Universal Discovery method base view class. This class is meant to be\nextended to provide a discovery method in the universal discovery view.\nWhen extending this class, the minimum is to set a `title` and an\n`identifier` to the method and of course to implement the discovery\nlogic.",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.UniversalDiscoverySearchView": {
            "name": "eZ.UniversalDiscoverySearchView",
            "shortname": "eZ.UniversalDiscoverySearchView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 33,
            "description": "The universal discovery search method view. It allows the user to pick a\ncontent from the list which is the result of the search.",
            "is_constructor": 1,
            "extends": "eZ.UniversalDiscoveryMethodBaseView"
        },
        "eZ.UniversalDiscoverySelectedView": {
            "name": "eZ.UniversalDiscoverySelectedView",
            "shortname": "eZ.UniversalDiscoverySelectedView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-universaldiscoveryselectedview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryselectedview.js",
            "line": 16,
            "description": "Universal Discovery Selected View. It's a view meant to display the\ncurrently selected content in the different discovery method.",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.ActionBarView": {
            "name": "eZ.ActionBarView",
            "shortname": "eZ.ActionBarView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-actionbarview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-actionbarview.js",
            "line": 14,
            "description": "The action bar",
            "is_constructor": 1,
            "extends": "eZ.BarView"
        },
        "eZ.BarView": {
            "name": "eZ.BarView",
            "shortname": "eZ.BarView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-barview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-barview.js",
            "line": 20,
            "description": "The base bar view",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.ConfirmBoxView": {
            "name": "eZ.ConfirmBoxView",
            "shortname": "eZ.ConfirmBoxView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-barview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-confirmboxview.js",
            "line": 15,
            "description": "The confirm box view.",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.ContentEditFormView": {
            "name": "eZ.ContentEditFormView",
            "shortname": "eZ.ContentEditFormView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-contenteditformview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-contenteditformview.js",
            "line": 20,
            "description": "The form view",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.ContentEditView": {
            "name": "eZ.ContentEditView",
            "shortname": "eZ.ContentEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-contenteditview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 20,
            "description": "The content edit view",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.ContentTypeSelectorView": {
            "name": "eZ.ContentTypeSelectorView",
            "shortname": "eZ.ContentTypeSelectorView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-contenttypeselector",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-contenttypeselectorview.js",
            "line": 18,
            "description": "Content type selector view",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.DashboardView": {
            "name": "eZ.DashboardView",
            "shortname": "eZ.DashboardView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-dashboardview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-dashboardview.js",
            "line": 14,
            "description": "The dashboard view",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.DiscoveryBarView": {
            "name": "eZ.DiscoveryBarView",
            "shortname": "eZ.DiscoveryBarView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-discoverybarview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-discoverybarview.js",
            "line": 14,
            "description": "The discovery bar",
            "is_constructor": 1,
            "extends": "eZ.BarView"
        },
        "eZ.EditActionBarView": {
            "name": "eZ.EditActionBarView",
            "shortname": "eZ.EditActionBarView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-editactionbarview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-editactionbarview.js",
            "line": 14,
            "description": "The edit action bar",
            "is_constructor": 1,
            "extends": "eZ.BarView"
        },
        "eZ.EditPreviewView": {
            "name": "eZ.EditPreviewView",
            "shortname": "eZ.EditPreviewView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-editpreviewview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-editpreviewview.js",
            "line": 17,
            "description": "The edit preview view",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.FieldEditView": {
            "name": "eZ.FieldEditView",
            "shortname": "eZ.FieldEditView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-fieldeditview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 30,
            "description": "Field Edit View. This is an *abstract* class, so it's not supposed to be\nused directly.",
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.FieldView": {
            "name": "eZ.FieldView",
            "shortname": "eZ.FieldView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-fieldview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-fieldview.js",
            "line": 17,
            "description": "The field view",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.LanguageSelectionBoxView": {
            "name": "eZ.LanguageSelectionBoxView",
            "shortname": "eZ.LanguageSelectionBoxView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-languageselectionboxview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 20,
            "description": "The language selection box view.",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.LanguageSwitcherView": {
            "name": "eZ.LanguageSwitcherView",
            "shortname": "eZ.LanguageSwitcherView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-languageswitcherview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-languageswitcherview.js",
            "line": 14,
            "description": "The raw content view",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.LocationViewTabView": {
            "name": "eZ.LocationViewTabView",
            "shortname": "eZ.LocationViewTabView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-locationviewtabview.js",
            "line": 14,
            "description": "The location view tab view base class. It defines the minimum required\nattributes for a tab in the location view.",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.LocationViewView": {
            "name": "eZ.LocationViewView",
            "shortname": "eZ.LocationViewView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-locationviewview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 16,
            "description": "The location view view",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.LoginFormView": {
            "name": "eZ.LoginFormView",
            "shortname": "eZ.LoginFormView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-loginformview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-loginformview.js",
            "line": 27,
            "description": "The login form view",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.NavigationHubView": {
            "name": "eZ.NavigationHubView",
            "shortname": "eZ.NavigationHubView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-navigationhubview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 22,
            "description": "The navigation hub view",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.NotificationHubView": {
            "name": "eZ.NotificationHubView",
            "shortname": "eZ.NotificationHubView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-notificationhubview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-notificationhubview.js",
            "line": 13,
            "description": "The notification hub view.",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.NotificationView": {
            "name": "eZ.NotificationView",
            "shortname": "eZ.NotificationView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-notificationhubview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-notificationview.js",
            "line": 15,
            "description": "The notification view.",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.RawContentView": {
            "name": "eZ.RawContentView",
            "shortname": "eZ.RawContentView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-rawcontentview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-rawcontentview.js",
            "line": 18,
            "description": "The raw content view",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.SelectionFilterView": {
            "name": "eZ.SelectionFilterView",
            "shortname": "eZ.SelectionFilterView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-selectionfilterview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 23,
            "description": "A view allowing to select one or several items amongst a list and to\nfilter the list by typing some text in an input field. It is based on YUI\nAutoCompleteBase component.\n\nThis view is meant to progressively enhance an existing markup:\n\n    <div class=\"container\">\n       <input type=\"text\">\n       <ul></ul>\n    </div>\n\nThen, you can instantiate the view with:\n\n    new Y.eZ.SelectionFilterView({\n        container: '.container',\n        inputNode: '.container input',\n        listNode: '.container ul',\n        source: ['Iron Man', 'Hulk', 'Thor', 'Black Widow']\n    });",
            "is_constructor": 1,
            "extends": "AutoCompleteBase"
        },
        "eZ.ServerSideView": {
            "name": "eZ.ServerSideView",
            "shortname": "eZ.ServerSideView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-serversideview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-serversideview.js",
            "line": 14,
            "description": "The server side view",
            "is_constructor": 1,
            "extends": "eZ.View"
        },
        "eZ.StudioPlusPresentationView": {
            "name": "eZ.StudioPlusPresentationView",
            "shortname": "eZ.StudioPlusPresentationView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-studiopluspresentationview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-studiopluspresentationview.js",
            "line": 14,
            "description": "The studio plus presentation view",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.StudioPresentationView": {
            "name": "eZ.StudioPresentationView",
            "shortname": "eZ.StudioPresentationView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-studiopresentationview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-studiopresentationview.js",
            "line": 14,
            "description": "The studio presentation view",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.SubitemListView": {
            "name": "eZ.SubitemListView",
            "shortname": "eZ.SubitemListView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-subitemlistview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-subitemlistview.js",
            "line": 21,
            "description": "The subitem list view.",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.TemplateBasedView": {
            "name": "eZ.TemplateBasedView",
            "shortname": "eZ.TemplateBasedView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-templatebasedview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-templatebasedview.js",
            "line": 16,
            "description": "Template based view. An abstract class that provides helpers to deal with\nview rendered with templates.",
            "extends": "View"
        },
        "eZ.TreeView": {
            "name": "eZ.TreeView",
            "shortname": "eZ.TreeView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-templatebasedview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-treeview.js",
            "line": 22,
            "description": "Tree View class. It is meant to display a lazily loaded tree.",
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.UniversalDiscoveryView": {
            "name": "eZ.UniversalDiscoveryView",
            "shortname": "eZ.UniversalDiscoveryView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 18,
            "description": "The universal discovery view is a widget to allow the user to pick one or\nseveral contents in the repository.",
            "is_constructor": 1,
            "extends": "eZ.TemplateBasedView"
        },
        "eZ.View": {
            "name": "eZ.View",
            "shortname": "eZ.View",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-view",
            "namespace": "eZ",
            "file": "Resources/public/js/views/ez-view.js",
            "line": 14,
            "description": "An abstract class that adds the `active` attribute so that any view can\ndetect its state and react when it is changed",
            "extends": "View"
        },
        "eZ.ContentInfoAttributes": {
            "name": "eZ.ContentInfoAttributes",
            "shortname": "eZ.ContentInfoAttributes",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "eZ.RestModel"
            ],
            "module": "ez-contentinfo-attributes",
            "namespace": "eZ",
            "file": "Resources/public/js/models/extensions/ez-contentinfo-attributes.js",
            "line": 14,
            "description": "Extension providing ContentInfo attributes for Models needing them."
        },
        "eZ.ContentTree": {
            "name": "eZ.ContentTree",
            "shortname": "eZ.ContentTree",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-contenttree",
            "namespace": "eZ",
            "file": "Resources/public/js/models/structs/ez-contenttree.js",
            "line": 14,
            "description": "Content tree structure",
            "is_constructor": 1,
            "extends": "Tree"
        },
        "eZ.Notification": {
            "name": "eZ.Notification",
            "shortname": "eZ.Notification",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-contenttree",
            "namespace": "eZ",
            "file": "Resources/public/js/models/structs/ez-notification.js",
            "line": 13,
            "description": "The Notification Model",
            "is_constructor": 1,
            "extends": "Model"
        },
        "eZ.NotificationList": {
            "name": "eZ.NotificationList",
            "shortname": "eZ.NotificationList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-contenttree",
            "namespace": "eZ",
            "file": "Resources/public/js/models/structs/ez-notificationlist.js",
            "line": 13,
            "description": "The Notification Model List",
            "is_constructor": 1,
            "extends": "ModelList"
        },
        "eZ.ContentInfo": {
            "name": "eZ.ContentInfo",
            "shortname": "eZ.ContentInfo",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-contentinfomodel",
            "namespace": "eZ",
            "file": "Resources/public/js/models/ez-contentinfomodel.js",
            "line": 15,
            "description": "ContentInfo model",
            "is_constructor": 1,
            "extends": "eZ.RestModel"
        },
        "eZ.Content": {
            "name": "eZ.Content",
            "shortname": "eZ.Content",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-contentmodel",
            "namespace": "eZ",
            "file": "Resources/public/js/models/ez-contentmodel.js",
            "line": 15,
            "description": "Content model",
            "is_constructor": 1,
            "extends": "eZ.RestModel"
        },
        "eZ.ContentTypeGroup": {
            "name": "eZ.ContentTypeGroup",
            "shortname": "eZ.ContentTypeGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-contenttypegroupmodel",
            "namespace": "eZ",
            "file": "Resources/public/js/models/ez-contenttypegroupmodel.js",
            "line": 15,
            "description": "Content type group model",
            "is_constructor": 1,
            "extends": "eZ.RestModel"
        },
        "eZ.ContentType": {
            "name": "eZ.ContentType",
            "shortname": "eZ.ContentType",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-contenttypemodel",
            "namespace": "eZ",
            "file": "Resources/public/js/models/ez-contenttypemodel.js",
            "line": 17,
            "description": "Content type model",
            "is_constructor": 1,
            "extends": "eZ.RestModel"
        },
        "eZ.Location": {
            "name": "eZ.Location",
            "shortname": "eZ.Location",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-locationmodel",
            "namespace": "eZ",
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 15,
            "description": "Location model",
            "is_constructor": 1,
            "extends": "Model"
        },
        "eZ.RestModel": {
            "name": "eZ.RestModel",
            "shortname": "eZ.RestModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-restmodel",
            "namespace": "eZ",
            "file": "Resources/public/js/models/ez-restmodel.js",
            "line": 18,
            "description": "Abstract class for the model objects loaded from the\neZ Publish REST API. It provides some helper methods to deal with type\nconversions and generic mapping system to map the JSON structure the\nattributes.",
            "is_constructor": 1,
            "extends": "Model"
        },
        "eZ.User": {
            "name": "eZ.User",
            "shortname": "eZ.User",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-usermodel",
            "namespace": "eZ",
            "file": "Resources/public/js/models/ez-usermodel.js",
            "line": 15,
            "description": "User model used to represent an eZ Publish user.",
            "is_constructor": 1,
            "extends": "eZ.RestModel"
        },
        "eZ.Version": {
            "name": "eZ.Version",
            "shortname": "eZ.Version",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-versionmodel",
            "namespace": "eZ",
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 15,
            "description": "Version model",
            "is_constructor": 1,
            "extends": "eZ.RestModel"
        },
        "eZ.AccordionElement": {
            "name": "eZ.AccordionElement",
            "shortname": "eZ.AccordionElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Y.View"
            ],
            "module": "ez-accordion-element",
            "namespace": "eZ",
            "file": "Resources/public/js/extensions/ez-accordion-element.js",
            "line": 15,
            "description": "Extension providing the `_collapse` method which allows to create an\naccordion effect on elements with a nice transition on its height."
        },
        "eZ.AsynchronousView": {
            "name": "eZ.AsynchronousView",
            "shortname": "eZ.AsynchronousView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Y.View"
            ],
            "module": "ez-expandable",
            "namespace": "eZ",
            "file": "Resources/public/js/extensions/ez-asynchronousview.js",
            "line": 14,
            "description": "Views extension providing the concept of asynchronously rendered view.\nAn asynchronous view is first rendered in a *loading state*, then fires\nan event to get the missing data and when it gets them, it is rerendered.\nThe loading errors are also handled and such a view can also have a\n*retry* button. When a view is extended with this extension, its\ninitializer method should set the required properties `_fireMethod` and\noptionally the `_watchAttribute` to subscribe to the corresponding change\nevent."
        },
        "eZ.Expandable": {
            "name": "eZ.Expandable",
            "shortname": "eZ.Expandable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Y.View"
            ],
            "module": "ez-expandable",
            "namespace": "eZ",
            "file": "Resources/public/js/extensions/ez-expandable.js",
            "line": 16,
            "description": "Views extension providing the concept of expanded state. When `expanded`,\nthe view container gets the `is-expanded` class which allows to style the\nview accordingly."
        },
        "eZ.HeightChange": {
            "name": "eZ.HeightChange",
            "shortname": "eZ.HeightChange",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Y.View"
            ],
            "module": "ez-height-change",
            "namespace": "eZ",
            "file": "Resources/public/js/extensions/ez-height-change.js",
            "line": 14,
            "description": "Views extension providing base methods to fire a `heightChange` event."
        },
        "eZ.HeightFit": {
            "name": "eZ.HeightFit",
            "shortname": "eZ.HeightFit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Y.View"
            ],
            "module": "ez-height-fit",
            "namespace": "eZ",
            "file": "Resources/public/js/extensions/ez-height-fit.js",
            "line": 14,
            "description": "Views extension providing the content of height fit . When, `fitted to height`, the view\ncontainer scales to match the viewport's height new dimension."
        },
        "eZ.SelectionTable": {
            "name": "eZ.SelectionTable",
            "shortname": "eZ.SelectionTable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Y.View"
            ],
            "module": "ez-selection-table",
            "namespace": "eZ",
            "file": "Resources/public/js/extensions/ez-selection-table.js",
            "line": 20,
            "description": "Extension for the views providing a table that is meant to select\nsome items and to enable one or several buttons depending on the\nselection.\n\nThis extensions expects the following markup to work correctly:\n\n     <table class=\"ez-selection-table\" data-selection-buttons=\".mybutton\">\n     <tr class=\"ez-selection-table-row\">\n         <td>\n             <input type=\"checkbox\" class=\"ez-selection-table-checkbox\">\n         </td>\n     </tr>\n     <!-- ... -->\n     </table>\n     <button class=\"mybutton\" disabled=\"disabled\">Do!</button>\n\nWhen a ez-selection-table-checkbox checkbox is checked, its\nez-selection-table-row ancestor gets the is-row-selected class and if\nthere's at least one checked checkbox, the buttons that match the\nselector in the data-selection-buttons attribute are enabled."
        },
        "eZ.SideViewService": {
            "name": "eZ.SideViewService",
            "shortname": "eZ.SideViewService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Y.eZ.ViewService"
            ],
            "module": "ez-sideviewservice",
            "namespace": "eZ",
            "file": "Resources/public/js/extensions/ez-sideviewservice.js",
            "line": 14,
            "description": "View service extension providing the concept of side view service.\nBasically a side view service can be configured with parameters just for\none execution."
        },
        "eZ.Tabs": {
            "name": "eZ.Tabs",
            "shortname": "eZ.Tabs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Y.View"
            ],
            "module": "ez-tabs",
            "namespace": "eZ",
            "file": "Resources/public/js/extensions/ez-tabs.js",
            "line": 15,
            "description": "Extension providing the `_selectTab` method which allows to handle a\ntab based interface. By default, it sets a tap event handler\non '.ez-tabs .ez-tabs-label a' to switch from a tab to another."
        },
        "eZ.CAPI": {
            "name": "eZ.CAPI",
            "shortname": "eZ.CAPI",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-tabs",
            "namespace": "eZ",
            "file": "Resources/public/js/external/ez-capi.js",
            "line": 11,
            "description": "eZ JavaScript REST Client. See\nhttps://github.com/ezsystems/ez-js-rest-client",
            "is_constructor": 1
        },
        "eZ.SessionAuthAgent": {
            "name": "eZ.SessionAuthAgent",
            "shortname": "eZ.SessionAuthAgent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-tabs",
            "namespace": "eZ",
            "file": "Resources/public/js/external/ez-capi.js",
            "line": 21,
            "description": "Session Auth Agent. See https://github.com/ezsystems/ez-js-rest-client",
            "is_constructor": 1
        },
        "eZ.GoogleMapAPILoader": {
            "name": "eZ.GoogleMapAPILoader",
            "shortname": "eZ.GoogleMapAPILoader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-googlemapapiloader",
            "namespace": "eZ",
            "file": "Resources/public/js/services/ez-googlemapapiloader.js",
            "line": 19,
            "description": "Google Maps API loader. It fires the `mapAPIReady` event when the Google\nMap API is ready or `mapAPIFailed` event if a loading error occurs.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "JSONPRequest",
                    "description": "constructor function of an object\n                  having the same behaviour as Y.JSONPRequest",
                    "type": "Function",
                    "optional": true
                }
            ]
        },
        "eZ.PluginRegistry": {
            "name": "eZ.PluginRegistry",
            "shortname": "eZ.PluginRegistry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-pluginregistry",
            "namespace": "eZ",
            "file": "Resources/public/js/services/ez-pluginregistry.js",
            "line": 10,
            "description": "Plugin registry. It allows to register plugins by component."
        },
        "eZ.AlloyEditorButton.ButtonBlockTextAlign": {
            "name": "eZ.AlloyEditorButton.ButtonBlockTextAlign",
            "shortname": "eZ.AlloyEditorButton.ButtonBlockTextAlign",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "eZ.AlloyEditorButton.ButtonBlockTextAlignCenter",
                "eZ.AlloyEditorButton.ButtonBlockTextAlignJustify",
                "eZ.AlloyEditorButton.ButtonBlockTextAlignLeft",
                "eZ.AlloyEditorButton.ButtonBlockTextAlignRight"
            ],
            "module": "ez-alloyeditor-button-mixin-blocktextalign",
            "namespace": "eZ.AlloyEditorButton",
            "file": "Resources/public/js/alloyeditor/buttons/mixins/blocktextalign.js",
            "line": 18,
            "description": "Mixin that provides the base to implement the block text align buttons.",
            "uses": [
                "ButtonStateClasses"
            ]
        },
        "eZ.AlloyEditorButton.ButtonEmbedDiscoverContent": {
            "name": "eZ.AlloyEditorButton.ButtonEmbedDiscoverContent",
            "shortname": "eZ.AlloyEditorButton.ButtonEmbedDiscoverContent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-button-mixin-embeddiscovercontent",
            "namespace": "eZ.AlloyEditorButton",
            "file": "Resources/public/js/alloyeditor/buttons/mixins/embeddiscovercontent.js",
            "line": 17,
            "description": "ButtonEmbedDiscoverContent is a mixing providing the necessary code to\ntrigger UDW and use the content choosen by the user to correctly set the\nproperties of the ezembed widget."
        },
        "eZ.AlloyEditorButton.ButtonEmbedImage": {
            "name": "eZ.AlloyEditorButton.ButtonEmbedImage",
            "shortname": "eZ.AlloyEditorButton.ButtonEmbedImage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-button-mixin-embedimage",
            "namespace": "eZ.AlloyEditorButton",
            "file": "Resources/public/js/alloyeditor/buttons/mixins/embedimage.js",
            "line": 16,
            "description": "ButtonEmbedImage is a mixing providing the necessary code to\ntrigger UDW and use the content choosen by the user to correctly set the\nproperties of an embed element that represents an image."
        },
        "eZ.AlloyEditorButton.ButtonBlockRemove": {
            "name": "eZ.AlloyEditorButton.ButtonBlockRemove",
            "shortname": "eZ.AlloyEditorButton.ButtonBlockRemove",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-button-remove",
            "namespace": "eZ.AlloyEditorButton",
            "file": "Resources/public/js/alloyeditor/buttons/blockremove.js",
            "line": 23,
            "description": "The ButtonBlockRemove component represents a button to remove the block\nelement holding the caret in the editor.",
            "uses": [
                "AlloyEditor.ButtonCommand"
            ]
        },
        "eZ.AlloyEditorButton.ButtonBlockTextAlignCenter": {
            "name": "eZ.AlloyEditorButton.ButtonBlockTextAlignCenter",
            "shortname": "eZ.AlloyEditorButton.ButtonBlockTextAlignCenter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-button-blocktextaligncenter",
            "namespace": "eZ.AlloyEditorButton",
            "file": "Resources/public/js/alloyeditor/buttons/blocktextaligncenter.js",
            "line": 23,
            "description": "The ButtonBlockTextAlignCenter class provides functionality for centering\nthe text inside a block element.",
            "uses": [
                "eZ.AlloyEditorButton.ButtonBlockTextAlign"
            ]
        },
        "eZ.AlloyEditorButton.ButtonBlockTextAlignJustify": {
            "name": "eZ.AlloyEditorButton.ButtonBlockTextAlignJustify",
            "shortname": "eZ.AlloyEditorButton.ButtonBlockTextAlignJustify",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-button-blocktextalignjustify",
            "namespace": "eZ.AlloyEditorButton",
            "file": "Resources/public/js/alloyeditor/buttons/blocktextalignjustify.js",
            "line": 23,
            "description": "The ButtonBlockTextAlignJustify class provides functionality for\njustifying the text inside a block element.",
            "uses": [
                "eZ.AlloyEditorButton.ButtonBlockTextAlign"
            ]
        },
        "eZ.AlloyEditorButton.ButtonBlockTextAlignLeft": {
            "name": "eZ.AlloyEditorButton.ButtonBlockTextAlignLeft",
            "shortname": "eZ.AlloyEditorButton.ButtonBlockTextAlignLeft",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-button-blocktextalignleft",
            "namespace": "eZ.AlloyEditorButton",
            "file": "Resources/public/js/alloyeditor/buttons/blocktextalignleft.js",
            "line": 23,
            "description": "The ButtonBlockTextAlignLeft class provides functionality for aligning\nto the left the text inside a block element.",
            "uses": [
                "eZ.AlloyEditorButton.ButtonBlockTextAlign"
            ]
        },
        "eZ.AlloyEditorButton.ButtonBlockTextAlignRight": {
            "name": "eZ.AlloyEditorButton.ButtonBlockTextAlignRight",
            "shortname": "eZ.AlloyEditorButton.ButtonBlockTextAlignRight",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-button-blocktextalignright",
            "namespace": "eZ.AlloyEditorButton",
            "file": "Resources/public/js/alloyeditor/buttons/blocktextalignright.js",
            "line": 23,
            "description": "The ButtonBlockTextAlignRight class provides functionality for aligning\nto the right the text inside a block element.",
            "uses": [
                "eZ.AlloyEditorButton.ButtonBlockTextAlign"
            ]
        },
        "eZ.AlloyEditorButton.eZ.AlloyEditor.ButtonEmbed": {
            "name": "eZ.AlloyEditorButton.eZ.AlloyEditor.ButtonEmbed",
            "shortname": "eZ.AlloyEditor.ButtonEmbed",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-button-blocktextalignright",
            "namespace": "eZ.AlloyEditorButton",
            "file": "Resources/public/js/alloyeditor/buttons/embed.js",
            "line": 17,
            "description": "The ButtonEmbed component represents a button to add an embed element.",
            "uses": [
                "AlloyEditor.ButtonCommand",
                "AlloyEditor.ButtonStateClasses",
                "eZ.AlloyEditorToolbarConfig.ButtonEmbedDiscoverContent"
            ]
        },
        "eZ.AlloyEditorButton.ButtonEmbedHref": {
            "name": "eZ.AlloyEditorButton.ButtonEmbedHref",
            "shortname": "eZ.AlloyEditorButton.ButtonEmbedHref",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-button-remove",
            "namespace": "eZ.AlloyEditorButton",
            "file": "Resources/public/js/alloyeditor/buttons/embedhref.js",
            "line": 23,
            "description": "The ButtonEmbedHref component represents a button to set the target\ncontent on an embed element.",
            "uses": [
                "Y.eZ.AlloyEditorButton.ButtonEmbedDiscoverContent"
            ]
        },
        "eZ.AlloyEditorButton.eZ.AlloyEditor.ButtonHeading": {
            "name": "eZ.AlloyEditorButton.eZ.AlloyEditor.ButtonHeading",
            "shortname": "eZ.AlloyEditor.ButtonHeading",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-button-remove",
            "namespace": "eZ.AlloyEditorButton",
            "file": "Resources/public/js/alloyeditor/buttons/heading.js",
            "line": 17,
            "description": "The ButtonHeading component represents a button to add a heading (h1).",
            "uses": [
                "AlloyEditor.ButtonCommand",
                "AlloyEditor.ButtonStateClasses"
            ]
        },
        "eZ.AlloyEditorButton.eZ.AlloyEditor.ButtonImage": {
            "name": "eZ.AlloyEditorButton.eZ.AlloyEditor.ButtonImage",
            "shortname": "eZ.AlloyEditor.ButtonImage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-button-remove",
            "namespace": "eZ.AlloyEditorButton",
            "file": "Resources/public/js/alloyeditor/buttons/image.js",
            "line": 17,
            "description": "The ButtonImage component represents a button to add an image in the\neditor.",
            "uses": [
                "AlloyEditor.ButtonCommand",
                "AlloyEditor.ButtonStateClasses",
                "eZ.AlloyEditorToolbarConfig.ButtonImageDiscoverContent"
            ]
        },
        "eZ.AlloyEditorButton.ButtonImageHref": {
            "name": "eZ.AlloyEditorButton.ButtonImageHref",
            "shortname": "eZ.AlloyEditorButton.ButtonImageHref",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-button-imagehref",
            "namespace": "eZ.AlloyEditorButton",
            "file": "Resources/public/js/alloyeditor/buttons/imagehref.js",
            "line": 23,
            "description": "The ButtonImageHref component represents a button to set the target\ncontent on an image element.",
            "uses": [
                "Y.eZ.AlloyEditorButton.ButtonEmbedDiscoverContent",
                "Y.eZ.AlloyEditorButton.ButtonEmbedImage"
            ]
        },
        "eZ.AlloyEditorButton.eZ.AlloyEditor.ButtonParagraph": {
            "name": "eZ.AlloyEditorButton.eZ.AlloyEditor.ButtonParagraph",
            "shortname": "eZ.AlloyEditor.ButtonParagraph",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-button-imagehref",
            "namespace": "eZ.AlloyEditorButton",
            "file": "Resources/public/js/alloyeditor/buttons/paragraph.js",
            "line": 17,
            "description": "The ButtonParagraph component represents a button to add a paragraph (p).",
            "uses": [
                "AlloyEditor.ButtonCommand",
                "AlloyEditor.ButtonStateClasses"
            ]
        },
        "CKEDITOR.plugins.ezaddcontent": {
            "name": "CKEDITOR.plugins.ezaddcontent",
            "shortname": "CKEDITOR.plugins.ezaddcontent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-button-imagehref",
            "namespace": "CKEDITOR.plugins",
            "file": "Resources/public/js/alloyeditor/plugins/addcontent.js",
            "line": 64,
            "description": "CKEditor plugin providing the eZAddContent command. This command\nallows to add content  to the editor content in the editable region\npointed by the selector available under `eZ.editableRegion` in the\nconfiguration.",
            "is_constructor": 1
        },
        "CKEDITOR.plugins.ezembed": {
            "name": "CKEDITOR.plugins.ezembed",
            "shortname": "CKEDITOR.plugins.ezembed",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-button-imagehref",
            "namespace": "CKEDITOR.plugins",
            "file": "Resources/public/js/alloyeditor/plugins/embed.js",
            "line": 15,
            "description": "CKEditor plugin to configure the widget plugin so that it recognizes the\n`div[data-ezelement=\"embed\"]` elements as widget.",
            "is_constructor": 1
        },
        "CKEDITOR.plugins.ezfocusblock": {
            "name": "CKEDITOR.plugins.ezfocusblock",
            "shortname": "CKEDITOR.plugins.ezfocusblock",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-button-imagehref",
            "namespace": "CKEDITOR.plugins",
            "file": "Resources/public/js/alloyeditor/plugins/focusblock.js",
            "line": 64,
            "description": "CKEditor plugin to add/remove the focused class on the block holding the\ncaret.",
            "is_constructor": 1
        },
        "CKEDITOR.plugins.ezremoveblock": {
            "name": "CKEDITOR.plugins.ezremoveblock",
            "shortname": "CKEDITOR.plugins.ezremoveblock",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-button-imagehref",
            "namespace": "CKEDITOR.plugins",
            "file": "Resources/public/js/alloyeditor/plugins/removeblock.js",
            "line": 90,
            "description": "CKEditor plugin providing the eZRemoveBlock command. This command\nallows to remove the block element holding the caret or the focused\nwidget",
            "is_constructor": 1
        },
        "eZ.EditorContentProcessorBase": {
            "name": "eZ.EditorContentProcessorBase",
            "shortname": "eZ.EditorContentProcessorBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-editorcontentprocessorbase",
            "namespace": "eZ",
            "file": "Resources/public/js/alloyeditor/processors/base.js",
            "line": 15,
            "description": "The base EditorContentProcessor.",
            "is_constructor": 1
        },
        "eZ.EditorContentProcessorRemoveIds": {
            "name": "eZ.EditorContentProcessorRemoveIds",
            "shortname": "eZ.EditorContentProcessorRemoveIds",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-editorcontentprocessorremoveids",
            "namespace": "eZ",
            "file": "Resources/public/js/alloyeditor/processors/removeids.js",
            "line": 15,
            "description": "removeids EditorContentProcessor.",
            "is_constructor": 1,
            "extends": "eZ.EditorContentProcessorBase"
        },
        "eZ.EditorContentProcessorXHTML5Edit": {
            "name": "eZ.EditorContentProcessorXHTML5Edit",
            "shortname": "eZ.EditorContentProcessorXHTML5Edit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-editorcontentprocessorxhtml5edit",
            "namespace": "eZ",
            "file": "Resources/public/js/alloyeditor/processors/xhtml5edit.js",
            "line": 19,
            "description": "xhtml5edit EditorContentProcessor.",
            "is_constructor": 1,
            "extends": "eZ.EditorContentProcessorBase"
        },
        "eZ.AlloyEditorToolbarConfig.Embed": {
            "name": "eZ.AlloyEditorToolbarConfig.Embed",
            "shortname": "eZ.AlloyEditorToolbarConfig.Embed",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-toolbar-config-embed",
            "namespace": "eZ.AlloyEditorToolbarConfig",
            "file": "Resources/public/js/alloyeditor/toolbars/config/embed.js",
            "line": 17,
            "description": "`styles` toolbar configuration for embed. The `embed` toolbar is\nsupposed to be shown when the user gives the focus to an ezembed widget",
            "extends": "BlockBase"
        },
        "eZ.AlloyEditorToolbarConfig.Heading": {
            "name": "eZ.AlloyEditorToolbarConfig.Heading",
            "shortname": "eZ.AlloyEditorToolbarConfig.Heading",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-toolbar-config-heading",
            "namespace": "eZ.AlloyEditorToolbarConfig",
            "file": "Resources/public/js/alloyeditor/toolbars/config/heading.js",
            "line": 29,
            "description": "`styles` toolbar configuration for heading. The `heading` toolbar is\nsupposed to be shown when the user puts the caret inside an heading\nelement and when the selection is empty.",
            "extends": "BlockBase"
        },
        "eZ.AlloyEditorToolbarConfig.Image": {
            "name": "eZ.AlloyEditorToolbarConfig.Image",
            "shortname": "eZ.AlloyEditorToolbarConfig.Image",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-toolbar-config-image",
            "namespace": "eZ.AlloyEditorToolbarConfig",
            "file": "Resources/public/js/alloyeditor/toolbars/config/image.js",
            "line": 17,
            "description": "`styles` toolbar configuration for image. The `image` toolbar is\nsupposed to be shown when the user gives the focus to an image",
            "extends": "BlockBase"
        },
        "eZ.AlloyEditorToolbarConfig.Link": {
            "name": "eZ.AlloyEditorToolbarConfig.Link",
            "shortname": "eZ.AlloyEditorToolbarConfig.Link",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-toolbar-config-paragraph",
            "namespace": "eZ.AlloyEditorToolbarConfig",
            "file": "Resources/public/js/alloyeditor/toolbars/config/link.js",
            "line": 16,
            "description": "`styles` toolbar configuration for links"
        },
        "eZ.AlloyEditorToolbarConfig.Paragraph": {
            "name": "eZ.AlloyEditorToolbarConfig.Paragraph",
            "shortname": "eZ.AlloyEditorToolbarConfig.Paragraph",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-toolbar-config-paragraph",
            "namespace": "eZ.AlloyEditorToolbarConfig",
            "file": "Resources/public/js/alloyeditor/toolbars/config/paragraph.js",
            "line": 16,
            "description": "`styles` toolbar configuration for paragraph. The `paragraph` toolbar is\nsupposed to be shown when the user puts the caret inside a paragraph\nelement and when the selection is empty.",
            "extends": "BlockBase"
        },
        "eZ.AlloyEditorToolbarConfig.Table": {
            "name": "eZ.AlloyEditorToolbarConfig.Table",
            "shortname": "eZ.AlloyEditorToolbarConfig.Table",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-toolbar-config-paragraph",
            "namespace": "eZ.AlloyEditorToolbarConfig",
            "file": "Resources/public/js/alloyeditor/toolbars/config/table.js",
            "line": 16,
            "description": "`styles` toolbar configuration for tables"
        },
        "eZ.AlloyEditorToolbarConfig.Text": {
            "name": "eZ.AlloyEditorToolbarConfig.Text",
            "shortname": "eZ.AlloyEditorToolbarConfig.Text",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ez-alloyeditor-toolbar-config-paragraph",
            "namespace": "eZ.AlloyEditorToolbarConfig",
            "file": "Resources/public/js/alloyeditor/toolbars/config/text.js",
            "line": 16,
            "description": "`styles` toolbar configuration for texts"
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "Resources/public/js/apps/plugins/ez-domstateplugin.js",
            "line": 35,
            "description": "`minimizeDiscoveryBarAction` event handler. It toggles the discovery\nbar mininized class on the app container to minimize/maximize it.",
            "itemtype": "method",
            "name": "_uiMinimizeDiscoveryBar",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "minimizeDiscoveryBarAction event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.Plugin.DomState",
            "module": "ez-domstateplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/apps/plugins/ez-domstateplugin.js",
            "line": 47,
            "description": "`navigationModeChange` event handler. it sets or unsets the\nnavigation mode class provided in the event facade to handle the fact\nthat the navigation hub can be fixed or not.",
            "itemtype": "method",
            "name": "_uiNavigationModeChange",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "navigationModeChange event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.Plugin.DomState",
            "module": "ez-domstateplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/apps/plugins/ez-positionplugin.js",
            "line": 41,
            "description": "Sets the given style property on the node after applying the given\noffset. It stores the actual state of the property in a data\nattribute to avoid having to deal with running transitions when\ngetting the actual style.",
            "itemtype": "method",
            "name": "_setPositionProperty",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "property",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "eZ.Plugin.Position",
            "module": "ez-positionplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/apps/plugins/ez-registerlanguagehelpersplugin.js",
            "line": 31,
            "description": "Registers the `language_name` handlebars helper. The `language_name` helper expects the\nargument to be a language code. It will return language name from the language object\nin app's systemLanguageList. If language with given language code won't be found in\nsystemLanguageList then language code is returned.",
            "itemtype": "method",
            "name": "_registerLanguageName",
            "access": "protected",
            "tagname": "",
            "class": "eZ.Plugin.RegisterLanguageHelpers",
            "module": "ez-registerhelpersplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/apps/plugins/ez-registerurlhelpersplugin.js",
            "line": 34,
            "description": "Registers the `path` handlebars helper. The `path` helper expects the\nfirst argument to be a route name. After the route name, it expects\neither the route parameters as a hash or a list of named parameters\nto configure the route.",
            "itemtype": "method",
            "name": "_registerPath",
            "access": "protected",
            "tagname": "",
            "class": "eZ.Plugin.RegisterUrlHelpers",
            "module": "ez-registerhelpersplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/apps/plugins/ez-registerurlhelpersplugin.js",
            "line": 54,
            "description": "Registers the `asset` handlebars helper.",
            "itemtype": "method",
            "name": "_registerAsset",
            "access": "protected",
            "tagname": "",
            "class": "eZ.Plugin.RegisterUrlHelpers",
            "module": "ez-registerhelpersplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/apps/plugins/ez-updatetreeplugin.js",
            "line": 31,
            "description": "Clear the tree if it is already loaded",
            "itemtype": "method",
            "name": "_clearTree",
            "access": "protected",
            "tagname": "",
            "class": "eZ.Plugin.UpdateTree",
            "module": "ez-updatetreeplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 28,
            "description": "The list of available sides views. Each side view is an entry in this\nhash which contains the following properties:\n\n  * `type`: a reference to the constructor of a view\n  * `container`: a selector to the node that will receive the\n     rendered view\n  * `hideClass`: a class to add on the application container to hide\n    the rendered side view when it's not needed.\n\nThe lifecycle of the side views is handled by the `handleSideViews`\nmethod based on the meta information available in the route.",
            "itemtype": "property",
            "name": "sideViews",
            "type": "{Object}",
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 118,
            "description": "Initializes the application.",
            "itemtype": "method",
            "name": "initializer",
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 125,
            "description": "Stores the initial title of the page so it can be used when\ngenerating the title depending on the active view",
            "itemtype": "property",
            "name": "_initialTitle",
            "access": "protected",
            "tagname": "",
            "default": "the actual page title",
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 152,
            "description": "Dispatches the `config` attribute value so that the app is configured\naccordingly. The values consumed by the app are removed from the\nconfiguration.",
            "itemtype": "method",
            "name": "_dispatchConfig",
            "access": "protected",
            "tagname": "",
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 195,
            "description": "Generates the URI for a route identified by its name. All\nplaceholders are replaced by the value found in the `params`\nparameters, if a value is not found in this object, the placeholder\nis replaced by an empty string.",
            "itemtype": "method",
            "name": "routeUri",
            "params": [
                {
                    "name": "routeName",
                    "description": "the name of the route to look for",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "an object containing the key/value to replace\n                in the route path",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "null if the route was not found",
                "type": "String|Null"
            },
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 227,
            "description": "Navigates to the given route build with the given parameters",
            "itemtype": "method",
            "name": "navigateTo",
            "params": [
                {
                    "name": "routeName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 238,
            "description": "Logs in a user using the provided credentials. If the credentials\nare wrong, the callback is called with the error and response from\nCAPI.logIn. If the credentials are correct, the error and response\narguments are set with the ones from eZ.UserModel.load method. If the\nuser loading fails, the user is automatically logged out.",
            "itemtype": "method",
            "name": "logIn",
            "params": [
                {
                    "name": "credentials",
                    "description": "object containing a `login` and a `password`\nentries",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "error",
                            "description": "",
                            "type": "False|CAPIError"
                        },
                        {
                            "name": "response",
                            "description": "",
                            "type": "Response"
                        }
                    ]
                }
            ],
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 278,
            "description": "Logs out the current user and resets it",
            "itemtype": "method",
            "name": "logOut",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "error",
                            "description": "the error provided by the CAPI",
                            "type": "False|CAPIError"
                        },
                        {
                            "name": "response",
                            "description": "the response provided by the CAPI",
                            "type": "Response"
                        }
                    ]
                }
            ],
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 296,
            "description": "Checks whether the user is logged in. From the application point of\nview, being logged in means the user has a session and this session\nis associated with a user which is not the anonymous user.",
            "itemtype": "method",
            "name": "isLoggedIn",
            "params": [
                {
                    "name": "callback",
                    "description": "function called after the check",
                    "type": "Function",
                    "props": [
                        {
                            "name": "notLoggedIn",
                            "description": "false if the user is logged in,\ntrue otherwise",
                            "type": "Boolean"
                        },
                        {
                            "name": "response",
                            "description": "the response object if a REST\ncall is done",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 326,
            "description": "Changes the application state to be open",
            "itemtype": "method",
            "name": "open",
            "params": [
                {
                    "name": "req",
                    "description": "the request object",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "the response object",
                    "type": "Function"
                },
                {
                    "name": "next",
                    "description": "the function to pass control to the next route callback",
                    "type": "Function"
                }
            ],
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 343,
            "description": "Middleware to handle the *side views* configured for the given route.\nDepending on the configuration, it will apply the CSS class to\nshow/hide the side views. If a side view is not explicitely\nconfigured to be displayed, it is hidden.",
            "itemtype": "method",
            "name": "handleSideViews",
            "params": [
                {
                    "name": "req",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "next",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 370,
            "description": "Shows a side view based on its identifier in the sideViews hash.\nThis method also allows to pass a parameters hash that can be used to\nset some params to view service/view while showing it.",
            "itemtype": "method",
            "name": "showSideView",
            "params": [
                {
                    "name": "sideViewKey",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "Mixed"
                },
                {
                    "name": "next",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 392,
            "description": "Hides a side view based on its identifier in the sideViews hash",
            "itemtype": "method",
            "name": "hideSideView",
            "params": [
                {
                    "name": "sideViewKey",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 402,
            "description": "Shows the side view",
            "itemtype": "method",
            "name": "_showSideView",
            "params": [
                {
                    "name": "viewInfo",
                    "description": "the info hash of the side view to show",
                    "type": "Object"
                },
                {
                    "name": "req",
                    "description": "the request",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "the response",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "the parameters to set when showing the\nside view",
                    "type": "Object"
                },
                {
                    "name": "next",
                    "description": "a callback function to call when the view is\nshown",
                    "type": "Function"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 467,
            "description": "Hides the side view",
            "itemtype": "method",
            "name": "_hideSideView",
            "params": [
                {
                    "name": "viewInfo",
                    "description": "the info hash of the side view to hide",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 485,
            "description": "Overrides the default implementation to set the view service as a\nbubble target of the view and the app as a bubble target of the view\nservice.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_attachView",
            "params": [
                {
                    "name": "view",
                    "description": "",
                    "type": "View"
                },
                {
                    "name": "preprend",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 507,
            "description": "Middleware to check whether the user is logged in. When not logged\nin, it redirects the user to the login form.",
            "itemtype": "method",
            "name": "checkUser",
            "params": [
                {
                    "name": "req",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "next",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 543,
            "description": "Middleware to display the main view which identifier is in the route\nmetadata",
            "itemtype": "method",
            "name": "handleMainView",
            "params": [
                {
                    "name": "req",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "next",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 609,
            "description": "`loadingChange` event handler. Adds or removes the `is-app-loading`\nclass on the application container.",
            "itemtype": "method",
            "name": "_loading",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "the event facade object of the loadingChange event",
                    "type": "Object"
                }
            ],
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 625,
            "description": "Overrides the default implementation to make sure the view `active`\nattribute is set to true  after the view is attached to the\nDOM. It also sets the loading flag to false and make sure the title\nof the page is correct after changing the active view.",
            "itemtype": "method",
            "name": "_afterActiveViewChange",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "activeViewChange event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 669,
            "description": "Sets the title of the page using the new active view `getTitle`\nmethod if it exists, otherwise, it just restores the initial page\ntitle.",
            "itemtype": "method",
            "name": "_setTitle",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "the",
                    "description": "active view",
                    "type": "View"
                }
            ],
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 687,
            "description": "Stores the available routes for the application.\n\nIn addition to what is described in the {{#crossLink \"App\"}}YUI\nApp documentation{{/crossLink}}, each route can have several\nmetadata (all optional):\n\n  * `service`: contains a reference to a constructor function that\n    extends {{#crossLink \"eZ.ViewService\"}}eZ.ViewService{{/crossLink}}.\n    The {{#crossLink \"eZ.PlatformUIApp/handleMainView:method\"}}`handleMainView`{{/crossLink}}\n    middleware is responsible for using this function to build the\n    view service which can be used to inject custom variables in the\n    top level view triggered by the route. This view service is\n    also made a bubble target of the view so that it can react to\n    any custom event fired by the view.\n  * `name`: name of the route which is useful to generate an URI\n    with {{#crossLink\n    \"eZ.PlatformUIApp/routeUri:method\"}}Y.eZ.PlatformUIApp.routeUri{{/crossLink}}\n  * `view`: the identifier of the view in the `views` hash to\n    display. This is handled by the `handleMainView` middleware.\n  * `sideViews`: a hash which keys are the side view keys in the\n    sideViews property. A truthy value means that the\n    corresponding side view should be visible, false means that\n    the side view should be explicitely hidden. If a side view is\n    not mentionned it means it should remain as it is.\n\nIf a route provides both a `regex` and a `path` properties, the\n`regex` is used in the route matching process, while the `path`\ncan be used in the reverse routing process (generation of a\nlink). If no `path` is provided, no reverse routing is possible.",
            "itemtype": "attribute",
            "name": "routes",
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 852,
            "description": "The application configuration. It is dispatched to the others\napplication attributes/properties at build time.",
            "itemtype": "attribute",
            "name": "config",
            "type": "{Object|undefined}",
            "writeonce": "",
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 864,
            "description": "The base URI to build the URI of the ajax request",
            "itemtype": "attribute",
            "name": "apiRoot",
            "default": "\"/\"",
            "type": "String",
            "readonly": "",
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 877,
            "description": "The root directory where to find the assets.",
            "itemtype": "attribute",
            "name": "assetRoot",
            "default": "\"/\"",
            "type": "String",
            "readonly": "",
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 890,
            "description": "Loading state. Tells whether the application is waiting for\nsomething to be loaded",
            "itemtype": "attribute",
            "name": "loading",
            "default": "false",
            "type": "boolean",
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 903,
            "description": "eZ Platform REST client",
            "itemtype": "attribute",
            "name": "capi",
            "default": "null",
            "type": "{eZ.CAPI}",
            "readonly": "",
            "required": 1,
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 917,
            "description": "The logged in user",
            "itemtype": "attribute",
            "name": "user",
            "type": "{eZ.User}",
            "readonly": "",
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 931,
            "description": "Active view service instance",
            "itemtype": "attribute",
            "name": "activeViewService",
            "type": "{eZ.ViewService}",
            "readonly": "",
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 942,
            "description": "Stores the REST id of the configured anonymous user",
            "itemtype": "attribute",
            "name": "anonymousUserId",
            "type": "{String}",
            "readonly": "",
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/apps/ez-platformuiapp.js",
            "line": 954,
            "description": "System language list provided with config. The list is hash\ncontaining language objects and is indexed by languageCode.",
            "itemtype": "attribute",
            "name": "systemLanguageList",
            "default": "{}",
            "type": "{Object}",
            "readonly": "",
            "class": "eZ.PlatformUIApp",
            "module": "ez-platformuiapp",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-buttonactionview.js",
            "line": 35,
            "description": "Renders the action",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "the view itself",
                "type": "eZ.ButtonActionView"
            },
            "class": "eZ.ButtonActionView",
            "module": "ez-buttonactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-buttonactionview.js",
            "line": 54,
            "description": "Adds the button action view class name to the container of the view.\nIt is meant to be used by child class so that we can reuse the button\naction view CSS styles.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_addParentClassName",
            "class": "eZ.ButtonActionView",
            "module": "ez-buttonactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-buttonactionview.js",
            "line": 70,
            "description": "Returns the action event name of the button action view.",
            "itemtype": "method",
            "name": "_buildActionEventName",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.ButtonActionView",
            "module": "ez-buttonactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-buttonactionview.js",
            "line": 81,
            "description": "Handles tap on the view's action button",
            "itemtype": "method",
            "name": "_handleActionClick",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.ButtonActionView",
            "module": "ez-buttonactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-buttonactionview.js",
            "line": 91,
            "description": "Fired when the action button is clicked. Name of the event\nconsists of the action view's 'actionId' attribute and 'Action'\nsuffix.  For example for a view with actionId = \"publish\", the\nevent fired will be named \"publishAction\".",
            "itemtype": "event",
            "name": "<actionId>Action",
            "params": [
                {
                    "name": "the",
                    "description": "content model object",
                    "type": "eZ.Content"
                }
            ],
            "class": "eZ.ButtonActionView",
            "module": "ez-buttonactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-buttonactionview.js",
            "line": 106,
            "description": "Handles *:disabledChange event",
            "itemtype": "method",
            "name": "_handleToggleButtonState",
            "params": [
                {
                    "name": "event",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.ButtonActionView",
            "module": "ez-buttonactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-buttonactionview.js",
            "line": 121,
            "description": "The priority of the action. Actions are orderd by priority (from\ntop to bottom) If priority is equal, actions are ordered in the\norder they are added to list",
            "itemtype": "attribute",
            "name": "priority",
            "default": "0",
            "type": "int",
            "class": "eZ.ButtonActionView",
            "module": "ez-buttonactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-buttonactionview.js",
            "line": 134,
            "description": "The primary action id, should be unique among other instances of\nactions, since it is used for styling, running commands, etc.",
            "itemtype": "attribute",
            "name": "action",
            "default": "''",
            "type": "string",
            "required": 1,
            "class": "eZ.ButtonActionView",
            "module": "ez-buttonactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-buttonactionview.js",
            "line": 147,
            "description": "Action label",
            "itemtype": "attribute",
            "name": "label",
            "default": "''",
            "type": "string",
            "required": 1,
            "class": "eZ.ButtonActionView",
            "module": "ez-buttonactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-buttonactionview.js",
            "line": 159,
            "description": "Action hint (shown in small font below the label)",
            "itemtype": "attribute",
            "name": "hint",
            "type": "string",
            "default": "''",
            "class": "eZ.ButtonActionView",
            "module": "ez-buttonactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-buttonactionview.js",
            "line": 170,
            "description": "Whether or not the action button is disabled",
            "itemtype": "attribute",
            "name": "disabled",
            "default": "false",
            "type": "boolean",
            "class": "eZ.ButtonActionView",
            "module": "ez-buttonactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-buttonactionview.js",
            "line": 181,
            "description": "Content which is currently loaded in content edit view",
            "itemtype": "attribute",
            "name": "content",
            "type": "eZ.Content",
            "default": "{}",
            "required": 1,
            "class": "eZ.ButtonActionView",
            "module": "ez-buttonactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-buttonactionview.js",
            "line": 193,
            "description": "Version currently being edited (if used in the edit context)",
            "itemtype": "attribute",
            "name": "version",
            "type": "eZ.Version",
            "default": "{}",
            "class": "eZ.ButtonActionView",
            "module": "ez-buttonactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-createcontentactionview.js",
            "line": 35,
            "description": "Renders the action",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Y.eZ.CreateContentActionView the view itself"
            },
            "class": "eZ.CreateContentActionView",
            "module": "ez-createcontentactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-createcontentactionview.js",
            "line": 46,
            "description": "Renders the content type selector",
            "itemtype": "method",
            "name": "_renderContentTypeSelector",
            "access": "protected",
            "tagname": "_renderContentTypeSelector",
            "class": "eZ.CreateContentActionView",
            "module": "ez-createcontentactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-createcontentactionview.js",
            "line": 61,
            "description": "expandedChange event handler to define or detach the click outside\nevent handler so that the view gets hidden when the user click\nsomewhere else",
            "itemtype": "method",
            "name": "_setClickOutsideEventHandler",
            "params": [
                {
                    "name": "e",
                    "description": "event facade of the expandedChange event",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.CreateContentActionView",
            "module": "ez-createcontentactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-createcontentactionview.js",
            "line": 80,
            "description": "Toggles the expanded state",
            "itemtype": "method",
            "name": "_toggleExpanded",
            "access": "protected",
            "tagname": "",
            "class": "eZ.CreateContentActionView",
            "module": "ez-createcontentactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-createcontentactionview.js",
            "line": 92,
            "description": "Hides the expanded view",
            "itemtype": "method",
            "name": "_hideView",
            "access": "protected",
            "tagname": "",
            "class": "eZ.CreateContentActionView",
            "module": "ez-createcontentactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-createcontentactionview.js",
            "line": 108,
            "description": "Stores an array of content type groups",
            "itemtype": "attribute",
            "name": "contentTypeGroups",
            "type": "Array",
            "class": "eZ.CreateContentActionView",
            "module": "ez-createcontentactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-createcontentactionview.js",
            "line": 121,
            "description": "Holds the content type selector view instance",
            "itemtype": "attribute",
            "name": "contentTypeSelectorView",
            "type": "Y.eZ.ContentTypeSelectorView",
            "class": "eZ.CreateContentActionView",
            "module": "ez-createcontentactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-createcontentactionview.js",
            "line": 133,
            "description": "The content type of the content at the current location",
            "itemtype": "attribute",
            "name": "contentType",
            "type": "Y.eZ.ContentType",
            "writeonce": "",
            "class": "eZ.CreateContentActionView",
            "module": "ez-createcontentactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-movecontentactionview.js",
            "line": 27,
            "description": "Renders the action",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Y.eZ.MoveContentActionView the view itself"
            },
            "class": "eZ.MoveContentActionView",
            "module": "ez-movecontentactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-previewactionview.js",
            "line": 32,
            "description": "Initializer is called upon view's init\nCreating actions lookup object, misc init workflow",
            "itemtype": "method",
            "name": "initializer",
            "class": "eZ.PreviewActionView",
            "module": "ez-previewactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-previewactionview.js",
            "line": 43,
            "description": "Renders the action",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "the view itself",
                "type": "eZ.PreviewActionView"
            },
            "class": "eZ.PreviewActionView",
            "module": "ez-previewactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-previewactionview.js",
            "line": 73,
            "description": "Handles tap on any of the preview mode action buttons. Depending on\nthe visibility state of the preview, it fires the `previewAction`\nevent with a callback to show the preview or just change the preview\nmode in the preview.",
            "itemtype": "method",
            "name": "_previewAction",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.PreviewActionView",
            "module": "ez-previewactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-previewactionview.js",
            "line": 98,
            "description": "Shows the edit preview in the given mode if no `err` is provided.",
            "itemtype": "method",
            "name": "_showPreviewInMode",
            "params": [
                {
                    "name": "mode",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "err",
                    "description": "",
                    "type": "False|Error"
                }
            ],
            "class": "eZ.PreviewActionView",
            "module": "ez-previewactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-previewactionview.js",
            "line": 115,
            "description": "Selects the given preview `mode`.",
            "itemtype": "method",
            "name": "_selectPreviewMode",
            "params": [
                {
                    "name": "mode",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "eZ.PreviewActionView",
            "module": "ez-previewactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-previewactionview.js",
            "line": 129,
            "description": "Makes changes to UI once editPreview is hidden (removes preview selection)",
            "itemtype": "method",
            "name": "_handleEditPreviewHide",
            "access": "protected",
            "tagname": "",
            "class": "eZ.PreviewActionView",
            "module": "ez-previewactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-previewactionview.js",
            "line": 140,
            "description": "Array of objects describing buttons which provide preview options",
            "itemtype": "attribute",
            "name": "buttons",
            "type": "Array",
            "default": "[]",
            "class": "eZ.PreviewActionView",
            "module": "ez-previewactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-previewactionview.js",
            "line": 151,
            "description": "The EditPreviewView (by default) instance",
            "itemtype": "attribute",
            "name": "editPreview",
            "default": "new Y.eZ.EditPreviewView()",
            "type": "{eZ.EditPreviewView}",
            "required": 1,
            "class": "eZ.PreviewActionView",
            "module": "ez-previewactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-previewactionview.js",
            "line": 165,
            "description": "Content which is currently loaded in content edit view",
            "itemtype": "attribute",
            "name": "content",
            "type": "eZ.Content",
            "default": "{}",
            "required": 1,
            "class": "eZ.PreviewActionView",
            "module": "ez-previewactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-previewactionview.js",
            "line": 181,
            "description": "The version",
            "itemtype": "attribute",
            "name": "version",
            "type": "eZ.Version",
            "default": "{}",
            "class": "eZ.PreviewActionView",
            "module": "ez-previewactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-previewactionview.js",
            "line": 196,
            "description": "The languageCode",
            "itemtype": "attribute",
            "name": "languageCode",
            "type": "{String}",
            "default": "''",
            "class": "eZ.PreviewActionView",
            "module": "ez-previewactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-translateactionview.js",
            "line": 37,
            "description": "Renders the action",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "Y.eZ.TranslateActionView the view itself"
            },
            "class": "eZ.TranslateActionView",
            "module": "ez-translateactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-translateactionview.js",
            "line": 70,
            "description": "expandedChange event handler to define or detach the click outside\nevent handler so that the view gets hidden when the user click\nsomewhere else",
            "itemtype": "method",
            "name": "_setClickOutsideEventHandler",
            "params": [
                {
                    "name": "e",
                    "description": "event facade of the expandedChange event",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.TranslateActionView",
            "module": "ez-translateactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-translateactionview.js",
            "line": 89,
            "description": "Toggles the expanded state",
            "itemtype": "method",
            "name": "_toggleExpanded",
            "access": "protected",
            "tagname": "",
            "class": "eZ.TranslateActionView",
            "module": "ez-translateactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-translateactionview.js",
            "line": 101,
            "description": "Hides the expanded view",
            "itemtype": "method",
            "name": "_hideView",
            "access": "protected",
            "tagname": "",
            "class": "eZ.TranslateActionView",
            "module": "ez-translateactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-translateactionview.js",
            "line": 111,
            "description": "Returns array containing language codes of translations of content that will be\ndisplayed in the hint.",
            "itemtype": "method",
            "name": "_getFirstLanguageCodes",
            "access": "protected",
            "tagname": "",
            "class": "eZ.TranslateActionView",
            "module": "ez-translateactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-translateactionview.js",
            "line": 128,
            "description": "Tap event handler on New Translation button. It opens language selection box.",
            "itemtype": "method",
            "name": "_newTranslationLanguageSelectionBox",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.TranslateActionView",
            "module": "ez-translateactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-translateactionview.js",
            "line": 150,
            "description": "Fires `translate` event after making a selection on LanguageSelectionBox",
            "itemtype": "method",
            "name": "_newTranslation",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.TranslateActionView",
            "module": "ez-translateactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-translateactionview.js",
            "line": 169,
            "description": "Fired when content is being translated",
            "itemtype": "event",
            "name": "translateContent",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "content",
                            "description": "content object which will be translated",
                            "type": "eZ.Content"
                        },
                        {
                            "name": "toLanguageCode",
                            "description": "language to which content will be translated",
                            "type": "String"
                        },
                        {
                            "name": "baseLanguageCode",
                            "description": "optional language on which translation will be based",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "eZ.TranslateActionView",
            "module": "ez-translateactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-translateactionview.js",
            "line": 182,
            "description": "The viewed location",
            "itemtype": "attribute",
            "name": "location",
            "type": "Y.eZ.Location",
            "class": "eZ.TranslateActionView",
            "module": "ez-translateactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-translateactionview.js",
            "line": 192,
            "description": "The content associated with the location",
            "itemtype": "attribute",
            "name": "content",
            "type": "Y.eZ.Content",
            "class": "eZ.TranslateActionView",
            "module": "ez-translateactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-treeactionview.js",
            "line": 7,
            "description": "Provide the button action view to display the content tree",
            "itemtype": "method",
            "name": "ez-treeactionview",
            "class": "eZ.TreeActionView",
            "module": "ez-translateactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-treeactionview.js",
            "line": 34,
            "description": "`expanded` change event handler",
            "itemtype": "method",
            "name": "_uiExpand",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.TreeActionView",
            "module": "ez-translateactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-treeactionview.js",
            "line": 48,
            "description": "Click outside event handler",
            "itemtype": "method",
            "name": "_handleClickOutside",
            "params": [
                {
                    "name": "expanded",
                    "description": "state",
                    "type": "Boolean"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.TreeActionView",
            "module": "ez-translateactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-treeactionview.js",
            "line": 65,
            "description": "Sets the maximum height of the expandable area of the view",
            "itemtype": "method",
            "name": "_uiSetMaxHeight",
            "access": "protected",
            "tagname": "",
            "class": "eZ.TreeActionView",
            "module": "ez-translateactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-treeactionview.js",
            "line": 82,
            "description": "Renders the tree action view. The view is rendered only once. When\nrendered, the view container gets the button action view class.",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "",
                "type": "eZ.TreeActionView"
            },
            "class": "eZ.TreeActionView",
            "module": "ez-translateactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-treeactionview.js",
            "line": 101,
            "description": "`treeNavigate` event handler. It makes sure the tree action view is\nunexpanded when navigating with the tree.",
            "itemtype": "method",
            "name": "_uiNavigate",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.TreeActionView",
            "module": "ez-translateactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-treeactionview.js",
            "line": 113,
            "description": "Toggles the expanded state",
            "itemtype": "method",
            "name": "_toggleExpanded",
            "access": "protected",
            "tagname": "",
            "class": "eZ.TreeActionView",
            "module": "ez-translateactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-treeactionview.js",
            "line": 124,
            "description": "Holds tree being displayed",
            "itemtype": "attribute",
            "name": "tree",
            "type": "eZ.ContentTree",
            "writeonce": "",
            "class": "eZ.TreeActionView",
            "module": "ez-translateactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/actions/ez-treeactionview.js",
            "line": 135,
            "description": "Holds the tree view to display the tree object",
            "itemtype": "attribute",
            "name": "treeView",
            "type": "eZ.TreeView",
            "class": "eZ.TreeActionView",
            "module": "ez-translateactionview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 31,
            "description": "Stores the name of the author",
            "itemtype": "attribute",
            "name": "name",
            "type": "String",
            "default": "\"\"",
            "class": "Author",
            "module": "ez-author-editview"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 42,
            "description": "Stores the email of the author",
            "itemtype": "attribute",
            "name": "email",
            "type": "String",
            "default": "\"\"",
            "class": "Author",
            "module": "ez-author-editview"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 53,
            "description": "Stores the email validity of the author's email",
            "itemtype": "attribute",
            "name": "emailValid",
            "type": "Boolean",
            "default": "false",
            "class": "Author",
            "module": "ez-author-editview"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 105,
            "description": "Enables/disables the remove author button depending on the\n`canRemove` attribute value",
            "itemtype": "method",
            "name": "_uiHandleCanRemove",
            "access": "protected",
            "tagname": "",
            "class": "AuthorInputView",
            "module": "ez-author-editview"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 120,
            "description": "Reflects in the DOM the `showInfos` attribute value",
            "itemtype": "method",
            "name": "_uiHandleShowInfos",
            "access": "protected",
            "tagname": "",
            "class": "AuthorInputView",
            "module": "ez-author-editview"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 144,
            "description": "Validates the filled author after the name has been changed",
            "itemtype": "method",
            "name": "_validateName",
            "access": "protected",
            "tagname": "",
            "class": "AuthorInputView",
            "module": "ez-author-editview"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 155,
            "description": "Validates the filled author after the email has been changed",
            "itemtype": "method",
            "name": "_validateEmail",
            "access": "protected",
            "tagname": "",
            "class": "AuthorInputView",
            "module": "ez-author-editview"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 172,
            "description": "Validates the current author",
            "itemtype": "method",
            "name": "validate",
            "class": "AuthorInputView",
            "module": "ez-author-editview"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 213,
            "description": "Checks whether the currently entered author is valid. Overrides the\ndefault implementation to take into account the case where\nerrorStatus contains an object reporting no validation error on both\nthe email and the name.",
            "itemtype": "method",
            "name": "isValid",
            "return": {
                "description": "Boolean"
            },
            "class": "AuthorInputView",
            "module": "ez-author-editview"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 230,
            "description": "Reflects in the UI the error status value",
            "itemtype": "method",
            "name": "_errorUI",
            "access": "protected",
            "tagname": "",
            "class": "AuthorInputView",
            "module": "ez-author-editview"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 258,
            "description": "Tap event handler for the remove author button",
            "itemtype": "method",
            "name": "_removeSelf",
            "access": "protected",
            "tagname": "",
            "class": "AuthorInputView",
            "module": "ez-author-editview"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 266,
            "description": "Fired when the user clicks on the remove author button",
            "itemtype": "event",
            "name": "authorRemove",
            "params": [
                {
                    "name": "author",
                    "description": "the author model attached to the view",
                    "type": "Author"
                }
            ],
            "class": "AuthorInputView",
            "module": "ez-author-editview"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 276,
            "description": "Stores whether the author can be removed",
            "itemtype": "attribute",
            "name": "canRemove",
            "type": "Boolean",
            "default": "false",
            "class": "AuthorInputView",
            "module": "ez-author-editview"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 287,
            "description": "Stores whether the author is required",
            "itemtype": "attribute",
            "name": "required",
            "type": "Boolean",
            "default": "false",
            "class": "AuthorInputView",
            "module": "ez-author-editview"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 298,
            "description": "Stores whether the field definition name should displayed",
            "itemtype": "attribute",
            "name": "showInfos",
            "type": "Boolean",
            "default": "true",
            "class": "AuthorInputView",
            "module": "ez-author-editview"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 309,
            "description": "The author model attached to this view",
            "itemtype": "attribute",
            "name": "author",
            "type": "Author",
            "default": "undefined",
            "class": "AuthorInputView",
            "module": "ez-author-editview"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 318,
            "description": "The content model the field belongs to",
            "itemtype": "attribute",
            "name": "content",
            "type": "eZ.Content",
            "default": "undefined",
            "class": "AuthorInputView",
            "module": "ez-author-editview"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 327,
            "description": "The field definition",
            "itemtype": "attribute",
            "name": "fieldDefinition",
            "type": "Object",
            "default": "undefined",
            "class": "AuthorInputView",
            "module": "ez-author-editview"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 353,
            "description": "Overrides the default error class defined in eZ.FieldEditView",
            "itemtype": "property",
            "name": "_errorClass",
            "access": "protected",
            "tagname": "",
            "type": "String",
            "default": "is-author-error",
            "class": "eZ.AuthorEditView",
            "module": "ez-author-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 364,
            "description": "Stores whether the edit view is rendered",
            "itemtype": "property",
            "name": "_rendered",
            "type": "Boolean",
            "default": "false",
            "access": "protected",
            "tagname": "",
            "class": "eZ.AuthorEditView",
            "module": "ez-author-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 374,
            "description": "Array of the AuthorInputView which render each author in the\nauthor model list",
            "itemtype": "property",
            "name": "_authorInputs",
            "type": "Array of AuthorInputView",
            "default": "[]",
            "access": "protected",
            "tagname": "",
            "class": "eZ.AuthorEditView",
            "module": "ez-author-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 385,
            "description": "List of authors to render",
            "itemtype": "property",
            "name": "_authorList",
            "type": "AuthorList",
            "default": "an instance of AuthorList",
            "access": "protected",
            "tagname": "",
            "class": "eZ.AuthorEditView",
            "module": "ez-author-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 414,
            "description": "Fills the author list property based on the author available in the\nfield value",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_fillAuthorList",
            "class": "eZ.AuthorEditView",
            "module": "ez-author-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 445,
            "description": "Author list add event handler. Reflects in the UI the newly added\nauthor.",
            "itemtype": "method",
            "name": "_uiAddAuthor",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "the add event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.AuthorEditView",
            "module": "ez-author-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 481,
            "description": "Author list remove event handler. Reflects in the UI the removed\nauthor",
            "itemtype": "method",
            "name": "_uiRemoveAuthor",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "the remove event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.AuthorEditView",
            "module": "ez-author-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 505,
            "description": "Custom removeAuthor event handler. Removes an author (provided in the\nevent facade) from the author list",
            "itemtype": "method",
            "name": "_removeAuthor",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "removeAuthor event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.AuthorEditView",
            "module": "ez-author-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 517,
            "description": "errorStatusChange event handler. \"Forwards\" the error status change\nof the author input view to the author edit view.",
            "itemtype": "method",
            "name": "_setErrorStatus",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "errorStatusChange event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.AuthorEditView",
            "module": "ez-author-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 535,
            "description": "Removes the author input view instance from the DOM",
            "itemtype": "method",
            "name": "_removeAuthorInputView",
            "access": "protected",
            "tagname": "",
            "class": "eZ.AuthorEditView",
            "module": "ez-author-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 547,
            "description": "Sets the required flag of the author input views depending on the\nfield definition configuration and on the current input",
            "itemtype": "method",
            "name": "_setRequiredFlag",
            "access": "protected",
            "tagname": "",
            "class": "eZ.AuthorEditView",
            "module": "ez-author-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 563,
            "description": "Validates the current input",
            "itemtype": "method",
            "name": "validate",
            "class": "eZ.AuthorEditView",
            "module": "ez-author-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 574,
            "description": "Checks that at least one author is correctly filled.",
            "itemtype": "method",
            "name": "_hasContent",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "boolean"
            },
            "class": "eZ.AuthorEditView",
            "module": "ez-author-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 589,
            "description": "Renders the view and its author input views",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "the view it self",
                "type": "eZ.AuthorEditView"
            },
            "class": "eZ.AuthorEditView",
            "module": "ez-author-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 602,
            "description": "Renders the author input views",
            "itemtype": "method",
            "name": "_renderAuthorInputs",
            "access": "protected",
            "tagname": "",
            "class": "eZ.AuthorEditView",
            "module": "ez-author-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 614,
            "description": "Render the author input view in parameter in the correct container",
            "itemtype": "method",
            "name": "_renderAuthorInput",
            "access": "protected",
            "tagname": "",
            "class": "eZ.AuthorEditView",
            "module": "ez-author-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 626,
            "description": "Event handler for the tap event on the add author button. Adds a new\nauthor in the author list",
            "itemtype": "method",
            "name": "_addAuthor",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "tap event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.AuthorEditView",
            "module": "ez-author-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 642,
            "description": "Defines the variables to imported in the field edit template for the\nurl field",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_variables",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.AuthorEditView",
            "module": "ez-author-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-author-editview.js",
            "line": 654,
            "description": "Returns an array of the author based on the current user input. Only\nthe valid authors are listed.",
            "itemtype": "method",
            "name": "_getFieldValue",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "Array"
            },
            "class": "eZ.AuthorEditView",
            "module": "ez-author-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 68,
            "description": "Method called at the end of the render process. The default\nimplementation does nothing, it is meant to be overridden in the view\nextending the binary base edit view.",
            "itemtype": "method",
            "name": "_afterRender",
            "access": "protected",
            "tagname": "",
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 79,
            "description": "Set the state classes on the view container",
            "itemtype": "method",
            "name": "_setStateClasses",
            "access": "protected",
            "tagname": "",
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 89,
            "description": "Validates the current input of the image against the is required\nfield definition setting.",
            "itemtype": "method",
            "name": "validate",
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 105,
            "description": "Returns the field value suitable for the REST API based on the\ncurrent input. It makes to sure to only send the actual content\nwhen it's needed. It returns null if no file has been chosen yet or\nundefined if no change happened since the version save event.",
            "itemtype": "method",
            "name": "_getFieldValue",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Object|Null|undefined"
            },
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 136,
            "description": "Method called at the end of the field value building process in\n`_getFieldValue`. It takes the fieldValue in parameter and MUST\nreturn the final field value. By default, it only returns the passed\nfield value. It is meant to be overridden in views extending the\nbinary base edit view if the field value is supposed to have\nadditional properties.",
            "itemtype": "method",
            "name": "_completeFieldValue",
            "params": [
                {
                    "name": "fieldValue",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 152,
            "description": "Checks whether the file field is currently empty.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_isEmpty",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 163,
            "description": "Event handler for the change event on the file input",
            "itemtype": "method",
            "name": "_updateFile",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade of the change event",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 177,
            "description": "Returns the warning message suitable when the user tries to use a too\nbig file",
            "itemtype": "method",
            "name": "_getOverSizeMessage",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "name",
                    "description": "the filename the user wants to use",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 190,
            "description": "Returns a \"human\" readable version of the max allowed file size",
            "itemtype": "method",
            "name": "_getHumanMaxSize",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 201,
            "description": "Read the content of the choosen File (if its size match the field\nconfiguration) and update the `file` attribute with the corresponding\nstructure",
            "itemtype": "method",
            "name": "_readFile",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "file",
                    "description": "the File object from the input file element",
                    "type": "File"
                }
            ],
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 225,
            "description": "Method called before we start reading the content of the selected\nfile. The default implementation does nothing, it is meant to be\noverridden in the views extending the binary base edit view.",
            "itemtype": "method",
            "name": "_beforeReadFile",
            "params": [
                {
                    "name": "file",
                    "description": "the selected file",
                    "type": "File"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 237,
            "description": "Checks whether the File in parameter is valid for the field. By\ndefault, only the size of the file is checked against the maximum\nallowed file size.",
            "itemtype": "method",
            "name": "_valid",
            "params": [
                {
                    "name": "file",
                    "description": "the File object to be stored in the field",
                    "type": "File"
                }
            ],
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "Boolean"
            },
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 251,
            "description": "Returns the maximum allowed size in bytes or 0 if no limit is set.",
            "itemtype": "method",
            "name": "_maxSize",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "Number"
            },
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 264,
            "description": "Checks whether the size is valid according to the field definition\nconfiguration. If the file can not be accepted, a warning message is\nset in the `warning` attribute.",
            "params": [
                {
                    "name": "file",
                    "description": "the File object to be stored in the field",
                    "type": "File"
                }
            ],
            "itemtype": "method",
            "name": "_validSize",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 284,
            "description": "Toggle a class on the view container based on the value",
            "itemtype": "method",
            "name": "_toggleClass",
            "params": [
                {
                    "name": "Mixed",
                    "description": "value"
                },
                {
                    "name": "cl",
                    "description": "the class to toggle",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 302,
            "description": "Event handler for the tap event on the remove button",
            "itemtype": "method",
            "name": "_removeBinaryFile",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade of tap event",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 315,
            "description": "Event handler for the tap event on the upload button",
            "itemtype": "method",
            "name": "_chooseFile",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade of the tap event",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 328,
            "description": "Event handler for the dragenter and dragover DOM event",
            "itemtype": "method",
            "name": "_prepareDrop",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 341,
            "description": "Prepares visually the drop area",
            "itemtype": "method",
            "name": "_uiPrepareDropArea",
            "params": [
                {
                    "name": "the",
                    "description": "event facade of the drag* event",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 353,
            "description": "Resets visually the drop area",
            "itemtype": "method",
            "name": "_uiResetDropArea",
            "access": "protected",
            "tagname": "",
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 363,
            "description": "Event handler for the drop DOM event.",
            "itemtype": "method",
            "name": "_drop",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 392,
            "description": "warningChange event handler, it displays/hides the warning message\ndepending on the attribute value.",
            "itemtype": "method",
            "name": "_uiHandleWarningMessage",
            "access": "protected",
            "tagname": "",
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 411,
            "description": "Event handler for the tap event on the hide link of the warning box.",
            "params": [
                {
                    "name": "e",
                    "description": "tap event facade",
                    "type": "EventFacade"
                }
            ],
            "itemtype": "method",
            "name": "_hideWarning",
            "access": "protected",
            "tagname": "",
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 423,
            "description": "Sets the `updated` attribute to false when the attached version is\nsaved. This is to avoid sending again and again the same file",
            "itemtype": "method",
            "name": "_trackVersionSave",
            "access": "private",
            "tagname": "",
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 436,
            "description": "Creates the file structure based on the File object provided by the\ninput file and on the base64 encoded binaryfile content. It also creates a\nblob URL for the newly selected object.",
            "itemtype": "method",
            "name": "_createFileStruct",
            "params": [
                {
                    "name": "file",
                    "description": "",
                    "type": "File"
                },
                {
                    "name": "content",
                    "description": "base64 encoded binaryfile content",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "access": "protected",
            "tagname": "",
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 457,
            "description": "file attribute setter. It converts the different input type to a\nconsistent object no matter if the file attribute is filled from the\nREST fieldValue or from the user input.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_fileSetter",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Object|Null"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 495,
            "description": "The file struct object for the current field. This attribute has\na setter to accept either null value, any REST fieldValue\nor an object created from a File.",
            "readonly": "",
            "itemtype": "attribute",
            "name": "file",
            "type": "{Object|null}",
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 510,
            "description": "Stores the warning message (if any) or false",
            "itemtype": "attribute",
            "name": "warning",
            "readonly": "",
            "type": "{String|false}",
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 522,
            "description": "Flag indicating whether the user changed something in the binaryfile\nfield. This attribute is used to avoid sending the same binaryfile\nagain and again.",
            "itemtype": "attribute",
            "name": "updated",
            "readonly": "",
            "type": "{Boolean}",
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binarybase-editview.js",
            "line": 536,
            "description": "FileReader instance",
            "itemtype": "attribute",
            "name": "fileReader",
            "type": "FileReader",
            "readonly": "",
            "class": "eZ.BinaryBaseEditView",
            "module": "ez-binarybase-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binaryfile-editview.js",
            "line": 31,
            "description": "Reflects the new binaryfile object in the generated UI",
            "itemtype": "method",
            "name": "_uiBinaryFileChange",
            "params": [
                {
                    "name": "e",
                    "description": "the binaryfile change event facade",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.BinaryFileEditView",
            "module": "ez-binaryfile-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binaryfile-editview.js",
            "line": 61,
            "description": "Adds or removes classes based on the mimetype of the file currently\nselected",
            "itemtype": "method",
            "name": "_setTypeClasses",
            "params": [
                {
                    "name": "add",
                    "description": "whether to add or remove the class",
                    "type": "Boolean"
                },
                {
                    "name": "binaryfile",
                    "description": "the binary file struct",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.BinaryFileEditView",
            "module": "ez-binaryfile-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binaryfile-editview.js",
            "line": 87,
            "description": "Returns the class reflecting the full mime type. The subtype part is\nsanitized so that we generate a valid class",
            "itemtype": "method",
            "name": "_getMimeTypeClass",
            "params": [
                {
                    "name": "mimeType",
                    "description": "the mime type (\"text/plain\" for instance)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "eZ.BinaryFileEditView",
            "module": "ez-binaryfile-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binaryfile-editview.js",
            "line": 103,
            "description": "Returns the class reflecting the type part of mime type. (ie \"text\"\nin \"text/plain\").",
            "itemtype": "method",
            "name": "_getTypeClass",
            "params": [
                {
                    "name": "mimeType",
                    "description": "the mime type (\"text/plain\" for instance)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "eZ.BinaryFileEditView",
            "module": "ez-binaryfile-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binaryfile-editview.js",
            "line": 118,
            "description": "Set the state classes on the view container",
            "itemtype": "method",
            "name": "_setStateClasses",
            "access": "protected",
            "tagname": "",
            "class": "eZ.BinaryFileEditView",
            "module": "ez-binaryfile-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binaryfile-editview.js",
            "line": 131,
            "description": "Defines the variables to be imported in the field edit template.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_variables",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.BinaryFileEditView",
            "module": "ez-binaryfile-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-binaryfile-editview.js",
            "line": 145,
            "description": "Removes the `url` property from the fieldValue so that the fieldValue\nrepresents a valid BinaryFile\\Value object.",
            "itemtype": "method",
            "name": "_completeFieldValue",
            "params": [
                {
                    "name": "fieldValue",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.BinaryFileEditView",
            "module": "ez-binaryfile-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-checkbox-editview.js",
            "line": 26,
            "description": "Defines the variables to imported in the field edit template for\nthe checkbox.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_variables",
            "return": {
                "description": "containing isRequired and defaultValue entries",
                "type": "Object"
            },
            "class": "eZ.CheckboxEditView",
            "module": "ez-checkbox-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-checkbox-editview.js",
            "line": 41,
            "description": "Returns the current value of the field.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getFieldValue",
            "return": {
                "description": "Boolean"
            },
            "class": "eZ.CheckboxEditView",
            "module": "ez-checkbox-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-checkbox-view.js",
            "line": 23,
            "description": "Overrides the name to use the generic field view template",
            "itemtype": "method",
            "name": "_getName",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "String"
            },
            "class": "eZ.CheckboxView",
            "module": "ez-checkbox-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-checkbox-view.js",
            "line": 34,
            "description": "Returns the actual value of the checkbox field as a string ('Yes' or\n'No').",
            "itemtype": "method",
            "name": "_getFieldValue",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "String"
            },
            "class": "eZ.CheckboxView",
            "module": "ez-checkbox-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-country-editview.js",
            "line": 39,
            "description": "Returns the country name corresponding to the given alpha2Code.\nIf the country is missing, it will return a country code and send a warning.",
            "itemtype": "method",
            "name": "_getCountryName",
            "params": [
                {
                    "name": "alpha2Code",
                    "description": "The country code (Alpha2)",
                    "type": "String"
                }
            ],
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.CountryEditView",
            "module": "ez-country-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-country-editview.js",
            "line": 125,
            "description": "The text and id values of the selected options",
            "itemtype": "attribute",
            "name": "values",
            "readonly": "",
            "default": "[]",
            "type": "Array",
            "class": "eZ.CountryEditView",
            "module": "ez-country-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-country-editview.js",
            "line": 134,
            "description": "The country list indexed by alpha2 code",
            "itemtype": "attribute",
            "name": "countryList",
            "readonly": "",
            "type": "{Object}",
            "class": "eZ.CountryEditView",
            "module": "ez-country-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-country-view.js",
            "line": 31,
            "description": "Returns the name of the countries that will be used in the template.\nIf a country is missing, it returns a country code (alpha2)\nand send a warning.",
            "itemtype": "method",
            "name": "_getFieldValue",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Array|String"
            },
            "class": "eZ.CountryView",
            "module": "ez-country-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-country-view.js",
            "line": 58,
            "description": "Returns the current country name.\nIf the country is missing, it will return a country code and send a warning.",
            "itemtype": "method",
            "name": "_getCountryName",
            "params": [
                {
                    "name": "alpha2Code",
                    "description": "The country code (Alpha2)",
                    "type": "String"
                }
            ],
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.CountryView",
            "module": "ez-country-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-country-view.js",
            "line": 84,
            "description": "Returns isMultiple variable in the template",
            "itemtype": "method",
            "name": "_variables",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "Object"
            },
            "class": "eZ.CountryView",
            "module": "ez-country-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-country-view.js",
            "line": 98,
            "description": "The country list indexed by alpha2 code",
            "itemtype": "attribute",
            "name": "countryList",
            "readonly": "",
            "type": "{Object}",
            "class": "eZ.CountryView",
            "module": "ez-country-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 39,
            "description": "Custom initializer method, it sets the event handling on the\nerrorStatusChange event",
            "itemtype": "method",
            "name": "initializer",
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 57,
            "description": "Synchronize Date attribute",
            "itemtype": "method",
            "name": "_syncDateAttribute",
            "access": "protected",
            "tagname": "",
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 71,
            "description": "Update the input with the date attribute\n(for browsers not supporting HTML5 date input )",
            "itemtype": "method",
            "name": "_uiUpdateInput",
            "access": "protected",
            "tagname": "",
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 82,
            "description": "Update the calendar with the date attribute\n(for browsers not supporting HTML5 date input )",
            "itemtype": "method",
            "name": "_uiUpdateCalendar",
            "access": "protected",
            "tagname": "",
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 104,
            "description": "Check if input is valid and set the date attribute\n(for browsers not supporting HTML5 date input )",
            "itemtype": "method",
            "name": "_manualInput",
            "access": "protected",
            "tagname": "",
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 115,
            "description": "Set the date attribute from the date choose in the custom calendar\n(for browsers not supporting HTML5 date input )",
            "itemtype": "method",
            "name": "_calendarInput",
            "access": "protected",
            "tagname": "",
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 131,
            "description": "Cancel the current date input",
            "itemtype": "method",
            "name": "_cancelDate",
            "access": "protected",
            "tagname": "",
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 143,
            "description": "Toggle the YUI calendar",
            "itemtype": "method",
            "name": "_toggleCalendar",
            "access": "protected",
            "tagname": "",
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 154,
            "description": "Validates the current input of date field",
            "itemtype": "method",
            "name": "validate",
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 167,
            "description": "Validation for browsers supporting date input",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_supportedDateInputValidate",
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 185,
            "description": "Validation for browsers NOT supporting date input",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_unsupportedDateInputValidate",
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 203,
            "description": "Defines the variables to import in the field edit template for date",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_variables",
            "return": {
                "description": "holding the variables for the template",
                "type": "Object"
            },
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 220,
            "description": "Check if browser supports",
            "itemtype": "method",
            "name": "_detectInputDateSupport",
            "access": "private",
            "tagname": "",
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 233,
            "description": "Initialize the calendar widget for browsers not supporting date input",
            "itemtype": "method",
            "name": "_initializeCalendarWidget",
            "access": "private",
            "tagname": "",
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 267,
            "description": "Check if date input is empty",
            "itemtype": "method",
            "name": "_isDateEmpty",
            "access": "private",
            "tagname": "",
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 277,
            "description": "Check if date is valid",
            "itemtype": "method",
            "name": "_isDateValid",
            "access": "private",
            "tagname": "",
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 287,
            "description": "Returns the date input node of the date template",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getInputNode",
            "return": {
                "description": "",
                "type": "Y.Node"
            },
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 299,
            "description": "Returns the input validity state object for the input generated by\nthe date template\n\nSee https://developer.mozilla.org/en-US/docs/Web/API/ValidityState",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getInputValidity",
            "return": {
                "description": "",
                "type": "ValidityState"
            },
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 313,
            "description": "Returns the currently filled date value",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getFieldValue",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 331,
            "description": "Checks if browser supports HTML5 date input",
            "itemtype": "attribute",
            "name": "supportsDateInput",
            "readonly": "",
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 342,
            "description": "YUI calendar instance",
            "itemtype": "attribute",
            "name": "calendar",
            "readonly": "",
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-editview.js",
            "line": 352,
            "description": "The valid date filled in the input to update the calendar",
            "itemtype": "attribute",
            "name": "date",
            "readonly": "",
            "type": "String",
            "class": "eZ.DateEditView",
            "module": "ez-date-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-view.js",
            "line": 23,
            "description": "Overrides the default implementation to make sure to use the same\ntemplate as the DateAndTimeView",
            "itemtype": "method",
            "name": "_getName",
            "return": {
                "description": "String"
            },
            "class": "eZ.CheckboxView",
            "module": "ez-checkbox-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-date-view.js",
            "line": 34,
            "description": "Returns the actual value of the date field as a formatted string\nsuitable to be displayed to the user. If the field is not filled, it\nreturns an empty string.",
            "itemtype": "method",
            "name": "_getFieldValue",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "String"
            },
            "class": "eZ.CheckboxView",
            "module": "ez-checkbox-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-dateandtime-editview.js",
            "line": 64,
            "description": "Validates the current input of date and time field",
            "itemtype": "method",
            "name": "validate",
            "class": "eZ.DateAndTimeEditView",
            "module": "ez-dateandtime-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-dateandtime-editview.js",
            "line": 82,
            "description": "Returns the error number for the validateRequired case",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getErrorNumberValidateRequired",
            "return": {
                "description": ""
            },
            "class": "eZ.DateAndTimeEditView",
            "module": "ez-dateandtime-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-dateandtime-editview.js",
            "line": 132,
            "description": "Returns the error number for the validateNotRequired case",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getErrorNumberValidateNotRequired",
            "return": {
                "description": ""
            },
            "class": "eZ.DateAndTimeEditView",
            "module": "ez-dateandtime-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-dateandtime-editview.js",
            "line": 175,
            "description": "Defines the variables to import in the field edit template for date and time",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_variables",
            "return": {
                "description": "holding the variables for the template",
                "type": "Object"
            },
            "class": "eZ.DateAndTimeEditView",
            "module": "ez-dateandtime-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-dateandtime-editview.js",
            "line": 201,
            "description": "Returns the date input node of the dateAndTime template",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getDateInputNode",
            "return": {
                "description": "",
                "type": "Y.Node"
            },
            "class": "eZ.DateAndTimeEditView",
            "module": "ez-dateandtime-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-dateandtime-editview.js",
            "line": 213,
            "description": "Returns the date input node\nthe date template",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getTimeInputNode",
            "return": {
                "description": "",
                "type": "Y.Node"
            },
            "class": "eZ.DateAndTimeEditView",
            "module": "ez-dateandtime-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-dateandtime-editview.js",
            "line": 226,
            "description": "Returns the input validity state object for the input generated by\nthe date of the date and time template\nFurthermore we added 'platformMissingDate' property to this object\n\nSee https://developer.mozilla.org/en-US/docs/Web/API/ValidityState",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getInputValidity",
            "return": {
                "description": "",
                "type": "ValidityState"
            },
            "class": "eZ.DateAndTimeEditView",
            "module": "ez-dateandtime-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-dateandtime-editview.js",
            "line": 246,
            "description": "Returns the input validity state object for the input generated by\nthe time of the date and time template\nFurthermore we added 'platformMissingTime' property to this object\n\nSee https://developer.mozilla.org/en-US/docs/Web/API/ValidityState",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getInputValidity",
            "return": {
                "description": "",
                "type": "ValidityState"
            },
            "class": "eZ.DateAndTimeEditView",
            "module": "ez-dateandtime-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-dateandtime-editview.js",
            "line": 266,
            "description": "Returns a timestamps in UTC",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getUtcTimeStamp",
            "params": [
                {
                    "name": "localizedTimestamp",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Timestamp converted to UTC in millisecond",
                "type": "Number"
            },
            "class": "eZ.DateAndTimeEditView",
            "module": "ez-dateandtime-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-dateandtime-editview.js",
            "line": 279,
            "description": "Returns the currently filled date and time value",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getFieldValue",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.DateAndTimeEditView",
            "module": "ez-dateandtime-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-dateandtime-editview.js",
            "line": 302,
            "description": "The number of the validate error",
            "itemtype": "attribute",
            "name": "validateError",
            "readonly": "",
            "class": "eZ.DateAndTimeEditView",
            "module": "ez-dateandtime-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-dateandtime-view.js",
            "line": 23,
            "description": "Returns the actual value of the date and time field as a formatted\nstring suitable to be displayed to the user. If the field is not\nfilled, it returns an empty string.",
            "itemtype": "method",
            "name": "_getFieldValue",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "String"
            },
            "class": "eZ.DateAndTimeView",
            "module": "ez-dateandtime-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-dateandtime-view.js",
            "line": 41,
            "description": "Formats the date part of the date object according to the locale\nsettings of the browser",
            "itemtype": "method",
            "name": "_formatDate",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "String"
            },
            "class": "eZ.DateAndTimeView",
            "module": "ez-dateandtime-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-dateandtime-view.js",
            "line": 54,
            "description": "Formats the time part of the date object according to the locale\nsettings of the browser and to the `useSeconds` field definition\nsettings.",
            "itemtype": "method",
            "name": "_formatDate",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "String"
            },
            "class": "eZ.DateAndTimeView",
            "module": "ez-dateandtime-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-dateandtime-view.js",
            "line": 73,
            "description": "Returns a Date object from the field value",
            "itemtype": "method",
            "name": "_getDateObject",
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "eZ.DateAndTimeView",
            "module": "ez-dateandtime-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-emailaddress-editview.js",
            "line": 36,
            "description": "Validates the current input of email address",
            "itemtype": "method",
            "name": "validate",
            "class": "eZ.EmailAddressEditView",
            "module": "ez-emailaddress-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-emailaddress-editview.js",
            "line": 53,
            "description": "Validates the input only if it is not valid already.\nThis approach allows not to nag the user with error messages while\nhe inputs value for the first time (before a blur from the input),\nat the same time allowing real-time response once a mistake is\ncorrected.",
            "itemtype": "method",
            "name": "_validateIfNotValid",
            "access": "protected",
            "tagname": "",
            "class": "eZ.EmailAddressEditView",
            "module": "ez-emailaddress-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-emailaddress-editview.js",
            "line": 69,
            "description": "Defines the variables to imported in the field edit template for\nemail address.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_variables",
            "return": {
                "description": "containing isRequired entry",
                "type": "Object"
            },
            "class": "eZ.EmailAddressEditView",
            "module": "ez-emailaddress-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-emailaddress-editview.js",
            "line": 83,
            "description": "Returns the input validity state object for the input generated by\nthe email address template\n\nSee https://developer.mozilla.org/en-US/docs/Web/API/ValidityState",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getInputValidity",
            "return": {
                "description": "",
                "type": "ValidityState"
            },
            "class": "eZ.EmailAddressEditView",
            "module": "ez-emailaddress-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-emailaddress-editview.js",
            "line": 97,
            "description": "Returns the currently filled email",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getFieldValue",
            "return": {
                "description": "String"
            },
            "class": "eZ.EmailAddressEditView",
            "module": "ez-emailaddress-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-emailaddress-editview.js",
            "line": 108,
            "description": "Checks email address validity based on the same regexp as\nthe one used in the EmailAddress FieldType. Regexp is tested only\nif field is not empty.\nOtherwise, the email address edit view could accept email\nthat will be considered invalid when creating/updating a content.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_isValidEmail",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.EmailAddressEditView",
            "module": "ez-emailaddress-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-float-editview.js",
            "line": 34,
            "description": "Validates the current input of Float",
            "itemtype": "method",
            "name": "validate",
            "class": "eZ.FloatEditView",
            "module": "ez-float-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-float-editview.js",
            "line": 75,
            "description": "Defines the variables to be imported in the field edit template for\nfloat",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_variables",
            "return": {
                "description": "containing isRequired, minFloatValue and\nmaxFloatValue entries",
                "type": "Object"
            },
            "class": "eZ.FloatEditView",
            "module": "ez-float-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-float-editview.js",
            "line": 104,
            "description": "Returns the input validity state object for the input generated by\nthe Float template\n\nSee https://developer.mozilla.org/en-US/docs/Web/API/ValidityState",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getInputValidity",
            "return": {
                "description": "",
                "type": "ValidityState"
            },
            "class": "eZ.FloatEditView",
            "module": "ez-float-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-float-editview.js",
            "line": 118,
            "description": "Returns the currently filled float value",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getFieldValue",
            "return": {
                "description": "Number"
            },
            "class": "eZ.FloatEditView",
            "module": "ez-float-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-float-view.js",
            "line": 27,
            "description": "Overrides the name to use the generic field view template",
            "itemtype": "method",
            "name": "_getName",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "String"
            },
            "class": "eZ.FloatView",
            "module": "ez-float-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-editview.js",
            "line": 52,
            "description": "Initializes the attributes events handling",
            "itemtype": "method",
            "name": "_initAttributesEvents",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ImageEditView",
            "module": "ez-image-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-editview.js",
            "line": 70,
            "description": "Reflects the new image object in the generated UI",
            "itemtype": "method",
            "name": "_uiImageChange",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ImageEditView",
            "module": "ez-image-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-editview.js",
            "line": 100,
            "description": "Set the state classes on the view container",
            "itemtype": "method",
            "name": "_setStateClasses",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ImageEditView",
            "module": "ez-image-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-editview.js",
            "line": 112,
            "description": "Event handler for the valuechange event on the input field for the\nalternative text",
            "itemtype": "method",
            "name": "_altTextChange",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade of the valuechange event",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.ImageEditView",
            "module": "ez-image-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-editview.js",
            "line": 124,
            "description": "Removes the *being updated* class before reading the image content.",
            "itemtype": "method",
            "name": "_beforeReadFile",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ImageEditView",
            "module": "ez-image-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-editview.js",
            "line": 134,
            "description": "Checks whether the File in parameter is valid for the field. It\nchecks the size of the selected file and its mime type.",
            "itemtype": "method",
            "name": "_valid",
            "params": [
                {
                    "name": "file",
                    "description": "the File object to be stored in the field",
                    "type": "File"
                }
            ],
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "Boolean"
            },
            "class": "eZ.ImageEditView",
            "module": "ez-image-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-editview.js",
            "line": 150,
            "description": "Checks that the mime type of the user selected file starts with\n\"image/\". In case of error, a warning message is set in the `warning`\nattribute.",
            "itemtype": "method",
            "name": "_validType",
            "params": [
                {
                    "name": "file",
                    "description": "the File object to be stored in the field",
                    "type": "File"
                }
            ],
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "Boolean"
            },
            "class": "eZ.ImageEditView",
            "module": "ez-image-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-editview.js",
            "line": 169,
            "description": "Returns a \"human\" readable version of the max allowed file size. It\nis overidden the max size is in byte in Image fields.",
            "itemtype": "method",
            "name": "_getHumanMaxSize",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.ImageEditView",
            "module": "ez-image-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-editview.js",
            "line": 181,
            "description": "Returns the maximum allowed size in bytes or 0 if no limit is set.\nThe default implementation is overriden because in the case of the\nImage field, the field definition directly contains the maximum size\nin bytes while for BinaryFile and Media, this size is in megabytes.",
            "itemtype": "method",
            "name": "_maxSize",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "Number"
            },
            "class": "eZ.ImageEditView",
            "module": "ez-image-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-editview.js",
            "line": 197,
            "description": "Defines the variables to be imported in the field edit template.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_variables",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.ImageEditView",
            "module": "ez-image-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-editview.js",
            "line": 212,
            "description": "Completes the field value with the alternative text",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_completeFieldValue",
            "params": [
                {
                    "name": "fieldValue",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.ImageEditView",
            "module": "ez-image-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-editview.js",
            "line": 226,
            "description": "Fire the `loadImageVariation` event",
            "itemtype": "method",
            "name": "_fireLoadImageVariation",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ImageEditView",
            "module": "ez-image-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-editview.js",
            "line": 234,
            "description": "Fired when the view needs the image variation",
            "itemtype": "event",
            "name": "loadImageVariation",
            "params": [
                {
                    "name": "field",
                    "description": "the Image field",
                    "type": "Object"
                },
                {
                    "name": "variation",
                    "description": "the variation name (large,\nreference, ...)",
                    "type": "String"
                }
            ],
            "class": "eZ.ImageEditView",
            "module": "ez-image-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-editview.js",
            "line": 249,
            "description": "Creates the image structure based on the File object provided by the\ninput file and on the base64 encoded image content. It also creates a\nblob URL for the newly selected object.",
            "itemtype": "method",
            "name": "_createFileStruct",
            "params": [
                {
                    "name": "file",
                    "description": "",
                    "type": "File"
                },
                {
                    "name": "content",
                    "description": "base64 encoded image content",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "access": "protected",
            "tagname": "",
            "class": "eZ.ImageEditView",
            "module": "ez-image-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-editview.js",
            "line": 273,
            "description": "image attribute setter. It converts the different input type to a\nconsistent object no matter if the image attribute is filled from the\nREST fieldValue or from the user input.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_fileSetter",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Object|Null"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.ImageEditView",
            "module": "ez-image-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-editview.js",
            "line": 313,
            "description": "The alternative image text",
            "itemtype": "attribute",
            "name": "alternativeText",
            "readonly": "",
            "type": "{String}",
            "class": "eZ.ImageEditView",
            "module": "ez-image-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-editview.js",
            "line": 325,
            "description": "The image variation to display",
            "itemtype": "attribute",
            "name": "imageVariation",
            "type": "{Object}",
            "class": "eZ.ImageEditView",
            "module": "ez-image-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-editview.js",
            "line": 335,
            "description": "The variation identifier to use to display the image",
            "itemtype": "attribute",
            "name": "variationIdentifier",
            "type": "{String}",
            "default": "'platformui_rawcontentview'",
            "initonly": "",
            "class": "eZ.ImageEditView",
            "module": "ez-image-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-view.js",
            "line": 28,
            "description": "Checks whether the field is empty",
            "itemtype": "method",
            "name": "_isFieldEmpty",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.ImageView",
            "module": "ez-image-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-view.js",
            "line": 39,
            "description": "Fire the `loadImageVariation` event",
            "itemtype": "method",
            "name": "_fireLoadImageVariation",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ImageView",
            "module": "ez-image-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-view.js",
            "line": 47,
            "description": "Fired when the view needs the image variation",
            "itemtype": "event",
            "name": "loadImageVariation",
            "params": [
                {
                    "name": "field",
                    "description": "the Image field",
                    "type": "Object"
                },
                {
                    "name": "variation",
                    "description": "the variation name (large,\nreference, ...)",
                    "type": "String"
                }
            ],
            "class": "eZ.ImageView",
            "module": "ez-image-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-view.js",
            "line": 62,
            "description": "Returns an object containing the additional variables",
            "itemtype": "method",
            "name": "_variables",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "Object"
            },
            "class": "eZ.ImageView",
            "module": "ez-image-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-view.js",
            "line": 77,
            "description": "The image variation to display",
            "itemtype": "attribute",
            "name": "imageVariation",
            "type": "{Object}",
            "class": "eZ.ImageView",
            "module": "ez-image-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-image-view.js",
            "line": 87,
            "description": "The variation identifier to use to display the image",
            "itemtype": "attribute",
            "name": "variationIdentifier",
            "type": "{String}",
            "default": "'platformui_rawcontentview'",
            "initonly": "",
            "class": "eZ.ImageView",
            "module": "ez-image-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-integer-editview.js",
            "line": 34,
            "description": "Validates the current input of Integer",
            "itemtype": "method",
            "name": "validate",
            "class": "eZ.IntegerEditView",
            "module": "ez-integer-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-integer-editview.js",
            "line": 69,
            "description": "Defines the variables to be imported in the field edit template for\ninteger",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_variables",
            "return": {
                "description": "containing isRequired, minIntegerValue and\nmaxIntegerValue entries",
                "type": "Object"
            },
            "class": "eZ.IntegerEditView",
            "module": "ez-integer-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-integer-editview.js",
            "line": 98,
            "description": "Returns the input validity state object for the input generated by\nthe Integer template\n\nSee https://developer.mozilla.org/en-US/docs/Web/API/ValidityState",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getInputValidity",
            "return": {
                "description": "",
                "type": "ValidityState"
            },
            "class": "eZ.IntegerEditView",
            "module": "ez-integer-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-integer-editview.js",
            "line": 112,
            "description": "Returns the currently filled value",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getFieldValue",
            "return": {
                "description": "Number"
            },
            "class": "eZ.IntegerEditView",
            "module": "ez-integer-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-integer-view.js",
            "line": 27,
            "description": "Overrides the name to use the generic field view template",
            "itemtype": "method",
            "name": "_getName",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "String"
            },
            "class": "eZ.IntegerView",
            "module": "ez-integer-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-isbn-editview.js",
            "line": 33,
            "description": "Validates the current input of the ISBN field",
            "itemtype": "method",
            "name": "validate",
            "class": "eZ.ISBNEditView",
            "module": "ez-isbn-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-isbn-editview.js",
            "line": 51,
            "description": "Get the raw field value (without dashes)",
            "itemtype": "method",
            "name": "_getRawFieldValue",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.ISBNEditView",
            "module": "ez-isbn-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-isbn-editview.js",
            "line": 62,
            "description": "Checks whether the field is empty",
            "itemtype": "method",
            "name": "_isFieldEmpty",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.ISBNEditView",
            "module": "ez-isbn-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-isbn-editview.js",
            "line": 73,
            "description": "Defines the variables to imported in the field edit template for ISBN",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_variables",
            "return": {
                "description": "containing isRequired",
                "type": "Object"
            },
            "class": "eZ.ISBNEditView",
            "module": "ez-isbn-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-isbn-editview.js",
            "line": 88,
            "description": "Checks if the  ISBN 13 is valid",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_checkISBN13",
            "class": "eZ.ISBNEditView",
            "module": "ez-isbn-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-isbn-editview.js",
            "line": 116,
            "description": "Checks if the  ISBN 10 is valid",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_checkISBN10",
            "class": "eZ.ISBNEditView",
            "module": "ez-isbn-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-isbn-editview.js",
            "line": 142,
            "description": "Returns the currently filled ISBN",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getFieldValue",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.ISBNEditView",
            "module": "ez-isbn-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-keyword-editview.js",
            "line": 32,
            "description": "Validates the current input of keyword field",
            "itemtype": "method",
            "name": "validate",
            "class": "eZ.KeywordEditView",
            "module": "ez-keyword-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-keyword-editview.js",
            "line": 46,
            "description": "Defines the variables to imported in the field edit template for keyword",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_variables",
            "return": {
                "description": "containing isRequired",
                "type": "Object"
            },
            "class": "eZ.KeywordEditView",
            "module": "ez-keyword-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-keyword-editview.js",
            "line": 60,
            "description": "Returns the input validity state object for the input generated by\nthe keyword template\n\nSee https://developer.mozilla.org/en-US/docs/Web/API/ValidityState",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getInputValidity",
            "return": {
                "description": "",
                "type": "ValidityState"
            },
            "class": "eZ.KeywordEditView",
            "module": "ez-keyword-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-keyword-editview.js",
            "line": 74,
            "description": "Returns the currently filled keyword value",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getFieldValue",
            "return": {
                "description": "String"
            },
            "class": "eZ.KeywordEditView",
            "module": "ez-keyword-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-keyword-view.js",
            "line": 23,
            "description": "Check if the array of the field value is empty",
            "itemtype": "method",
            "name": "_isFieldEmpty",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.KeywordView",
            "module": "ez-keyword-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-editview.js",
            "line": 58,
            "description": "Custom initializer method, it initializes maps API loader and\ninitializes the map in case of success, or shows an error message in\ncase of failure",
            "itemtype": "method",
            "name": "initializer",
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-editview.js",
            "line": 85,
            "description": "Initializes the map instance, adds a marker to the map, taking\ninto account default values (if any)",
            "itemtype": "method",
            "name": "_initMap",
            "access": "protected",
            "tagname": "",
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-editview.js",
            "line": 135,
            "description": "Event handler which is triggered only the first time the map is fully\nloaded (http://stackoverflow.com/questions/832692/how-to-check-if-google-maps-is-fully-loaded)\nFor now enabling buttons (if needed) and switching off loaders",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_mapFirstLoad",
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-editview.js",
            "line": 154,
            "description": "Attempts to find location of the address in the address input and\nchange coordinates and marker position accordingly",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_findAddress",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-editview.js",
            "line": 202,
            "description": "Catches \"Enter\" key strokes and triggers location finding process",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_findAddressInputKeyUp",
            "params": [
                {
                    "name": "e",
                    "description": "event facade of the keyboard event",
                    "type": "Object"
                }
            ],
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-editview.js",
            "line": 215,
            "description": "Attempts to locate the current user's device position using\nHTML5 Geolocation API",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_locateMe",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-editview.js",
            "line": 256,
            "description": "Callback which is called upon any change of the 'location' attribute\nFor now only updates the coordinates which are shown to the user\nin the \"dashboard\" and updates the marker position",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_locationChange",
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-editview.js",
            "line": 280,
            "description": "Centers the map on the current location's position",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_updateMapCenter",
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-editview.js",
            "line": 295,
            "description": "Marker dragging event handler",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_markerDrag",
            "params": [
                {
                    "name": "e",
                    "description": "the event object of the marker drag event",
                    "type": "Object"
                }
            ],
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-editview.js",
            "line": 306,
            "description": "Marker dragging event handler",
            "itemtype": "method",
            "name": "_markerDrag",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "the event object of the map click event",
                    "type": "Object"
                }
            ],
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-editview.js",
            "line": 317,
            "description": "Checking if the geolocation API is available",
            "itemtype": "method",
            "name": "_geolocationAvailable",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "true, if geolocation API is available",
                "type": "Boolean"
            },
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-editview.js",
            "line": 328,
            "description": "Returns current location as a Google LatLng object",
            "itemtype": "method",
            "name": "_getLocationAsLatLng",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "google.maps.LatLng"
            },
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-editview.js",
            "line": 343,
            "description": "Defines the variables to import in the field edit template for the\nmap location",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_variables",
            "return": {
                "description": "containing isRequired entry",
                "type": "Object"
            },
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-editview.js",
            "line": 357,
            "description": "Returns the currently filled location. The location contains the\nlatitude, the longitude and an address if it is filled by the user.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getFieldValue",
            "return": {
                "description": "Object"
            },
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-editview.js",
            "line": 373,
            "description": "The instance of the google map which is initialized in the widget",
            "itemtype": "attribute",
            "name": "map",
            "type": "{Object}",
            "default": "null",
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-editview.js",
            "line": 384,
            "description": "The location marker on the widget google map",
            "itemtype": "attribute",
            "name": "marker",
            "type": "{Object}",
            "default": "null",
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-editview.js",
            "line": 395,
            "description": "Current location object",
            "itemtype": "attribute",
            "name": "location",
            "type": "{Object}",
            "default": "{latitude: 0, longitude: 0}",
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-editview.js",
            "line": 420,
            "description": "Instance of a map API loader component.",
            "itemtype": "attribute",
            "name": "mapAPILoader",
            "type": "{Object} instance of a map API loader",
            "readonly": "",
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-view.js",
            "line": 31,
            "description": "Initialize the view by loading the map API if the field is not empty\nand make sure to load the map once the view is active",
            "itemtype": "method",
            "name": "initializer",
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-view.js",
            "line": 51,
            "description": "Renders the map location view",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "eZ.MapLocationView the view it self"
            },
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-view.js",
            "line": 63,
            "description": "Returns a clone of the DOM Node containing the field data",
            "itemtype": "method",
            "name": "_getInfoContent",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "DOM Node"
            },
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-view.js",
            "line": 76,
            "description": "mapAPIFailed event handler",
            "itemtype": "method",
            "name": "_mapAPIFailed",
            "access": "protected",
            "tagname": "",
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-view.js",
            "line": 89,
            "description": "mapAPIReady event handler. It calls the map api to render a map with\nthe data stored in the field",
            "itemtype": "method",
            "name": "_initMap",
            "access": "protected",
            "tagname": "",
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-view.js",
            "line": 121,
            "description": "Returns the placeholder DOM Node for the map",
            "itemtype": "method",
            "name": "_getMapDomNode",
            "access": "private",
            "tagname": "",
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-view.js",
            "line": 131,
            "description": "Returns a normalized value from the value stored in the field",
            "itemtype": "method",
            "name": "_getFieldValue",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "an object with the data stored in the field or undefined if\nthe field does not a valid value"
            },
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-maplocation-view.js",
            "line": 154,
            "description": "Instance of a map API loader component",
            "itemtype": "attribute",
            "name": "mapAPILoader",
            "type": "{Object} instance of a map loader component",
            "default": "the map api loader service if it is defined",
            "class": "eZ.MapLocationEditView",
            "module": "ez-maplocation-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-media-editview.js",
            "line": 62,
            "description": "Sets the event handler on the video/audio element to handle the\n*being updated* state, the width/height placeholder and a potential\nfile format error",
            "itemtype": "method",
            "name": "_watchPlayerEvents",
            "access": "protected",
            "tagname": "",
            "class": "eZ.MediaEditView",
            "module": "ez-media-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-media-editview.js",
            "line": 85,
            "description": "Sets the placeholder attribute on the width and height input with the\ngiven values",
            "itemtype": "method",
            "name": "_updateWidthHeightPlaceholder",
            "params": [
                {
                    "name": "widthValue",
                    "description": "",
                    "type": "String|Number"
                },
                {
                    "name": "heightValue",
                    "description": "",
                    "type": "String|Number"
                }
            ],
            "class": "eZ.MediaEditView",
            "module": "ez-media-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-media-editview.js",
            "line": 104,
            "description": "Adds the unsupported class and resets the width/height placeholder\nwhen the file can not read by the browser",
            "itemtype": "method",
            "name": "_mediaError",
            "params": [
                {
                    "name": "player",
                    "description": "the video/audio node",
                    "type": "Node"
                }
            ],
            "class": "eZ.MediaEditView",
            "module": "ez-media-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-media-editview.js",
            "line": 120,
            "description": "Event handler for the DOM change event on the controller, autoplay\nand loop checkboxes.",
            "itemtype": "method",
            "name": "_updateSetting",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.MediaEditView",
            "module": "ez-media-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-media-editview.js",
            "line": 133,
            "description": "Event handler the valuechange event on the width and height input",
            "itemtype": "method",
            "name": "_updateSize",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.MediaEditView",
            "module": "ez-media-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-media-editview.js",
            "line": 146,
            "description": "Removes the *being updated* and *unsupported* class before reading\nthe content of the file",
            "itemtype": "method",
            "name": "_beforeReadFile",
            "access": "protected",
            "tagname": "",
            "class": "eZ.MediaEditView",
            "module": "ez-media-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-media-editview.js",
            "line": 157,
            "description": "Reflects the new binaryfile object in the generated UI",
            "itemtype": "method",
            "name": "_uiBinaryFileChange",
            "params": [
                {
                    "name": "e",
                    "description": "the binaryfile change event facade",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.MediaEditView",
            "module": "ez-media-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-media-editview.js",
            "line": 184,
            "description": "Returns the video/audio node",
            "itemtype": "method",
            "name": "_getPlayerNode",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Node"
            },
            "class": "eZ.MediaEditView",
            "module": "ez-media-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-media-editview.js",
            "line": 195,
            "description": "Defines the variables to be imported in the field edit template.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_variables",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.MediaEditView",
            "module": "ez-media-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-media-editview.js",
            "line": 215,
            "description": "Completes the field value with the player settings",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_completeFieldValue",
            "params": [
                {
                    "name": "fieldValue",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.MediaEditView",
            "module": "ez-media-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-media-editview.js",
            "line": 235,
            "description": "Stores the autoplay setting",
            "itemtype": "attribute",
            "name": "autoplay",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "eZ.MediaEditView",
            "module": "ez-media-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-media-editview.js",
            "line": 248,
            "description": "Stores the hasController setting",
            "itemtype": "attribute",
            "name": "hasController",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "eZ.MediaEditView",
            "module": "ez-media-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-media-editview.js",
            "line": 261,
            "description": "Stores the loop setting",
            "itemtype": "attribute",
            "name": "loop",
            "type": "Boolean",
            "default": "false",
            "readonly": "",
            "class": "eZ.MediaEditView",
            "module": "ez-media-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-media-editview.js",
            "line": 274,
            "description": "Stores the width setting",
            "itemtype": "attribute",
            "name": "width",
            "type": "Number",
            "readonly": "",
            "class": "eZ.MediaEditView",
            "module": "ez-media-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-media-editview.js",
            "line": 286,
            "description": "Stores the height setting",
            "itemtype": "attribute",
            "name": "height",
            "type": "Number",
            "readonly": "",
            "class": "eZ.MediaEditView",
            "module": "ez-media-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-media-view.js",
            "line": 38,
            "description": "Adds the unsupported class when the file can not read by the browser",
            "itemtype": "method",
            "name": "_mediaError",
            "params": [
                {
                    "name": "player",
                    "description": "the video/audio node",
                    "type": "Node"
                }
            ],
            "class": "eZ.MediaView",
            "module": "ez-media-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-media-view.js",
            "line": 52,
            "description": "Sets the event handler on the video/audio element to detect whether\nthe file is supported.",
            "itemtype": "method",
            "name": "_watchPlayerEvents",
            "access": "protected",
            "tagname": "",
            "class": "eZ.MediaView",
            "module": "ez-media-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relation-editview.js",
            "line": 45,
            "description": "Synchronize the destinationContentId attribute when destinationContent change.",
            "itemtype": "method",
            "name": "_syncDestinationContentId",
            "access": "protected",
            "tagname": "",
            "class": "eZ.RelationEditView",
            "module": "ez-relation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relation-editview.js",
            "line": 61,
            "description": "Fire the `loadFieldRelatedContent` event",
            "itemtype": "method",
            "name": "_fireLoadFieldRelatedContent",
            "access": "protected",
            "tagname": "",
            "class": "eZ.RelationEditView",
            "module": "ez-relation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relation-editview.js",
            "line": 75,
            "description": "Checks whether the field is empty",
            "itemtype": "method",
            "name": "_isFieldEmpty",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.RelationEditView",
            "module": "ez-relation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relation-editview.js",
            "line": 86,
            "description": "Returns an object containing the additional variables",
            "itemtype": "method",
            "name": "_variables",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "Object"
            },
            "class": "eZ.RelationEditView",
            "module": "ez-relation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relation-editview.js",
            "line": 104,
            "description": "Tap event handler for the remove button. It resets the relation.",
            "itemtype": "method",
            "name": "_removeRelation",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.RelationEditView",
            "module": "ez-relation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relation-editview.js",
            "line": 127,
            "description": "Fire the contentDiscover event to launch the universal discovery widget.",
            "itemtype": "method",
            "name": "_runUniversalDiscovery",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.RelationEditView",
            "module": "ez-relation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relation-editview.js",
            "line": 144,
            "description": "Universal discovery contentDiscovered event handler to fill the relation after the user chose a content",
            "itemtype": "method",
            "name": "_selectRelation",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.RelationEditView",
            "module": "ez-relation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relation-editview.js",
            "line": 159,
            "description": "Returns the field value.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getFieldValue",
            "return": {
                "description": "Object"
            },
            "class": "eZ.RelationEditView",
            "module": "ez-relation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relation-editview.js",
            "line": 176,
            "description": "The destination content or content info of the relation",
            "itemtype": "attribute",
            "name": "destinationContent",
            "type": "{eZ.Content|eZ.ContentInfo}",
            "class": "eZ.RelationEditView",
            "module": "ez-relation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relation-editview.js",
            "line": 185,
            "description": "The destination content Id of the relation",
            "itemtype": "attribute",
            "name": "destinationContentId",
            "type": "String",
            "readonly": "",
            "class": "eZ.RelationEditView",
            "module": "ez-relation-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relation-view.js",
            "line": 28,
            "description": "Checks whether the field is empty",
            "itemtype": "method",
            "name": "_isFieldEmpty",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.RelationView",
            "module": "ez-relation-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relation-view.js",
            "line": 39,
            "description": "Fire the `loadFieldRelatedContent` event",
            "itemtype": "method",
            "name": "_fireLoadFieldRelatedContent",
            "access": "protected",
            "tagname": "",
            "class": "eZ.RelationView",
            "module": "ez-relation-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relation-view.js",
            "line": 53,
            "description": "Returns an object containing the additional variables",
            "itemtype": "method",
            "name": "_variables",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "Object"
            },
            "class": "eZ.RelationView",
            "module": "ez-relation-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relation-view.js",
            "line": 70,
            "description": "The destination content of the relation",
            "itemtype": "attribute",
            "name": "destinationContent",
            "type": "Y.eZ.Content",
            "class": "eZ.RelationView",
            "module": "ez-relation-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relationlist-editview.js",
            "line": 56,
            "description": "Make a DOM element vanish.",
            "itemtype": "method",
            "name": "_vanish",
            "params": [
                {
                    "name": "domIdentifier",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "reRender",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.RelationListEditView",
            "module": "ez-relationlist-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relationlist-editview.js",
            "line": 79,
            "description": "Synchronize the destinationContentId attribute when destinationContent change.",
            "itemtype": "method",
            "name": "_syncDestinationContentsIds",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.RelationListEditView",
            "module": "ez-relationlist-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relationlist-editview.js",
            "line": 95,
            "description": "Fire the `loadObjectRelations` event",
            "itemtype": "method",
            "name": "_fireLoadObjectRelations",
            "access": "protected",
            "tagname": "",
            "class": "eZ.RelationListEditView",
            "module": "ez-relationlist-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relationlist-editview.js",
            "line": 110,
            "description": "Checks whether the field is empty",
            "itemtype": "method",
            "name": "_isFieldEmpty",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.RelationListEditView",
            "module": "ez-relationlist-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relationlist-editview.js",
            "line": 124,
            "description": "Returns an object containing the additional variables",
            "itemtype": "method",
            "name": "_variables",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "Object"
            },
            "class": "eZ.RelationListEditView",
            "module": "ez-relationlist-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relationlist-editview.js",
            "line": 147,
            "description": "Tap event handler for the remove relation buttons.\nIt remove the content related to the button from the relation list.",
            "itemtype": "method",
            "name": "_removeRelation",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.RelationListEditView",
            "module": "ez-relationlist-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relationlist-editview.js",
            "line": 175,
            "description": "Fire the contentDiscover event to launch the universal discovery widget.",
            "itemtype": "method",
            "name": "_runUniversalDiscovery",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.RelationListEditView",
            "module": "ez-relationlist-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relationlist-editview.js",
            "line": 205,
            "description": "Universal discovery contentDiscovered event handler to fill the relation list\nafter the user chose one or several contents.",
            "itemtype": "method",
            "name": "_selectRelation",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.RelationListEditView",
            "module": "ez-relationlist-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relationlist-editview.js",
            "line": 227,
            "description": "Checks if the content info is already in the relation.",
            "itemtype": "method",
            "name": "_isRelated",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "contentInfo",
                    "description": "",
                    "type": "eZ.ContentInfo"
                }
            ],
            "return": {
                "description": "Boolean"
            },
            "class": "eZ.RelationListEditView",
            "module": "ez-relationlist-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relationlist-editview.js",
            "line": 239,
            "description": "Returns the field value.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getFieldValue",
            "return": {
                "description": "Object"
            },
            "class": "eZ.RelationListEditView",
            "module": "ez-relationlist-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relationlist-editview.js",
            "line": 252,
            "description": "The related contents of the relation list",
            "itemtype": "attribute",
            "name": "relatedContents",
            "type": "Array of (eZ.ContentInfo) or {eZ.Content}",
            "class": "eZ.RelationListEditView",
            "module": "ez-relationlist-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relationlist-editview.js",
            "line": 262,
            "description": "Array of contents Ids in the relation (e.g. 42, not /api/ezp/v2/content/objects/42)",
            "itemtype": "attribute",
            "name": "destinationContentsIds",
            "type": "Array",
            "readonly": "",
            "class": "eZ.RelationListEditView",
            "module": "ez-relationlist-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relationlist-view.js",
            "line": 28,
            "description": "Checks whether the field is empty",
            "itemtype": "method",
            "name": "_isFieldEmpty",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.RelationListView",
            "module": "ez-relationlist-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relationlist-view.js",
            "line": 41,
            "description": "Fire the `loadObjectRelations` event to retrieve the related contents",
            "itemtype": "method",
            "name": "_fireLoadObjectRelations",
            "access": "protected",
            "tagname": "",
            "class": "eZ.RelationListView",
            "module": "ez-relationlist-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relationlist-view.js",
            "line": 56,
            "description": "Returns an object containing the additional variables",
            "itemtype": "method",
            "name": "_variables",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "Object"
            },
            "class": "eZ.RelationListView",
            "module": "ez-relationlist-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-relationlist-view.js",
            "line": 78,
            "description": "The related contents of the relation list",
            "itemtype": "attribute",
            "name": "relatedContents",
            "type": "Array",
            "class": "eZ.RelationListView",
            "module": "ez-relationlist-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-editview.js",
            "line": 58,
            "description": "`focusModeChange` event handler, it adds or removes the focused\nclass on the view container.",
            "itemtype": "method",
            "name": "_uiFocusMode",
            "access": "protected",
            "tagname": "",
            "class": "eZ.RichTextEditView",
            "module": "ez-richtext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-editview.js",
            "line": 75,
            "description": "tap event handler on the focus button.",
            "itemtype": "method",
            "name": "_setFocusMode",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.RichTextEditView",
            "module": "ez-richtext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-editview.js",
            "line": 87,
            "description": "tap event handler on the save and return button.",
            "itemtype": "method",
            "name": "_unsetFocusMode",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.RichTextEditView",
            "module": "ez-richtext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-editview.js",
            "line": 99,
            "description": "Registers the plugin which name is given in the given plugin dir.",
            "itemtype": "method",
            "name": "_registerExternalCKEditorPlugin",
            "access": "protected",
            "tagname": "",
            "class": "eZ.RichTextEditView",
            "module": "ez-richtext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-editview.js",
            "line": 109,
            "description": "Initializes the editor",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_initEditor",
            "class": "eZ.RichTextEditView",
            "module": "ez-richtext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-editview.js",
            "line": 146,
            "description": "Forwards the given event to the YUI stack",
            "itemtype": "method",
            "name": "_forwardEditorEvent",
            "params": [
                {
                    "name": "e",
                    "description": "the CKEditor event info",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.RichTextEditView",
            "module": "ez-richtext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-editview.js",
            "line": 157,
            "description": "Adds or removes the editor focused class on the view container.",
            "itemtype": "method",
            "name": "_uiHandleEditorFocus",
            "params": [
                {
                    "name": "focus",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "eZ.RichTextEditView",
            "module": "ez-richtext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-editview.js",
            "line": 185,
            "description": "Checks whether the field is empty. The field is considered empty if:\n  * there's no section element\n  * or the section element has no child\n  * or the section element has only child without content",
            "itemtype": "method",
            "name": "_isEmpty",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.RichTextEditView",
            "module": "ez-richtext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-editview.js",
            "line": 217,
            "description": "Returns a DocumentFragment object or null if the parser failed to\nload the xhtml5edit version of the rich text field. The document\nfragment only contains the content of the root <section> element.",
            "itemtype": "method",
            "name": "_getHTMLDocumentFragment",
            "return": {
                "description": "",
                "type": "DocumentFragment"
            },
            "class": "eZ.RichTextEditView",
            "module": "ez-richtext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-editview.js",
            "line": 245,
            "description": "Serializes the Document to a string",
            "itemtype": "method",
            "name": "_serializeFieldValue",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.RichTextEditView",
            "module": "ez-richtext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-editview.js",
            "line": 268,
            "description": "Returns the field value suitable for the REST API based on the\ncurrent input.",
            "itemtype": "method",
            "name": "_getFieldValue",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "String"
            },
            "class": "eZ.RichTextEditView",
            "module": "ez-richtext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-editview.js",
            "line": 280,
            "description": "Returns the content of the editor in the XHTML5Edit format. The\nactual editor's content is passed through a set of\nEditorContentProcessors.",
            "itemtype": "method",
            "name": "_getXHTML5EditValue",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.RichTextEditView",
            "module": "ez-richtext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-editview.js",
            "line": 299,
            "description": "Stores the focus mode state. When true, the rich text UI is\nsupposed to be fullscreen with an action bar on the right.",
            "itemtype": "attribute",
            "name": "focusMode",
            "type": "{Boolean}",
            "readonly": "",
            "class": "eZ.RichTextEditView",
            "module": "ez-richtext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-editview.js",
            "line": 312,
            "description": "The AlloyEditor",
            "itemtype": "attribute",
            "name": "editor",
            "type": "AlloyEditor.Core",
            "class": "eZ.RichTextEditView",
            "module": "ez-richtext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-editview.js",
            "line": 323,
            "description": "AlloyEditor toolbar configuration",
            "itemtype": "attribute",
            "name": "toolbarsConfig",
            "type": "{Object}",
            "class": "eZ.RichTextEditView",
            "module": "ez-richtext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-editview.js",
            "line": 350,
            "description": "The path to use to load the CKEditor plugins",
            "itemtype": "attribute",
            "name": "ckeditorPluginPath",
            "readonly": "",
            "type": "{String}",
            "default": "'/bundles/ezplatformuiassets/vendors'",
            "class": "eZ.RichTextEditView",
            "module": "ez-richtext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-editview.js",
            "line": 363,
            "description": "Editor events to forward to the YUI stack",
            "itemtype": "attribute",
            "name": "forwardEvents",
            "readonly": "",
            "type": "{Array}",
            "default": "['contentDiscover', 'loadImageVariation']",
            "class": "eZ.RichTextEditView",
            "module": "ez-richtext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-editview.js",
            "line": 376,
            "description": "Hold the list of editor content processors. Those components\nshould have a `process` method and are there to clean up the\neditor content before using it through REST.",
            "itemtype": "attribute",
            "name": "editorContentProcessors",
            "type": "Array of {eZ.EditorContentProcessor}",
            "class": "eZ.RichTextEditView",
            "module": "ez-richtext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-view.js",
            "line": 24,
            "description": "Stores the parsed document from the xhtml5edit version of the\nrich text field. `null` means the document is invalid.",
            "itemtype": "property",
            "name": "_document",
            "type": "{Document|Null}",
            "access": "protected",
            "tagname": "",
            "class": "eZ.RichTextView",
            "module": "ez-richtext-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-view.js",
            "line": 42,
            "description": "Checks whether the field value is empty. A RichText field is\nconsidered empty if its content was successfully parsed and if the\n*root* `section` element has no child.",
            "itemtype": "method",
            "name": "_isFieldEmpty",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.RichTextView",
            "module": "ez-richtext-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-view.js",
            "line": 55,
            "description": "Returns an additional `parseError` variable indicating whether the\nxhtml5edit version of the rich text field was successfully parsed.",
            "itemtype": "method",
            "name": "_variables",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.RichTextView",
            "module": "ez-richtext-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-richtext-view.js",
            "line": 69,
            "description": "Returns a Document object or null is the parser failed to load the\nxhtml5edit version of the rich text field.",
            "itemtype": "method",
            "name": "_getDOMDocument",
            "return": {
                "description": "",
                "type": "Document"
            },
            "class": "eZ.RichTextView",
            "module": "ez-richtext-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 39,
            "description": "Initializes the selection edit view.",
            "itemtype": "method",
            "name": "initializer",
            "class": "eZ.SelectionEditView",
            "module": "ez-selection-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 45,
            "description": "The selection filter view instance. It is created when the view\nis set as active.",
            "itemtype": "property",
            "name": "_selectionFilter",
            "access": "protected",
            "tagname": "",
            "type": "eZ.SelectionFilterView",
            "class": "eZ.SelectionEditView",
            "module": "ez-selection-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 72,
            "description": "Renders the selection edit view.",
            "itemtype": "method",
            "name": "render",
            "class": "eZ.SelectionEditView",
            "module": "ez-selection-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 82,
            "description": "Initializes and the selection filter view for the current\nfield/fieldDefinition. Once created, it is render right away.",
            "itemtype": "method",
            "name": "_initSelectionFilter",
            "access": "protected",
            "tagname": "",
            "class": "eZ.SelectionEditView",
            "module": "ez-selection-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 123,
            "description": "Returns the selection filter",
            "itemtype": "method",
            "name": "_getSelectionFilter",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "Y.eZ.SelectionFilterView"
            },
            "class": "eZ.SelectionEditView",
            "module": "ez-selection-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 149,
            "description": "Returns the selection source",
            "itemtype": "method",
            "name": "_getSource",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "eZ.SelectionEditView",
            "module": "ez-selection-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 160,
            "description": "Returns an array of the values stored by the field being edited.",
            "itemtype": "method",
            "name": "_getSelectedTextValues",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "eZ.SelectionEditView",
            "module": "ez-selection-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 187,
            "description": "Adds the value to list of the currently selected values",
            "itemtype": "method",
            "name": "_addSelection",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String|Object"
                }
            ],
            "class": "eZ.SelectionEditView",
            "module": "ez-selection-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 201,
            "description": "Removes the value from the list of the currently selected values",
            "itemtype": "method",
            "name": "_removeSelection",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "node",
                    "description": "the node storing the value in the list",
                    "type": "Node",
                    "optional": true
                }
            ],
            "class": "eZ.SelectionEditView",
            "module": "ez-selection-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 223,
            "description": "Event handler for the tap event on a selected value. It removes the\ntapped value from the selected list",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "_removeValue",
            "access": "protected",
            "tagname": "",
            "class": "eZ.SelectionEditView",
            "module": "ez-selection-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 242,
            "description": "Event handler for the tap event on selection UI to display/hide the\nselection filter",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "_toggleShowSelectionUI",
            "access": "protected",
            "tagname": "",
            "class": "eZ.SelectionEditView",
            "module": "ez-selection-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 256,
            "description": "Returns true if the selection filter list should appear on top of the\nselection",
            "itemtype": "method",
            "name": "_isTopList",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "Boolean"
            },
            "class": "eZ.SelectionEditView",
            "module": "ez-selection-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 272,
            "description": "Event handler for the showSelectionUIChange event. It displays/hides\nthe selection fitler depending on the new value of the\nshowSelectionUI attribute.",
            "itemtype": "method",
            "name": "_uiShowSelectionList",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "event",
                    "description": "facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.SelectionEditView",
            "module": "ez-selection-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 300,
            "description": "Event handler for the valuesChange event. It makes sure the displayed\nselected values are in sync where the actual selection.",
            "itemtype": "method",
            "name": "_uiSyncSelectionValues",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.SelectionEditView",
            "module": "ez-selection-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 333,
            "description": "Check if there is a value that has been added or removed with the event facade.\nIf it is, then call validate().",
            "itemtype": "method",
            "name": "_validateAddedRemovedValues",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.SelectionEditView",
            "module": "ez-selection-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 347,
            "description": "Validates the current state of the selection. A selection is invalid\nif it's required and empty.",
            "itemtype": "method",
            "name": "validate",
            "class": "eZ.SelectionEditView",
            "module": "ez-selection-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 364,
            "description": "Defines the variables to imported in the field edit template.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_variables",
            "return": {
                "description": "containing isRequired, isMultiple and selected\nentries",
                "type": "Object"
            },
            "class": "eZ.SelectionEditView",
            "module": "ez-selection-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 382,
            "description": "Returns the field value. The selection field value is an array\ncontaining the indexes of the selected values in the field definition\noptions field settings.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getFieldValue",
            "return": {
                "description": "Array"
            },
            "class": "eZ.SelectionEditView",
            "module": "ez-selection-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 404,
            "description": "The text values of the selected options",
            "itemtype": "attribute",
            "name": "values",
            "readonly": "",
            "default": "[]",
            "type": "Array",
            "class": "eZ.SelectionEditView",
            "module": "ez-selection-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 417,
            "description": "Whether the selection filter should be shown",
            "itemtype": "attribute",
            "name": "showSelectionUI",
            "type": "boolean",
            "default": "false",
            "class": "eZ.SelectionEditView",
            "module": "ez-selection-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-editview.js",
            "line": 428,
            "description": "Whether the field accepts several values",
            "itemtype": "attribute",
            "name": "isMultiple",
            "readonly": "",
            "type": "boolean",
            "class": "eZ.SelectionEditView",
            "module": "ez-selection-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-view.js",
            "line": 23,
            "description": "Returns the value to be used in the template.",
            "itemtype": "method",
            "name": "_getFieldValue",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Array|String"
            },
            "class": "eZ.SelectionView",
            "module": "ez-selection-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-selection-view.js",
            "line": 49,
            "description": "Returns isMultiple variable in the template",
            "itemtype": "method",
            "name": "_variables",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "Object"
            },
            "class": "eZ.SelectionView",
            "module": "ez-selection-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-textblock-editview.js",
            "line": 32,
            "description": "Validates the current input of text block",
            "itemtype": "method",
            "name": "validate",
            "class": "eZ.TextBlockEditView",
            "module": "ez-textblock-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-textblock-editview.js",
            "line": 45,
            "description": "Defines the variables to imported in the field edit template for text\nblock.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_variables",
            "return": {
                "description": "containing isRequired entry",
                "type": "Object"
            },
            "class": "eZ.TextBlockEditView",
            "module": "ez-textblock-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-textblock-editview.js",
            "line": 59,
            "description": "Returns the input validity state object for the input generated by\nthe text block template\n\nSee https://developer.mozilla.org/en-US/docs/Web/API/ValidityState",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getInputValidity",
            "return": {
                "description": "",
                "type": "ValidityState"
            },
            "class": "eZ.TextBlockEditView",
            "module": "ez-textblock-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-textblock-editview.js",
            "line": 73,
            "description": "Returns the currently filled value of the text block field",
            "itemtype": "method",
            "name": "_getFieldValue",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "String"
            },
            "class": "eZ.TextBlockEditView",
            "module": "ez-textblock-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-textblock-editview.js",
            "line": 84,
            "description": "Returns the Y.Node of the textarea used for the user input",
            "itemtype": "method",
            "name": "_getTextareaNode",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Y.Node"
            },
            "class": "eZ.TextBlockEditView",
            "module": "ez-textblock-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-textline-editview.js",
            "line": 33,
            "description": "Validates the current input of text line",
            "itemtype": "method",
            "name": "validate",
            "class": "eZ.TextLineEditView",
            "module": "ez-textline-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-textline-editview.js",
            "line": 55,
            "description": "Defines the variables to imported in the field edit template for text\nline.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_variables",
            "return": {
                "description": "containing isRequired, maxLength and minLength\nentries",
                "type": "Object"
            },
            "class": "eZ.TextLineEditView",
            "module": "ez-textline-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-textline-editview.js",
            "line": 88,
            "description": "Returns the input validity state object for the input generated by\nthe text line template\n\nSee https://developer.mozilla.org/en-US/docs/Web/API/ValidityState",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getInputValidity",
            "return": {
                "description": "",
                "type": "ValidityState"
            },
            "class": "eZ.TextLineEditView",
            "module": "ez-textline-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-textline-editview.js",
            "line": 102,
            "description": "Returns the currently filled text line value",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getFieldValue",
            "return": {
                "description": "String"
            },
            "class": "eZ.TextLineEditView",
            "module": "ez-textline-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-time-editview.js",
            "line": 32,
            "description": "Check if browser supports time input",
            "itemtype": "method",
            "name": "_detectInputTimeSupport",
            "access": "private",
            "tagname": "",
            "class": "eZ.timeEditView",
            "module": "ez-time-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-time-editview.js",
            "line": 45,
            "description": "Validation for browsers supporting time input",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_supportedTimeInputValidate",
            "class": "eZ.timeEditView",
            "module": "ez-time-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-time-editview.js",
            "line": 63,
            "description": "Validation for browsers NOT supporting time input",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_unsupportedTimeInputValidate",
            "class": "eZ.timeEditView",
            "module": "ez-time-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-time-editview.js",
            "line": 81,
            "description": "Validates the current input of time field",
            "itemtype": "method",
            "name": "validate",
            "class": "eZ.timeEditView",
            "module": "ez-time-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-time-editview.js",
            "line": 94,
            "description": "Returns a timestamps in UTC",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getUtcTimeStamp",
            "params": [
                {
                    "name": "localizedTimestamp",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Timestamp converted to UTC in millisecond",
                "type": "Number"
            },
            "class": "eZ.timeEditView",
            "module": "ez-time-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-time-editview.js",
            "line": 107,
            "description": "Defines the variables to import in the field edit template for time",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_variables",
            "return": {
                "description": "{Object} holding the variables for the template",
                "type": "Object"
            },
            "class": "eZ.timeEditView",
            "module": "ez-time-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-time-editview.js",
            "line": 134,
            "description": "Returns the time input node of the time template",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getInputNode",
            "return": {
                "description": "",
                "type": "Y.Node"
            },
            "class": "eZ.timeEditView",
            "module": "ez-time-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-time-editview.js",
            "line": 146,
            "description": "Returns the input validity state object for the input generated by\nthe time template\n\nSee https://developer.mozilla.org/en-US/docs/Web/API/ValidityState",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getInputValidity",
            "return": {
                "description": "",
                "type": "ValidityState"
            },
            "class": "eZ.timeEditView",
            "module": "ez-time-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-time-editview.js",
            "line": 160,
            "description": "Returns the currently filled time value for browsers which support Time input",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_supportedTimeInputGetFieldValue",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "eZ.timeEditView",
            "module": "ez-time-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-time-editview.js",
            "line": 177,
            "description": "Returns the currently filled time value for browsers which DO NOT support Time input",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_unsupportedTimeInputGetFieldValue",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "eZ.timeEditView",
            "module": "ez-time-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-time-editview.js",
            "line": 203,
            "description": "Returns the currently filled time value",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getFieldValue",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "eZ.timeEditView",
            "module": "ez-time-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-time-editview.js",
            "line": 219,
            "description": "Checks if browser supports HTML5 time input",
            "itemtype": "attribute",
            "name": "supportsTimeInput",
            "readonly": "",
            "class": "eZ.timeEditView",
            "module": "ez-time-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-time-view.js",
            "line": 23,
            "description": "Overrides the default implementation to make sure to use the same\ntemplate as the DateAndTimeView",
            "itemtype": "method",
            "name": "_getName",
            "return": {
                "description": "String"
            },
            "class": "eZ.CheckboxView",
            "module": "ez-checkbox-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-time-view.js",
            "line": 34,
            "description": "Returns a timestamps in UTC",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getUtcTimeStamp",
            "params": [
                {
                    "name": "localizedTimestamp",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Timestamp converted to UTC in millisecond",
                "type": "Number"
            },
            "class": "eZ.CheckboxView",
            "module": "ez-checkbox-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-time-view.js",
            "line": 47,
            "description": "Formats the time in a human readable format. Locale is not taken into account.",
            "itemtype": "method",
            "name": "_formatDate",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "String"
            },
            "class": "eZ.CheckboxView",
            "module": "ez-checkbox-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-time-view.js",
            "line": 67,
            "description": "Returns the actual value of the time field as a formatted string\nsuitable to be displayed to the user. If the field is not filled, it\nreturns an empty string.",
            "itemtype": "method",
            "name": "_getFieldValue",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "String"
            },
            "class": "eZ.CheckboxView",
            "module": "ez-checkbox-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-time-view.js",
            "line": 85,
            "description": "Returns a Date object from the field value",
            "itemtype": "method",
            "name": "_getDateObject",
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "eZ.CheckboxView",
            "module": "ez-checkbox-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-url-editview.js",
            "line": 32,
            "description": "Validates the current input of primary url field",
            "itemtype": "method",
            "name": "validate",
            "class": "eZ.UrlEditView",
            "module": "ez-url-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-url-editview.js",
            "line": 45,
            "description": "Defines the variables to imported in the field edit template for the\nurl field",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_variables",
            "return": {
                "description": "containing isRequired entry",
                "type": "Object"
            },
            "class": "eZ.UrlEditView",
            "module": "ez-url-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-url-editview.js",
            "line": 59,
            "description": "Returns the primary input validity state object for the input\ngenerated by the url template\n\nSee https://developer.mozilla.org/en-US/docs/Web/API/ValidityState",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getInputValidity",
            "return": {
                "description": "",
                "type": "ValidityState"
            },
            "class": "eZ.UrlEditView",
            "module": "ez-url-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-url-editview.js",
            "line": 73,
            "description": "Returns the currently filled value as an object containing the link\nand the text.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getFieldValue",
            "return": {
                "description": "Object"
            },
            "class": "eZ.UrlEditView",
            "module": "ez-url-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-url-view.js",
            "line": 23,
            "description": "Returns the value to be used in the template. If the value is not\nfilled, it returns undefined otherwise an object with a `link` and a\n`text` entries.",
            "itemtype": "method",
            "name": "_getFieldValue",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "Object"
            },
            "class": "eZ.UrlView",
            "module": "ez-url-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 58,
            "description": "`loginAvailabilityStatusChange` event handler.",
            "itemtype": "method",
            "name": "_uiLoginAvailability",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 78,
            "description": "Set the login availability status to available",
            "itemtype": "method",
            "name": "setLoginAvailable",
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 87,
            "description": "Set the login availability status to unavailable",
            "itemtype": "method",
            "name": "setLoginUnavailable",
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 96,
            "description": "Set the login availability status to checking",
            "itemtype": "method",
            "name": "setCheckingLogin",
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 105,
            "description": "Set the login availability status to error",
            "itemtype": "method",
            "name": "setUnableToCheckLogin",
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 114,
            "description": "`*ErrorStatusChange` event handler, it sets or removes the error in\nthe correct place depending on the `*ErrorStatus` attribute changed.",
            "itemtype": "method",
            "name": "_uiUserError",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 135,
            "description": "Returns the structured filled value. Note that for the User field,\nthis can not be directly used in an update or create struct as the\nUsers have a special API.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getFieldValue",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 158,
            "description": "Validates the current input of the user.",
            "itemtype": "method",
            "name": "validate",
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 169,
            "description": "Validates the login input. There's no syntax validation but the\nlogin is required if the field is required or if the email has\nbeen filled by the editor.",
            "itemtype": "method",
            "name": "_validateLogin",
            "params": [
                {
                    "name": "checkUnicity",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 192,
            "description": "Fires the `isLoginAvailable` to get the availability status of the\ngiven login.",
            "itemtype": "method",
            "name": "_checkLoginAvailability",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "login",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 207,
            "description": "Validates the email input. The email should be a valid email and is\nrequired if the field is required or if the login has been filled\nby the editor.",
            "itemtype": "method",
            "name": "_validateEmail",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 228,
            "description": "Validates the password inputs. Both values should be the same.",
            "itemtype": "method",
            "name": "_validatePassword",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 257,
            "description": "Checks whether the field is set as required.",
            "itemtype": "method",
            "name": "_isFieldRequired",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 268,
            "description": "Checks whether the login is required. It's required when the field\nis required and if a login is not already stored.",
            "itemtype": "method",
            "name": "_isLoginRequired",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 280,
            "description": "Checks whether the password is required. It's required when the field\nis required and if a password is not already stored.",
            "itemtype": "method",
            "name": "_isPasswordRequired",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 292,
            "description": "Checks whether the field already has stored a login. This is useful\nto detect if the login or the password is required.",
            "itemtype": "method",
            "name": "_hasStoredLogin",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 306,
            "description": "Returns the input field value for the given property.",
            "itemtype": "method",
            "name": "_getInputFieldValue",
            "params": [
                {
                    "name": "property",
                    "description": "'login', 'email', 'password' or 'confirmpassword'",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 320,
            "description": "Returns the email input validity object.\nSee https://developer.mozilla.org/en-US/docs/Web/API/ValidityState",
            "itemtype": "method",
            "name": "_getEmailInputValidity",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "ValidityState"
            },
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 332,
            "description": "Returns the DOM Node where to display an error for the given\nerror status attribute.",
            "itemtype": "method",
            "name": "_getErrorDOMNode",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "attributeName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Node"
            },
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 347,
            "description": "Returns the *sub-container* from the given attribute name ie the part\nof the DOM dedicated to one of the property (login, email,\npassword).",
            "itemtype": "method",
            "name": "_getSubContainer",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "attributeName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Node"
            },
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 363,
            "description": "Converts the attribute error status identifier to its corresponding\nezuser property (login, email, password, confirmpassword)",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_attributeNametoSelectorPart",
            "params": [
                {
                    "name": "attributeName",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 377,
            "description": "Overrides the default errorStatus attribute to compute it based\non `loginErrorStatus`, `emailErrorStatus` and\n`passwordErrorStatus`.",
            "itemtype": "attribute",
            "name": "errorStatus",
            "readonly": "",
            "type": "{Boolean}",
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 397,
            "description": "`loginErrorStatus` error status",
            "itemtype": "attribute",
            "name": "loginErrorStatus",
            "type": "{Boolean|String}",
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 407,
            "description": "Flag indicating whether the login availability status.\nUse `setLoginAvailable`, `setLoginUnavailable`,\n`setCheckingLogin` or `setUnableToCheckLogin` to set it to the\ncorrect value.",
            "itemtype": "attribute",
            "name": "loginAvailabilityStatus",
            "type": "{String}",
            "readonly": "",
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 421,
            "description": "`emailErrorStatus` error status",
            "itemtype": "attribute",
            "name": "emailErrorStatus",
            "type": "{Boolean|String}",
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-user-editview.js",
            "line": 431,
            "description": "`passwordErrorStatus` error status",
            "itemtype": "attribute",
            "name": "passwordErrorStatus",
            "type": "{Boolean|String}",
            "class": "eZ.UserEditView",
            "module": "ez-user-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-xmltext-editview.js",
            "line": 32,
            "description": "Validates the current input of the xml text",
            "itemtype": "method",
            "name": "validate",
            "class": "eZ.XmlTextEditView",
            "module": "ez-xmltext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-xmltext-editview.js",
            "line": 45,
            "description": "Defines the variables to be imported in the field edit template for xml\ntext.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_variables",
            "return": {
                "description": "containing isRequired entry",
                "type": "Object"
            },
            "class": "eZ.XmlTextEditView",
            "module": "ez-xmltext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-xmltext-editview.js",
            "line": 59,
            "description": "Returns the input validity state object for the input generated by\nthe text block template\n\nSee https://developer.mozilla.org/en-US/docs/Web/API/ValidityState",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getInputValidity",
            "return": {
                "description": "",
                "type": "ValidityState"
            },
            "class": "eZ.XmlTextEditView",
            "module": "ez-xmltext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-xmltext-editview.js",
            "line": 73,
            "description": "Returns the field value suitable for the REST API based on the\ncurrent input.",
            "itemtype": "method",
            "name": "_getFieldValue",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "String"
            },
            "class": "eZ.XmlTextEditView",
            "module": "ez-xmltext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-xmltext-editview.js",
            "line": 85,
            "description": "Returns the textarea Node used for the user input",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_getTextareaNode",
            "return": {
                "description": "",
                "type": "Y.Node"
            },
            "class": "eZ.XmlTextEditView",
            "module": "ez-xmltext-editview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/fields/ez-xmltext-view.js",
            "line": 23,
            "description": "Returns the xml code stored in the XmlText field",
            "itemtype": "method",
            "name": "_getFieldValue",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "String"
            },
            "class": "eZ.XmlTextView",
            "module": "ez-xmltext-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/navigation/ez-navigationitemparameterview.js",
            "line": 29,
            "description": "Checks that the `matchParameter` has the same value in the matched\nroute and in the `route` attribute",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_parameterMatch",
            "params": [
                {
                    "name": "route",
                    "description": "the matched route object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.NavigationItemParameterView",
            "module": "ez-navigationitemparameterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/navigation/ez-navigationitemparameterview.js",
            "line": 48,
            "description": "Checks whether the navigation item is selected or not based on the\nlocation id in the route.",
            "itemtype": "method",
            "name": "matchRoute",
            "params": [
                {
                    "name": "route",
                    "description": "the matched route object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.NavigationItemParameterView",
            "module": "ez-navigationitemparameterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/navigation/ez-navigationitemparameterview.js",
            "line": 64,
            "description": "Stores the identifier of the parameter to check in the matched route\nand in the `route` attribute",
            "itemtype": "attribute",
            "name": "matchParameter",
            "type": "{String}",
            "required": 1,
            "class": "eZ.NavigationItemParameterView",
            "module": "ez-navigationitemparameterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/navigation/ez-navigationitemsubtreeview.js",
            "line": 28,
            "description": "Checks whether the navigation item is selected or not based on the\nlocation id in the route.",
            "itemtype": "method",
            "name": "matchRoute",
            "params": [
                {
                    "name": "route",
                    "description": "the matched route object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.NavigationItemSubtreeView",
            "module": "ez-navigationitemsubtreeview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/navigation/ez-navigationitemview.js",
            "line": 34,
            "description": "selectedChange event handler. Adds or removes the navigation active\nclass depending on the `selected` attribute value.",
            "itemtype": "method",
            "name": "_uiSelectedChange",
            "access": "protected",
            "tagname": "",
            "class": "eZ.NavigationItemView",
            "module": "ez-navigationitemview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/navigation/ez-navigationitemview.js",
            "line": 61,
            "description": "Returns whether the matched route is the same as the one stored in\nthe navigation item.",
            "itemtype": "method",
            "name": "_sameRoute",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "route",
                    "description": "the matched route",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Boolean"
            },
            "class": "eZ.NavigationItemView",
            "module": "ez-navigationitemview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/navigation/ez-navigationitemview.js",
            "line": 74,
            "description": "Checks whether the navigation item is selected or not based on the\nmatched route object provided by the navigation hub service.\nThis default implementation only compares the matched route name\nagainst the route stored in the `route` attribute.",
            "itemtype": "method",
            "name": "matchRoute",
            "params": [
                {
                    "name": "route",
                    "description": "the matched route object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.NavigationItemView",
            "module": "ez-navigationitemview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/navigation/ez-navigationitemview.js",
            "line": 92,
            "description": "Identifier of the navigation item",
            "itemtype": "attribute",
            "name": "identifier",
            "type": "string",
            "class": "eZ.NavigationItemView",
            "module": "ez-navigationitemview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/navigation/ez-navigationitemview.js",
            "line": 100,
            "description": "Title of the navigation item",
            "itemtype": "attribute",
            "name": "title",
            "type": "String",
            "class": "eZ.NavigationItemView",
            "module": "ez-navigationitemview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/navigation/ez-navigationitemview.js",
            "line": 108,
            "description": "Route configuration of the item. This should contain an object\nwith a `name` property referencing a route and optionally a\n`params` property holding the parameters of the route.",
            "itemtype": "attribute",
            "name": "route",
            "type": "Object",
            "class": "eZ.NavigationItemView",
            "module": "ez-navigationitemview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/navigation/ez-navigationitemview.js",
            "line": 118,
            "description": "Flag indicating whether the item is selected according to the\nmatched route provided to the last call of `match` vs. the route\nstored in the `route` attribute",
            "itemtype": "attribute",
            "name": "selected",
            "type": "Boolean",
            "readonly": "",
            "default": "false",
            "class": "eZ.NavigationItemView",
            "module": "ez-navigationitemview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/serverside/ez-contenttypeeditserversideview.js",
            "line": 33,
            "description": "tap event handler on the root item selection buttons. It launches the\nuniversal discovery widget so that the user can pick a content.",
            "itemtype": "method",
            "name": "_pickRoot",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.ContentTypeEditServerSideView",
            "module": "ez-contenttypeeditserversideview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/serverside/ez-contenttypeeditserversideview.js",
            "line": 54,
            "description": "Puts picked location id into root selection input. Input is selected by selector\nprovided in `data-relation-root-input-selector` attribute of button, for example\n<button data-relation-root-input-selector=\"#id_of_input\"></button>",
            "itemtype": "method",
            "name": "_setRoot",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "Y.Node"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.ContentTypeEditServerSideView",
            "module": "ez-contenttypeeditserversideview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/serverside/ez-roleserversideview.js",
            "line": 34,
            "description": "tap event handler on the role assign buttons. It launches the\nuniversal discovery widget so that the user can pick some contents.",
            "itemtype": "method",
            "name": "_pickSubtree",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.RoleServerSideView",
            "module": "ez-roleserversideview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/serverside/ez-roleserversideview.js",
            "line": 62,
            "description": "Changes the state of the provided assign button to be *loading* and\nto be disabled",
            "itemtype": "method",
            "name": "_uiSetAssignRoleLoading",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "Y.Node"
                }
            ],
            "class": "eZ.RoleServerSideView",
            "module": "ez-roleserversideview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/serverside/ez-roleserversideview.js",
            "line": 74,
            "description": "Changes the state of the provided assign button to not be *loading*\nand to be enabled.",
            "itemtype": "method",
            "name": "_uiUnsetAssignRoleLoading",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "Y.Node"
                }
            ],
            "class": "eZ.RoleServerSideView",
            "module": "ez-roleserversideview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/serverside/ez-sectionserversideview.js",
            "line": 34,
            "description": "tap event handler on the section assign buttons. It launches the\nuniversal discovery widget so that the user can pick some contents.",
            "itemtype": "method",
            "name": "_pickSubtree",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.SectionServerSideView",
            "module": "ez-sectionserversideview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/serverside/ez-sectionserversideview.js",
            "line": 63,
            "description": "Changes the state of the provided assign button to be *loading* and\nto be disabled",
            "itemtype": "method",
            "name": "_uiSetAssignSectionLoading",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "Y.Node"
                }
            ],
            "class": "eZ.SectionServerSideView",
            "module": "ez-sectionserversideview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/serverside/ez-sectionserversideview.js",
            "line": 75,
            "description": "Changes the state of the provided assign button to not be *loading*\nand to be enabled.",
            "itemtype": "method",
            "name": "_uiUnsetAssignSectionLoading",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "button",
                    "description": "",
                    "type": "Y.Node"
                }
            ],
            "class": "eZ.SectionServerSideView",
            "module": "ez-sectionserversideview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/serverside/ez-sectionserversideview.js",
            "line": 87,
            "description": "Refreshes the view",
            "itemtype": "method",
            "name": "_refreshView",
            "access": "protected",
            "tagname": "",
            "class": "eZ.SectionServerSideView",
            "module": "ez-sectionserversideview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/serverside/ez-sectionserversideview.js",
            "line": 94,
            "description": "Fired when the view needs to be refreshed",
            "itemtype": "event",
            "name": "refreshView",
            "class": "eZ.SectionServerSideView",
            "module": "ez-sectionserversideview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-contentcreateplugin.js",
            "line": 28,
            "description": "Resets the state of the plugin's attributes",
            "itemtype": "method",
            "name": "parallelLoad",
            "params": [
                {
                    "name": "next",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.Plugin.ContentCreate",
            "module": "ez-contentcreateplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-contentcreateplugin.js",
            "line": 41,
            "description": "Sets the contentType, languageCode and parentLocation on the next\nview service if the users wants to create a new content",
            "itemtype": "method",
            "name": "setNextViewServiceParameters",
            "params": [
                {
                    "name": "service",
                    "description": "",
                    "type": "eZ.ViewService"
                }
            ],
            "class": "eZ.Plugin.ContentCreate",
            "module": "ez-contentcreateplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-contentcreateplugin.js",
            "line": 59,
            "description": "Fetches the content type groups and the content types.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getContentTypesList",
            "params": [
                {
                    "name": "event",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.Plugin.ContentCreate",
            "module": "ez-contentcreateplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-contentcreateplugin.js",
            "line": 106,
            "description": "Retrieves and stores the content creation parameters from\nthe createContent event and redirect the user to the createContent\nroute.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_handleCreateContentAction",
            "params": [
                {
                    "name": "event",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.Plugin.ContentCreate",
            "module": "ez-contentcreateplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-contentcreateplugin.js",
            "line": 131,
            "description": "The content type to use to create the new content",
            "itemtype": "attribute",
            "name": "contentType",
            "default": "undefined",
            "type": "Y.eZ.ContentType",
            "class": "eZ.Plugin.ContentCreate",
            "module": "ez-contentcreateplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-contentcreateplugin.js",
            "line": 140,
            "description": "The language code to use to create the new content",
            "itemtype": "attribute",
            "name": "languageCode",
            "default": "undefined",
            "type": "String",
            "class": "eZ.Plugin.ContentCreate",
            "module": "ez-contentcreateplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-contentcreateplugin.js",
            "line": 149,
            "description": "The parent location of the content that will be created",
            "itemtype": "attribute",
            "name": "parentLocation",
            "type": "Y.eZ.Location",
            "default": "undefined",
            "class": "eZ.Plugin.ContentCreate",
            "module": "ez-contentcreateplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-contentcreateplugin.js",
            "line": 158,
            "description": "The parent content of the content that will be created",
            "itemtype": "attribute",
            "name": "parentContent",
            "type": "Y.eZ.Content",
            "default": "undefined",
            "class": "eZ.Plugin.ContentCreate",
            "module": "ez-contentcreateplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-contentsetmainlocationplugin.js",
            "line": 32,
            "description": "setMainLocation event handler, opens confirm box to confirm that given location\nto be set as main location",
            "itemtype": "method",
            "name": "_setMainLocationConfirm",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "setMainLocation event facade",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.Plugin.ContentSetMainLocation",
            "module": "ez-contentsetmainlocationplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-contentsetmainlocationplugin.js",
            "line": 54,
            "description": "Sets the given location as the main location of content. After that calls the callback function.",
            "itemtype": "method",
            "name": "_setMainLocation",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "locationId",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.Plugin.ContentSetMainLocation",
            "module": "ez-contentsetmainlocationplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-contentsetmainlocationplugin.js",
            "line": 99,
            "description": "Fire 'notify' event",
            "itemtype": "method",
            "name": "_notify",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "text",
                    "description": "the text shown during the notification",
                    "type": "String"
                },
                {
                    "name": "identifier",
                    "description": "the identifier of the notification",
                    "type": "String"
                },
                {
                    "name": "state",
                    "description": "the state of the notification",
                    "type": "String"
                },
                {
                    "name": "timeout",
                    "description": "the number of second, the notification will be shown",
                    "type": "Integer"
                }
            ],
            "class": "eZ.Plugin.ContentSetMainLocation",
            "module": "ez-contentsetmainlocationplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-contenttreeplugin.js",
            "line": 28,
            "description": "`toggleNode` event handler. It just toggles the open state of the\nnode which `nodeId` is passed in the event facade",
            "itemtype": "method",
            "name": "_toggleNode",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.Plugin.ContentTree",
            "module": "ez-contenttreeplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-contenttreeplugin.js",
            "line": 40,
            "description": "Loads the children node of the given `node`. This method implements\nthe `load` method of the Y.Plugin.Tree.Lazy plugin",
            "itemtype": "method",
            "name": "_loadNode",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Y.Tree.Node"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.Plugin.ContentTree",
            "module": "ez-contenttreeplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-contenttreeplugin.js",
            "line": 130,
            "description": "Loads the Content for each tree node representing the children of\n`levelLocation`.",
            "itemtype": "method",
            "name": "_loadContents",
            "params": [
                {
                    "name": "levelLocation",
                    "description": "",
                    "type": "eZ.Location"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.Plugin.ContentTree",
            "module": "ez-contenttreeplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-contenttreeplugin.js",
            "line": 170,
            "description": "The Tree structure to display the locations",
            "itemtype": "attribute",
            "name": "tree",
            "type": "eZ.ContentTree",
            "readonly": "",
            "class": "eZ.Plugin.ContentTree",
            "module": "ez-contenttreeplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-copycontentplugin.js",
            "line": 28,
            "description": "copyAction event handler, launch the universal discovery widget\nto choose a location to copy the content",
            "itemtype": "method",
            "name": "_copySelectLocation",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.Plugin.CopyContent",
            "module": "ez-copycontentplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-copycontentplugin.js",
            "line": 50,
            "description": "Copy the content to the selected location",
            "itemtype": "method",
            "name": "_copyContent",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.Plugin.CopyContent",
            "module": "ez-copycontentplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-copycontentplugin.js",
            "line": 90,
            "description": "Redirect the user to the copied content",
            "itemtype": "method",
            "name": "_redirect",
            "params": [
                {
                    "name": "locationId",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.Plugin.CopyContent",
            "module": "ez-copycontentplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-copycontentplugin.js",
            "line": 109,
            "description": "Fired when the content is copied",
            "itemtype": "event",
            "name": "copiedContent",
            "params": [
                {
                    "name": "copiedContent",
                    "description": "",
                    "type": "eZ.Content"
                },
                {
                    "name": "originalContent",
                    "description": "",
                    "type": "eZ.Content"
                }
            ],
            "class": "eZ.Plugin.CopyContent",
            "module": "ez-copycontentplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-copycontentplugin.js",
            "line": 125,
            "description": "Fire 'notify' event",
            "itemtype": "method",
            "name": "_notify",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "text",
                    "description": "the text shown during the notification",
                    "type": "String"
                },
                {
                    "name": "identifier",
                    "description": "the identifier of the notification",
                    "type": "String"
                },
                {
                    "name": "state",
                    "description": "the state of the notification",
                    "type": "String"
                },
                {
                    "name": "timeout",
                    "description": "the number of second, the notification will be shown",
                    "type": "Integer"
                }
            ],
            "class": "eZ.Plugin.CopyContent",
            "module": "ez-copycontentplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-copycontentplugin.js",
            "line": 148,
            "description": "The copied content",
            "itemtype": "attribute",
            "name": "copiedContent",
            "type": "{eZ.Content}",
            "class": "eZ.Plugin.CopyContent",
            "module": "ez-copycontentplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-discarddraftplugin.js",
            "line": 28,
            "description": "Event handler for the discardAction event. It deletes the version\nfrom the repositry and fire the discardedDraft event.",
            "itemtype": "method",
            "name": "_discardDraft",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.Plugin.DiscardDraft",
            "module": "ez-discarddraftplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-discarddraftplugin.js",
            "line": 46,
            "description": "Fired when the draft is destroyed.",
            "itemtype": "event",
            "name": "discardedDraft",
            "class": "eZ.Plugin.DiscardDraft",
            "module": "ez-discarddraftplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-discoverybarcontenttreeplugin.js",
            "line": 28,
            "description": "`treeAction` event handler. If the currently displayed location is\navailable in the tree, it opens and selects it otherwise, it builds\nthe entire tree.",
            "itemtype": "method",
            "name": "_handleTree",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.Plugin.DiscoveryBarContentTree",
            "module": "ez-discoverybarcontenttreeplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-discoverybarcontenttreeplugin.js",
            "line": 55,
            "description": "Builds the complete to tree and set it to the `view`",
            "itemtype": "method",
            "name": "_buildTree",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "view",
                    "description": "",
                    "type": "View"
                }
            ],
            "class": "eZ.Plugin.DiscoveryBarContentTree",
            "module": "ez-discoverybarcontenttreeplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-imagevariationloadplugin.js",
            "line": 28,
            "description": "`loadImageVariation` event handler. It uses the JavaScript REST\nclient to load the information about a variation of an image in the\nfield.",
            "itemtype": "method",
            "name": "_loadImageVariation",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade of the loadImageVariation event",
                    "type": "Object"
                }
            ],
            "class": "eZ.Plugin.ImageVariationLoad",
            "module": "ez-imagevariationloadplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-imagevariationloadplugin.js",
            "line": 48,
            "description": "Sets the result of the loadImageVariation call to the emitter view.\nIt's the default callback when the variation is loaded.",
            "itemtype": "method",
            "name": "_setResultAttributes",
            "params": [
                {
                    "name": "view",
                    "description": "",
                    "type": "View"
                },
                {
                    "name": "error",
                    "description": "",
                    "type": "False|CAPIError"
                },
                {
                    "name": "imgVariation",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.Plugin.ImageVariationLoad",
            "module": "ez-imagevariationloadplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-locationcreateplugin.js",
            "line": 32,
            "description": "createLocation event handler, launch the universal discovery widget\nto choose a parent location(s) for new location(s) of given content",
            "itemtype": "method",
            "name": "_createLocationSelect",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "createLocation event facade",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.Plugin.LocationCreate",
            "module": "ez-locationcreateplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-locationcreateplugin.js",
            "line": 58,
            "description": "Creates new location as a descendant of selected location",
            "itemtype": "method",
            "name": "_createLocation",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.Plugin.LocationCreate",
            "module": "ez-locationcreateplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-locationcreateplugin.js",
            "line": 130,
            "description": "Fire 'notify' event",
            "itemtype": "method",
            "name": "_notify",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "text",
                    "description": "the text shown during the notification",
                    "type": "String"
                },
                {
                    "name": "identifier",
                    "description": "the identifier of the notification",
                    "type": "String"
                },
                {
                    "name": "state",
                    "description": "the state of the notification",
                    "type": "String"
                },
                {
                    "name": "timeout",
                    "description": "the number of second, the notification will be shown",
                    "type": "Integer"
                }
            ],
            "class": "eZ.Plugin.LocationCreate",
            "module": "ez-locationcreateplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-locationremoveplugin.js",
            "line": 31,
            "description": "removeLocations event handler, opens confirm box to confirm that selected locations\nare going to be removed",
            "itemtype": "method",
            "name": "_removeLocationsConfirm",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "removeLocations event facade",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.Plugin.LocationRemove",
            "module": "ez-locationremoveplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-locationremoveplugin.js",
            "line": 53,
            "description": "Removes given locations. After that calls the callback function. If location that\nis currently being displayed is removed, the app will navigate to the view location\nof main location of content",
            "itemtype": "method",
            "name": "_removeLocations",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "locations",
                    "description": "array containing eZ.Location objects for removal",
                    "type": "Array"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.Plugin.LocationRemove",
            "module": "ez-locationremoveplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-locationremoveplugin.js",
            "line": 139,
            "description": "Fire 'notify' event",
            "itemtype": "method",
            "name": "_notify",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "text",
                    "description": "the text shown during the notification",
                    "type": "String"
                },
                {
                    "name": "identifier",
                    "description": "the identifier of the notification",
                    "type": "String"
                },
                {
                    "name": "state",
                    "description": "the state of the notification",
                    "type": "String"
                },
                {
                    "name": "timeout",
                    "description": "the number of second, the notification will be shown",
                    "type": "Integer"
                }
            ],
            "class": "eZ.Plugin.LocationRemove",
            "module": "ez-locationremoveplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-locationsearchplugin.js",
            "line": 28,
            "description": "`locationSearch` event handler. It executes the location search and\nset the result on the target of the event.",
            "itemtype": "method",
            "name": "_doLocationSearch",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade",
                    "props": [
                        {
                            "name": "search",
                            "description": "",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "criteria",
                                    "description": "the search criteria used as Criteria in LocationQuery",
                                    "type": "Object"
                                },
                                {
                                    "name": "offset",
                                    "description": "the offset for the search result",
                                    "type": "Integer"
                                },
                                {
                                    "name": "limit",
                                    "description": "number of records returned",
                                    "type": "Integer"
                                }
                            ]
                        },
                        {
                            "name": "resultAttribute",
                            "description": "the name of attribute that will by updated with search results",
                            "type": "String"
                        },
                        {
                            "name": "resultTotalCountAttribute",
                            "description": "the name of attribute that will be updated with total\nnumber of records matching search criteria",
                            "type": "String"
                        },
                        {
                            "name": "loadContent",
                            "description": "the flag indicating whether the eZ.Content should be loaded for all\nof the locations searched. If it is set to *TRUE* then `content` field will be present inside\nevery search result (locationStruct)",
                            "type": "Bool"
                        },
                        {
                            "name": "loadContentType",
                            "description": "the flag indicating whether the eZ.ContentType should be loaded for all\nof the locations searched. If it is set to *TRUE* then `contentType` field will be present inside\nevery search result (locationStruct)",
                            "type": "Bool"
                        }
                    ]
                }
            ],
            "class": "eZ.Plugin.LocationSearch",
            "module": "ez-locationsearchplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-locationsearchplugin.js",
            "line": 100,
            "description": "Parses the search result to create the Location model and return the array of location structs.",
            "itemtype": "method",
            "name": "_parseSearchResult",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "result",
                    "description": "the CAPI Response",
                    "type": "Response"
                }
            ],
            "return": {
                "description": "ret.location",
                "type": "eZ.Location"
            },
            "class": "eZ.Plugin.LocationSearch",
            "module": "ez-locationsearchplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-locationsearchplugin.js",
            "line": 119,
            "description": "Creates a Location for the searchHit",
            "itemtype": "method",
            "name": "_createLocation",
            "params": [
                {
                    "name": "searchHit",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "eZ.Location"
            },
            "class": "eZ.Plugin.LocationSearch",
            "module": "ez-locationsearchplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-locationsearchplugin.js",
            "line": 137,
            "description": "Loads resources for the given array of location structs. Depending on given\n`loadContentType` and `loadContent` bool parameters it loads Content and ContentType\nand includes them into the location structs.",
            "itemtype": "method",
            "name": "_loadResources",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "loadContentType",
                    "description": "",
                    "type": "Bool|undefined"
                },
                {
                    "name": "loadContent",
                    "description": "",
                    "type": "Bool|undefined"
                },
                {
                    "name": "locationStructArr",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.Plugin.LocationSearch",
            "module": "ez-locationsearchplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-locationsearchplugin.js",
            "line": 180,
            "description": "Loads ContentType for each location struct in given array and puts it in the new `contentType`\nfield for the location struct.",
            "itemtype": "method",
            "name": "_loadContentTypeForLocations",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "locationStructArr",
                    "description": "",
                    "type": "Array|Null"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.Plugin.LocationSearch",
            "module": "ez-locationsearchplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-locationsearchplugin.js",
            "line": 216,
            "description": "Loads Content for each location struct in given array and puts it in the new `content`\nfield for the location struct.",
            "itemtype": "method",
            "name": "_loadContentForLocations",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "locationStructArr",
                    "description": "",
                    "type": "Array|Null"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.Plugin.LocationSearch",
            "module": "ez-locationsearchplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-locationsearchplugin.js",
            "line": 255,
            "description": "Holds the eZ.Location constructor function",
            "itemtype": "attribute",
            "name": "locationModelConstructor",
            "type": "{Function}",
            "default": "Y.eZ.Location",
            "class": "eZ.Plugin.LocationSearch",
            "module": "ez-locationsearchplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-locationsloadplugin.js",
            "line": 32,
            "description": "Loads locations list for content given in event facade. When loading of locations\nis finished, then it is set in `locations` attribute of the event target.",
            "itemtype": "method",
            "name": "_loadLocations",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "loadLocations event facade",
                    "type": "EventFacade",
                    "props": [
                        {
                            "name": "location",
                            "description": "the current location",
                            "type": "eZ.Location"
                        },
                        {
                            "name": "content",
                            "description": "the content",
                            "type": "eZ.Content"
                        },
                        {
                            "name": "loadPath",
                            "description": "(optional) will also load the path if set to `true`",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "class": "eZ.Plugin.LocationsLoad",
            "module": "ez-locationsloadplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-loginavailableplugin.js",
            "line": 30,
            "description": "`isLoginAvailable` event handler, it checks if the login in the event\nfacade is available.",
            "itemtype": "method",
            "name": "_isLoginAvailable",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.Plugin.LoginAvailable",
            "module": "ez-loginavailableplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-objectrelationloadplugin.js",
            "line": 28,
            "description": "Loads the related content. Once this is done, it sets the content in\nthe `destinationContent` attribute of the event target.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_loadFieldRelatedContent",
            "params": [
                {
                    "name": "e",
                    "description": "loadFieldRelatedContent event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.Plugin.ObjectRelationLoad",
            "module": "ez-objectrelationloadplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-objectrelationloadplugin.js",
            "line": 59,
            "description": "The related content to be loaded",
            "itemtype": "attribute",
            "name": "relatedContent",
            "type": "eZ.Content",
            "readonly": "",
            "class": "eZ.Plugin.ObjectRelationLoad",
            "module": "ez-objectrelationloadplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-objectrelationsloadplugin.js",
            "line": 27,
            "description": "Loads the related contents. Once this is done, it sets the contents in\nthe `relatedContents` attribute of the event target.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_loadObjectRelations",
            "params": [
                {
                    "name": "e",
                    "description": "ObjectRelations event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.Plugin.ObjectRelationsLoad",
            "module": "ez-objectrelationsloadplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-objectrelationsloadplugin.js",
            "line": 76,
            "description": "Content constructor",
            "itemtype": "attribute",
            "name": "contentModelConstructor",
            "type": "Y.eZ.Content",
            "class": "eZ.Plugin.ObjectRelationsLoad",
            "module": "ez-objectrelationsloadplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-publishdraftplugin.js",
            "line": 28,
            "description": "Event handler for the publishAction event. It publishes the version\nif the form is valid and redirect the user to the URL hold by the\n`publishRedirectionUrl` attribute.",
            "itemtype": "method",
            "name": "_publishDraft",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "publishAction event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.Plugin.PublishDraft",
            "module": "ez-publishdraftplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-publishdraftplugin.js",
            "line": 70,
            "description": "Notify the user about the publish process and fire the `publishedDraft`\nevent.",
            "itemtype": "method",
            "name": "_publishDraftCallback",
            "access": "protected",
            "tagname": "",
            "class": "eZ.Plugin.PublishDraft",
            "module": "ez-publishdraftplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-publishdraftplugin.js",
            "line": 103,
            "description": "Fired when the draft is published",
            "itemtype": "event",
            "name": "publishedDraft",
            "params": [
                {
                    "name": "content",
                    "description": "",
                    "type": "eZ.Content"
                }
            ],
            "class": "eZ.Plugin.PublishDraft",
            "module": "ez-publishdraftplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-publishdraftplugin.js",
            "line": 113,
            "description": "Creates a draft of a new content with the given fields and directly\ntries to publish it.",
            "itemtype": "method",
            "name": "_createPublishContent",
            "params": [
                {
                    "name": "Array",
                    "description": "fields the fields structures coming from the\npublishAction event"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.Plugin.PublishDraft",
            "module": "ez-publishdraftplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-publishdraftplugin.js",
            "line": 146,
            "description": "Sets the given fields on the version and publishes it. This method is\ncalled in the case where the content already exists in the repository\nand the user wants to publish a new version of it.",
            "itemtype": "method",
            "name": "_savePublishVersion",
            "params": [
                {
                    "name": "Array",
                    "description": "fields the fields structures coming from the\npublishAction event"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.Plugin.PublishDraft",
            "module": "ez-publishdraftplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-publishdraftplugin.js",
            "line": 171,
            "description": "Notifies the editor about a publishing error",
            "itemtype": "method",
            "name": "_notifyError",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "contentId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "eZ.Plugin.PublishDraft",
            "module": "ez-publishdraftplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-publishdraftplugin.js",
            "line": 189,
            "description": "Builds the notification identifier for the publish notification",
            "itemtype": "method",
            "name": "_buildNotificationIdentifier",
            "params": [
                {
                    "name": "isNew",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "content",
                    "description": "",
                    "type": "eZ.Content"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.Plugin.PublishDraft",
            "module": "ez-publishdraftplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-publishdraftplugin.js",
            "line": 209,
            "description": "Hold the flag to see if the published content already exists",
            "itemtype": "attribute",
            "name": "isNewContent",
            "type": "Boolean",
            "default": "false",
            "class": "eZ.Plugin.PublishDraft",
            "module": "ez-publishdraftplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-savedraftplugin.js",
            "line": 28,
            "description": "Event handler for the saveAction event. It stores the version if the\nform is valid",
            "itemtype": "method",
            "name": "_saveDraft",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "saveAction event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.Plugin.SaveDraft",
            "module": "ez-savedraftplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-savedraftplugin.js",
            "line": 45,
            "description": "Stores a custom callback send in the `saveAction` event\nparameters.",
            "itemtype": "property",
            "name": "_callback",
            "access": "protected",
            "tagname": "",
            "type": "{Function}",
            "class": "eZ.Plugin.SaveDraft",
            "module": "ez-savedraftplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-savedraftplugin.js",
            "line": 70,
            "description": "Sets the notification texts attributes based on the config provided\nin the `saveAction` event parameters.",
            "itemtype": "method",
            "name": "_setNotificationTexts",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "eZ.Plugin.SaveDraft",
            "module": "ez-savedraftplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-savedraftplugin.js",
            "line": 87,
            "description": "Fire a notification corresponding to the state of the save draft\nrequest.",
            "itemtype": "method",
            "name": "_saveDraftCallback",
            "params": [
                {
                    "name": "error",
                    "description": "",
                    "type": "Error"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "Response"
                },
                {
                    "name": "newContent",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.Plugin.SaveDraft",
            "module": "ez-savedraftplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-savedraftplugin.js",
            "line": 116,
            "description": "Fired when the draft is saved",
            "itemtype": "event",
            "name": "savedDraft",
            "params": [
                {
                    "name": "content",
                    "description": "",
                    "type": "eZ.Content"
                }
            ],
            "class": "eZ.Plugin.SaveDraft",
            "module": "ez-savedraftplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-savedraftplugin.js",
            "line": 131,
            "description": "Builds the notification identifier for the save draft notification",
            "itemtype": "method",
            "name": "_buildNotificationIdentifier",
            "params": [
                {
                    "name": "isNew",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "content",
                    "description": "",
                    "type": "eZ.Content"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.Plugin.SaveDraft",
            "module": "ez-savedraftplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-savedraftplugin.js",
            "line": 143,
            "description": "Creates a draft of a new content with the given fields",
            "itemtype": "method",
            "name": "_createContent",
            "params": [
                {
                    "name": "Array",
                    "description": "fields the fields structures coming from the saveAction\nevent"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.Plugin.SaveDraft",
            "module": "ez-savedraftplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-savedraftplugin.js",
            "line": 171,
            "description": "Sets the given fields on the version and stores it with the REST API.",
            "itemtype": "method",
            "name": "_saveVersion",
            "params": [
                {
                    "name": "Array",
                    "description": "fields the fields structures coming from the saveAction\nevent"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.Plugin.SaveDraft",
            "module": "ez-savedraftplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-savedraftplugin.js",
            "line": 196,
            "description": "The text do display to the editor when the saving draft operation\nstarts.",
            "itemtype": "attribute",
            "name": "startedNotificationText",
            "type": "{String}",
            "class": "eZ.Plugin.SaveDraft",
            "module": "ez-savedraftplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-savedraftplugin.js",
            "line": 207,
            "description": "The text do display to the editor when the saving draft operation\nends successfully.",
            "itemtype": "attribute",
            "name": "doneNotificationText",
            "type": "{String}",
            "class": "eZ.Plugin.SaveDraft",
            "module": "ez-savedraftplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-savedraftplugin.js",
            "line": 218,
            "description": "The text do display to the editor when the saving draft operation\nfails.",
            "itemtype": "attribute",
            "name": "errorNotificationText",
            "type": "{String}",
            "class": "eZ.Plugin.SaveDraft",
            "module": "ez-savedraftplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-universaldiscoverycontenttreeplugin.js",
            "line": 34,
            "description": "Builds the tree for the universal discovery browse view. The tree is\nalso initialize with the `loadContent` flag so the Content items are\nalso loaded if needed.",
            "itemtype": "method",
            "name": "_buildTree",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "browseView",
                    "description": "",
                    "type": "eZ.UniversalDiscoveryBrowseView"
                }
            ],
            "class": "eZ.Plugin.UniversalDiscoveryContentTree",
            "module": "ez-universaldiscoverycontenttreeplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-userloadplugin.js",
            "line": 33,
            "description": "Loads a user. Once this is done, it sets the content in\nthe attribute defined in the event parameter of the event target.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_loadUser",
            "params": [
                {
                    "name": "e",
                    "description": "loadUser event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.Plugin.UserLoad",
            "module": "ez-userloadplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-userloadplugin.js",
            "line": 59,
            "description": "User Model constructor",
            "itemtype": "attribute",
            "name": "userModelConstructor",
            "default": "Y.eZ.User",
            "type": "Function",
            "class": "eZ.Plugin.UserLoad",
            "module": "ez-userloadplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-viewservicebaseplugin.js",
            "line": 54,
            "description": "Load implementation that will be called after the default view\nservice `load` implementation. In others terms, here you can use the\npotential results of the view service `load` method. When done, the\n`callback` has to be called.",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "afterLoad",
            "class": "eZ.Plugin.ViewServiceBase",
            "module": "ez-viewservicebaseplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-viewservicebaseplugin.js",
            "line": 67,
            "description": "Load implementation that will be called in parallel with the view\nservice `load` implementation. When done, the `callback` has to be\ncalled.",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "parallelLoad",
            "class": "eZ.Plugin.ViewServiceBase",
            "module": "ez-viewservicebaseplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-viewservicebaseplugin.js",
            "line": 79,
            "description": "Returns the parameters to pass to the view. The return value of this\nmethod is merged with the `getViewParameters` result of the view\nservice and the `getViewParameters` result of the others plugins.",
            "itemtype": "method",
            "name": "getViewParameters",
            "return": {
                "description": "Object"
            },
            "class": "eZ.Plugin.ViewServiceBase",
            "module": "ez-viewservicebaseplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-viewservicebaseplugin.js",
            "line": 91,
            "description": "Configures the next view service. It is called when the active view\nservice change in the application with the new service in parameters\nso that it's possible to configure it.",
            "itemtype": "method",
            "name": "setNextViewServiceParameters",
            "params": [
                {
                    "name": "newService",
                    "description": "the new view service to configure",
                    "type": "eZ.ViewService"
                }
            ],
            "return": {
                "description": "the new view service",
                "type": "eZ.ViewService"
            },
            "class": "eZ.Plugin.ViewServiceBase",
            "module": "ez-viewservicebaseplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-visibilityswitcherplugin.js",
            "line": 33,
            "description": "Switch the `hidden` status of a given location",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_switchVisibility",
            "params": [
                {
                    "name": "e",
                    "description": "switchVisibility event facade\n     e.location: the location to be modified\n     e.callback: function to run once done",
                    "type": "Object"
                }
            ],
            "class": "eZ.Plugin.VisibilitySwitcherPlugin",
            "module": "ez-visibilityswitcherplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/plugins/ez-visibilityswitcherplugin.js",
            "line": 102,
            "description": "Fire 'notify' event",
            "itemtype": "method",
            "name": "_notify",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "text",
                    "description": "the text shown during the notification",
                    "type": "String"
                },
                {
                    "name": "identifier",
                    "description": "the identifier of the notification",
                    "type": "String"
                },
                {
                    "name": "state",
                    "description": "the state of the notification",
                    "type": "String"
                },
                {
                    "name": "timeout",
                    "description": "the number of second, the notification will be shown",
                    "type": "Integer"
                }
            ],
            "class": "eZ.Plugin.VisibilitySwitcherPlugin",
            "module": "ez-visibilityswitcherplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/ez-confirmboxviewservice.js",
            "line": 7,
            "description": "Provides the confirm box view service class",
            "itemtype": "method",
            "name": "ez-confirmboxviewservice",
            "class": "eZ.ConfirmBoxViewService",
            "module": "ez-visibilityswitcherplugin",
            "namespace": "eZ.Plugin"
        },
        {
            "file": "Resources/public/js/views/services/ez-contentcreateviewservice.js",
            "line": 47,
            "description": "Initializes the content, version and ower model so that the edit form\nis correctly displayed",
            "itemtype": "method",
            "name": "_initModels",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.ContentCreateViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contentcreateviewservice.js",
            "line": 76,
            "description": "Sets the redirection URLs attributes",
            "itemtype": "method",
            "name": "_setRedirectionUrls",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ContentCreateViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contentcreateviewservice.js",
            "line": 101,
            "description": "changeLanguage event handler. It opens languageSelectionBox for selecting\nlanguage of created content",
            "itemtype": "method",
            "name": "_selectLanguage",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.ContentCreateViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contentcreateviewservice.js",
            "line": 123,
            "description": "Sets language of created content to one given in event facade. After that notification is fired.",
            "itemtype": "method",
            "name": "_setLanguage",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "view",
                    "description": "the view which triggered language selection box",
                    "type": "Y.eZ.View"
                },
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade",
                    "props": [
                        {
                            "name": "selectedLanguageCode",
                            "description": "language code to which created content will be switched",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "eZ.ContentCreateViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contentcreateviewservice.js",
            "line": 156,
            "description": "The parent location of the new content",
            "itemtype": "attribute",
            "name": "parentLocation",
            "type": "Y.eZ.Location",
            "required": 1,
            "class": "eZ.ContentCreateViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contentcreateviewservice.js",
            "line": 165,
            "description": "The parent content of the new content",
            "itemtype": "attribute",
            "name": "parentContent",
            "type": "Y.eZ.Content",
            "required": 1,
            "class": "eZ.ContentCreateViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 40,
            "description": "Loads the content, the main location, the content type and the owner\nof the currently edited content, after that it sets version fields",
            "itemtype": "method",
            "name": "_load",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "next",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 109,
            "description": "Checks whether the version can be edited. A version can be edited if:\n  - it's a draft\n  - it's a version of the content which id is passed in the request\n  - it's translated into the language code passed in the request\n  - it was created by the currently logged in user",
            "itemtype": "method",
            "name": "_canEditVersion",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 144,
            "description": "Sets fields of edited version",
            "itemtype": "method",
            "name": "_setVersionFields",
            "access": "private",
            "tagname": "",
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 154,
            "description": "Returns the fields for the newly created version. Depending on the\nloaded content, it creates the fields from the content type or from\nthe content.",
            "itemtype": "method",
            "name": "_getFieldsForEdit",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 177,
            "description": "Returns collection of default fields from the ContentType of edited\ncontent and sets for them given languageCode",
            "itemtype": "method",
            "name": "_getDefaultFields",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "languageCode",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 201,
            "description": "Loads a content by its id and language code",
            "itemtype": "method",
            "name": "_loadContent",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "languageCode",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 220,
            "description": "Loads a version by its id and language code",
            "itemtype": "method",
            "name": "_loadVersion",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "languageCode",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 239,
            "description": "Loads a content info by its id",
            "itemtype": "method",
            "name": "_loadContentInfo",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 252,
            "description": "Loads a content type by its id",
            "itemtype": "method",
            "name": "_loadContentType",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 264,
            "description": "Loads a location type by its id",
            "itemtype": "method",
            "name": "_loadLocation",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 276,
            "description": "Loads a user by its id",
            "itemtype": "method",
            "name": "_loadOwner",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 288,
            "description": "Utility method to load a model by its id in a given attribute",
            "itemtype": "method",
            "name": "_loadModel",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "attr",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "errorMsg",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 314,
            "description": "Returns the view parameters of the content edit view",
            "itemtype": "method",
            "name": "_getViewParameters",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 334,
            "description": "`publishedDraft` event handler. It redirects the user according to\nthe `publishRedirectionUrl` attribute value.",
            "itemtype": "method",
            "name": "_redirectAfterPublish",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 345,
            "description": "`discardedDraft` event handler. It redirects the user according to\nthe `discardRedirectionUrl` attribute.",
            "itemtype": "method",
            "name": "_redirectAfterDiscard",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 356,
            "description": "`*:closeView` event handler. It redirects the user according to the\n`closeRedirectionUrl` attribute.",
            "itemtype": "method",
            "name": "_redirectAfterClose",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 367,
            "description": "Navigates to view the Location. If the location is not loaded, it is\nfirst loaded.",
            "itemtype": "method",
            "name": "_navigateToViewLocation",
            "access": "private",
            "tagname": "",
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 390,
            "description": "Redirects the user according the redirection `attr`. If the attribute\nis filled, its value is used to redirect the user, otherwise, the\nmain location of the content is used and in last resort, the user is\nredirected to the 'dashboard'.",
            "itemtype": "method",
            "name": "_redirectToAttribute",
            "params": [
                {
                    "name": "attr",
                    "description": "one of the redirection URL attribute name",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 414,
            "description": "Set languageCode attribute based on parameter from request",
            "itemtype": "method",
            "name": "_setLanguageCode",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 430,
            "description": "Set baseLanguageCode attribute based on parameter from request",
            "itemtype": "method",
            "name": "_setBaseLanguageCode",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 444,
            "description": "Returns uri for user redirection.",
            "itemtype": "method",
            "name": "_redirectionUrl",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 458,
            "description": "changeLanguage event handler. It opens languageSelectionBox for selecting\nlanguage of edited content",
            "itemtype": "method",
            "name": "_selectLanguage",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 482,
            "description": "Changes language of edited content",
            "itemtype": "method",
            "name": "_changeContentLanguage",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade",
                    "props": [
                        {
                            "name": "selectedLanguageCode",
                            "description": "language code to which edited ontent will be switched",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 501,
            "description": "The content to be loaded",
            "itemtype": "attribute",
            "name": "content",
            "type": "Y.eZ.Content",
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 513,
            "description": "The content info the content being edited",
            "itemtype": "attribute",
            "name": "contentInfo",
            "type": "Y.eZ.ContentInfo",
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 525,
            "description": "The main location of the content",
            "itemtype": "attribute",
            "name": "location",
            "type": "Y.eZ.Location",
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 537,
            "description": "The owner of the content",
            "itemtype": "attribute",
            "name": "owner",
            "type": "Y.eZ.User",
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 549,
            "description": "The version that will be edited",
            "itemtype": "attribute",
            "name": "version",
            "type": "eZ.Version",
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 561,
            "description": "The content type of the content",
            "itemtype": "attribute",
            "name": "contentType",
            "type": "Y.eZ.ContentType",
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 573,
            "description": "The URL user will be redirected to after closing the edit view",
            "itemtype": "attribute",
            "name": "closeRedirectionUrl",
            "type": "{Object}",
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 583,
            "description": "The URL user will be redirected to after discarding changes",
            "itemtype": "attribute",
            "name": "discardRedirectionUrl",
            "type": "{Object}",
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 593,
            "description": "The url user will be redirected to after publishing the content",
            "itemtype": "attribute",
            "name": "closeRedirectionUrl",
            "type": "{Object}",
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 603,
            "description": "The language code in which the content is edited.",
            "itemtype": "attribute",
            "name": "languageCode",
            "type": "String",
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-contenteditviewservice.js",
            "line": 611,
            "description": "The language code on which new translation is based.",
            "itemtype": "attribute",
            "name": "baseLanguageCode",
            "default": "null",
            "type": "String",
            "class": "eZ.ContentEditViewService",
            "module": "ez-contenteditviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-locationviewviewservice.js",
            "line": 35,
            "description": "editAction event handler, makes the application navigate to edit the\ncontent available in the event facade",
            "itemtype": "method",
            "name": "_editContent",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade of the editAction event",
                    "type": "Object"
                }
            ],
            "class": "eZ.LocationViewViewService",
            "module": "ez-locationviewviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-locationviewviewservice.js",
            "line": 54,
            "description": "`sendToTrashAction` event handler,\nit asks confirmation to the user before sending the location to the trash.",
            "itemtype": "method",
            "name": "_sendContentToTrashConfirmBox",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade of the sendToTrashAction event",
                    "type": "Object"
                }
            ],
            "class": "eZ.LocationViewViewService",
            "module": "ez-locationviewviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-locationviewviewservice.js",
            "line": 74,
            "description": "moveAction event handler, launch the universal discovery widget\nto choose a location to move the content",
            "itemtype": "method",
            "name": "_selectLocation",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.LocationViewViewService",
            "module": "ez-locationviewviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-locationviewviewservice.js",
            "line": 94,
            "description": "Sends location to trash, triggering loading parent location and notifications",
            "itemtype": "method",
            "name": "_sendToTrash",
            "access": "protected",
            "tagname": "",
            "class": "eZ.LocationViewViewService",
            "module": "ez-locationviewviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-locationviewviewservice.js",
            "line": 118,
            "description": "Send to trash callback triggering notifications and making app to navigate to parent location",
            "itemtype": "method",
            "name": "_afterSendToTrashCallback",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "parentLocation",
                    "description": "the parent location to which app will navigate to",
                    "type": "eZ.Location"
                },
                {
                    "name": "content",
                    "description": "the content to be trashed",
                    "type": "eZ.Content"
                },
                {
                    "name": "error",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "eZ.LocationViewViewService",
            "module": "ez-locationviewviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-locationviewviewservice.js",
            "line": 150,
            "description": "Fired when the content is sent to trash",
            "itemtype": "event",
            "name": "sentToTrash",
            "params": [
                {
                    "name": "location",
                    "description": "",
                    "type": "eZ.Location"
                }
            ],
            "class": "eZ.LocationViewViewService",
            "module": "ez-locationviewviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-locationviewviewservice.js",
            "line": 164,
            "description": "Move the content to the selected location",
            "itemtype": "method",
            "name": "_moveContent",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.LocationViewViewService",
            "module": "ez-locationviewviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-locationviewviewservice.js",
            "line": 197,
            "description": "Fired when the content is moved",
            "itemtype": "event",
            "name": "movedContent",
            "params": [
                {
                    "name": "location",
                    "description": "",
                    "type": "eZ.Location"
                },
                {
                    "name": "oldParentLocationId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "eZ.LocationViewViewService",
            "module": "ez-locationviewviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-locationviewviewservice.js",
            "line": 214,
            "description": "translate event handler, makes the application to navigate to edit content available\nin the facade with given language and base language",
            "itemtype": "method",
            "name": "_translateContent",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.LocationViewViewService",
            "module": "ez-locationviewviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-locationviewviewservice.js",
            "line": 240,
            "description": "Fire 'notify' event",
            "itemtype": "method",
            "name": "_notify",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "text",
                    "description": "the text shown during the notification",
                    "type": "String"
                },
                {
                    "name": "identifier",
                    "description": "the identifier of the notification",
                    "type": "String"
                },
                {
                    "name": "state",
                    "description": "the state of the notification",
                    "type": "String"
                },
                {
                    "name": "timeout",
                    "description": "the number of second, the notification will be shown",
                    "type": "Integer"
                }
            ],
            "class": "eZ.LocationViewViewService",
            "module": "ez-locationviewviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-locationviewviewservice.js",
            "line": 261,
            "description": "Loads the location, the content and the path for the location id\navailable in the request and calls the next callback once it's done.",
            "itemtype": "method",
            "name": "_load",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "next",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.LocationViewViewService",
            "module": "ez-locationviewviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-locationviewviewservice.js",
            "line": 330,
            "description": "Set languageCode attribute based on parameter from request",
            "itemtype": "method",
            "name": "_setLanguageCode",
            "access": "protected",
            "tagname": "",
            "class": "eZ.LocationViewViewService",
            "module": "ez-locationviewviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-locationviewviewservice.js",
            "line": 352,
            "description": "The viewed location",
            "itemtype": "attribute",
            "name": "location",
            "type": "Y.eZ.Location",
            "class": "eZ.LocationViewViewService",
            "module": "ez-locationviewviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-locationviewviewservice.js",
            "line": 363,
            "description": "The content associated with the location",
            "itemtype": "attribute",
            "name": "content",
            "type": "Y.eZ.Content",
            "class": "eZ.LocationViewViewService",
            "module": "ez-locationviewviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-locationviewviewservice.js",
            "line": 374,
            "description": "The content type of the content",
            "itemtype": "attribute",
            "name": "contentType",
            "type": "Y.eZ.Content",
            "class": "eZ.LocationViewViewService",
            "module": "ez-locationviewviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-locationviewviewservice.js",
            "line": 385,
            "description": "The path from the root location to the current location. Each\nentry of the path consists of the location sorted by location depth",
            "itemtype": "attribute",
            "name": "path",
            "type": "Array",
            "class": "eZ.LocationViewViewService",
            "module": "ez-locationviewviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-locationviewviewservice.js",
            "line": 396,
            "description": "The language code in which the content is being viewed",
            "itemtype": "attribute",
            "name": "languageCode",
            "type": "String",
            "class": "eZ.LocationViewViewService",
            "module": "ez-locationviewviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-loginformviewservice.js",
            "line": 27,
            "description": "Load implementation for the login form view service. It checks if\nthe user is already logged and if it is, it redirects to the\ndashboard",
            "itemtype": "method",
            "name": "_load",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "next",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.LoginFormViewService",
            "module": "ez-loginformviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-loginformviewservice.js",
            "line": 48,
            "description": "loginFomView:authentication event handler, this is the actual\napplication login code. It makes sure the states of the view,\nand the application are consistent.",
            "itemtype": "method",
            "name": "_authenticate",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.LoginFormViewService",
            "module": "ez-loginformviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-loginformviewservice.js",
            "line": 76,
            "description": "Handles the error occuring during login.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_handleLoginError",
            "params": [
                {
                    "name": "view",
                    "description": "",
                    "type": "View"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "eZ.LoginFormViewService",
            "module": "ez-loginformviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-navigationhubviewservice.js",
            "line": 28,
            "description": "navigateTo event handler. it redirects the user to the given route.",
            "itemtype": "method",
            "name": "_navigateTo",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.NavigationHubViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-navigationhubviewservice.js",
            "line": 41,
            "description": "logOut event handler, it logs out the user and redirect to the login\nform.",
            "itemtype": "method",
            "name": "_logOut",
            "class": "eZ.NavigationHubViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-navigationhubviewservice.js",
            "line": 129,
            "description": "Loads the given `locationId`",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_loadLocation",
            "params": [
                {
                    "name": "locationId",
                    "description": "",
                    "type": "Integer"
                },
                {
                    "name": "attributeName",
                    "description": "where data need to be loaded",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "the function to call when the location is loaded",
                    "type": "Function",
                    "props": [
                        {
                            "name": "error",
                            "description": "the error, true if an error occurred",
                            "type": "Boolean"
                        },
                        {
                            "name": "result",
                            "description": "the location object",
                            "type": "ez.Location"
                        }
                    ]
                }
            ],
            "class": "eZ.NavigationHubViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-navigationhubviewservice.js",
            "line": 151,
            "description": "Returns a navigation item object. See the *NavigationItems attribute.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_getItem",
            "params": [
                {
                    "name": "constructor",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.NavigationHubViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-navigationhubviewservice.js",
            "line": 167,
            "description": "Returns a navigation item object describing a {{#crossLink\n\"eZ.NavigationItemView\"}}eZ.NavigationItemView{{/crossLink}}",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_getNavigationItem",
            "params": [
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "identifier",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "routeName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "routeParams",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.NavigationHubViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-navigationhubviewservice.js",
            "line": 192,
            "description": "Returns the navigation item object describing a {{#crossLink\n\"eZ.NavigationItemSubtreeView\"}}eZ.NavigationItemSubtreeView{{/crossLink}}.",
            "itemtype": "method",
            "name": "_getSubtreeItem",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "identifier",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "locationId",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "languageCode",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.NavigationHubViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-navigationhubviewservice.js",
            "line": 218,
            "description": "Returns a navigation item object describing a {{#crossLink\n\"eZ.NavigationItemParameterView\"}}eZ.NavigationItemParameterView{{/crossLink}}",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_getParameterItem",
            "params": [
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "identifier",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "routeName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "routeParams",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "matchParameter",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.NavigationHubViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-navigationhubviewservice.js",
            "line": 245,
            "description": "Returns the parameters for the navigation hub view",
            "itemtype": "method",
            "name": "getViewParameters",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.NavigationHubViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-navigationhubviewservice.js",
            "line": 262,
            "description": "A matched route object from the request. This object will be used by\nthe navigation hub view to check which navigation item view is\nselected. A matched route object is a clone of the application active\nroute without the service, serviceInstance and callbacks entries and\nwith an additionnal `parameters` property holding the route\nparameters and their values.",
            "itemtype": "method",
            "name": "_matchedRoute",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.NavigationHubViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-navigationhubviewservice.js",
            "line": 287,
            "description": "Adds a navigation item for the given zone.\nNote: adding a navigation item will only work before the first\ninitialization of the navigation hub. As a result, in a navigation\nhub view service plugin, this method should be called only in or from\nthe initializer method.",
            "itemtype": "method",
            "name": "addNavigationItem",
            "params": [
                {
                    "name": "item",
                    "description": "a navigation item, see the description of the\n*NavigationItems attributes",
                    "type": "Object"
                },
                {
                    "name": "zone",
                    "description": "the identifier of the zone",
                    "type": "String"
                }
            ],
            "class": "eZ.NavigationHubViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-navigationhubviewservice.js",
            "line": 303,
            "description": "Removes a navigation item for the given zone.\nNote: removing a navigation item will only work before the first\ninitialization of the navigation hub. As a result, in a navigation\nhub view service plugin, this method should be called only in or from\nthe initializer method.",
            "itemtype": "method",
            "name": "removeNavigationItem",
            "params": [
                {
                    "name": "identifier",
                    "description": "the identifier of the navigation item to\nremove",
                    "type": "String"
                },
                {
                    "name": "zone",
                    "description": "the identifier of the zone",
                    "type": "String"
                }
            ],
            "class": "eZ.NavigationHubViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-navigationhubviewservice.js",
            "line": 327,
            "description": "Retrieves a navigation item",
            "itemtype": "method",
            "name": "getNavigationItem",
            "params": [
                {
                    "name": "identifier",
                    "description": "the identifier of the navigation item to retrieve",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.NavigationHubViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-navigationhubviewservice.js",
            "line": 353,
            "description": "Stores the root `location`",
            "itemtype": "attribute",
            "name": "rootLocation",
            "type": "{eZ.Location}",
            "class": "eZ.NavigationHubViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-navigationhubviewservice.js",
            "line": 365,
            "description": "Stores the root media `location`",
            "itemtype": "attribute",
            "name": "rootMediaLocation",
            "type": "{eZ.Location}",
            "class": "eZ.NavigationHubViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-navigationhubviewservice.js",
            "line": 377,
            "description": "Stores the navigation item objects for the 'platform' zone. Each\nobject must contain a `Constructor` property referencing\nthe constructor function to use to build the navigation item\nview and a `config` property will be used as a configuration\nobject for the navigation item view. This configuration must\ncontain a `title` and an `identifier` properties.",
            "itemtype": "attribute",
            "name": "platformNavigationItems",
            "type": "Array",
            "default": "array containing the object the 'Content structure' and\n'Media library' items",
            "readonly": "",
            "class": "eZ.NavigationHubViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-navigationhubviewservice.js",
            "line": 418,
            "description": "Stores the navigation item objects for the 'studioplus' zone. Each\nobject must contain a `Constructor` property referencing\nthe constructor function to use to build the navigation item\nview and a `config` property will be used as a configuration\nobject for the navigation item view. This configuration must\ncontain a `title` and an `identifier` properties.",
            "itemtype": "attribute",
            "name": "studioplusNavigationItems",
            "type": "Array",
            "default": "empty array",
            "readonly": "",
            "class": "eZ.NavigationHubViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-navigationhubviewservice.js",
            "line": 450,
            "description": "Stores the navigation item objects for the 'studio' zone. Each\nobject must contain a `Constructor` property referencing\nthe constructor function to use to build the navigation item\nview and a `config` property will be used as a configuration\nobject for the navigation item view. This configuration must\ncontain a `title` and an `identifier` properties.",
            "itemtype": "attribute",
            "name": "studioNavigationItems",
            "type": "Array",
            "default": "empty array",
            "readonly": "",
            "class": "eZ.NavigationHubViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-navigationhubviewservice.js",
            "line": 482,
            "description": "Stores the navigation item objects for the 'admin' zone. Each\nobject must contain a `Constructor` property referencing\nthe constructor function to use to build the navigation item\nview and a `config` property will be used as a configuration\nobject for the navigation item view. This configuration must\ncontain a `title` and an `identifier` properties.",
            "itemtype": "attribute",
            "name": "platformNavigationItems",
            "type": "Array",
            "default": "array containing the items for the admin",
            "readonly": "",
            "class": "eZ.NavigationHubViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-notificationhubviewservice.js",
            "line": 7,
            "description": "Provides the notification hub view service",
            "itemtype": "method",
            "name": "ez-notificationhubviewservice",
            "class": "eZ.NotificationHubViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-notificationhubviewservice.js",
            "line": 33,
            "description": "Updates or creates a new notification in the list.",
            "itemtype": "method",
            "name": "_handleNotification",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "notification",
                    "description": "",
                    "type": "eZ.Notification"
                }
            ],
            "class": "eZ.NotificationHubViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-notificationhubviewservice.js",
            "line": 58,
            "description": "The notification list for the application",
            "itemtype": "attribute",
            "name": "notificationList",
            "readonly": "",
            "type": "{eZ.NotificationList}",
            "class": "eZ.NotificationHubViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-roleserversideviewservice.js",
            "line": 7,
            "description": "Provides the role server side view service class",
            "itemtype": "method",
            "name": "ez-roleserversideviewservice",
            "class": "eZ.RoleServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-roleserversideviewservice.js",
            "line": 29,
            "description": "Assign the role to the users/groups after the user has chosen them in\nthe universal discovery widget",
            "itemtype": "method",
            "name": "_assignRole",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.RoleServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-roleserversideviewservice.js",
            "line": 86,
            "description": "Assign the role to selected content",
            "itemtype": "method",
            "name": "_assignRoleToAssignee",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "struct",
                    "description": "the object selected with content discovery",
                    "type": "Object"
                },
                {
                    "name": "role",
                    "description": "",
                    "type": "Role"
                },
                {
                    "name": "callback",
                    "description": "the callback function",
                    "type": "Function"
                }
            ],
            "class": "eZ.RoleServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-roleserversideviewservice.js",
            "line": 111,
            "description": "Assign the role to a user",
            "itemtype": "method",
            "name": "_assignRoleToUser",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "role",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "limitation",
                    "description": "",
                    "type": "Object|null"
                },
                {
                    "name": "contentInfo",
                    "description": "",
                    "type": "eZ.ContentInfo"
                },
                {
                    "name": "callback",
                    "description": "the callback function",
                    "type": "Function"
                }
            ],
            "class": "eZ.RoleServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-roleserversideviewservice.js",
            "line": 143,
            "description": "Assign the role to a user group",
            "itemtype": "method",
            "name": "_assignRoleToUserGroup",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "role",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "limitation",
                    "description": "",
                    "type": "Object|null"
                },
                {
                    "name": "content",
                    "description": "",
                    "type": "eZ.ContentInfo"
                },
                {
                    "name": "location",
                    "description": "",
                    "type": "eZ.Location"
                },
                {
                    "name": "callback",
                    "description": "the callback function",
                    "type": "Function"
                }
            ],
            "class": "eZ.RoleServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-roleserversideviewservice.js",
            "line": 179,
            "description": "Assign role callback triggering notification and calling given callback",
            "itemtype": "method",
            "name": "_assignRoleCallback",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "roleId",
                    "description": "the role id",
                    "type": "String"
                },
                {
                    "name": "roleName",
                    "description": "the role name",
                    "type": "String"
                },
                {
                    "name": "contents",
                    "description": "the array of users/groups to which role is being assigned to",
                    "type": "Array"
                },
                {
                    "name": "countAssigned",
                    "description": "number of successfully assignments",
                    "type": "Integer"
                },
                {
                    "name": "callback",
                    "description": "the callback to call when other tasks are done",
                    "type": "Function"
                }
            ],
            "class": "eZ.RoleServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-roleserversideviewservice.js",
            "line": 214,
            "description": "Notification changed to *started* before assigning role to users/groups",
            "itemtype": "method",
            "name": "_assignRoleNotificationStarted",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "roleId",
                    "description": "the role id",
                    "type": "String"
                },
                {
                    "name": "roleName",
                    "description": "the role name",
                    "type": "String"
                },
                {
                    "name": "contents",
                    "description": "the array of users/groups to which role is being assigned to",
                    "type": "Array"
                }
            ],
            "class": "eZ.RoleServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-roleserversideviewservice.js",
            "line": 236,
            "description": "Notification with *error* state when loadRole fails",
            "itemtype": "method",
            "name": "_loadRoleErrorNotification",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "roleId",
                    "description": "the role id",
                    "type": "String"
                },
                {
                    "name": "roleName",
                    "description": "the role name",
                    "type": "String"
                },
                {
                    "name": "contents",
                    "description": "the array of users/groups to which role is being assigned to",
                    "type": "Array"
                }
            ],
            "class": "eZ.RoleServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-roleserversideviewservice.js",
            "line": 258,
            "description": "Generates identifier for notifications which is unique based on\nrole ID and IDs of users/groups which role is being assigned to.",
            "itemtype": "method",
            "name": "_getAssignRoleNotificationIdentifier",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "action",
                    "description": "custom string describing action which is being taken",
                    "type": "String"
                },
                {
                    "name": "roleId",
                    "description": "the role id",
                    "type": "String"
                },
                {
                    "name": "contents",
                    "description": "the array of users/groups to which role is being assigned to",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "unique notification identifier based on passed parameters",
                "type": "String"
            },
            "class": "eZ.RoleServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-roleserversideviewservice.js",
            "line": 278,
            "description": "Fire 'notify' event",
            "itemtype": "method",
            "name": "_notify",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "text",
                    "description": "the text shown during the notification",
                    "type": "String"
                },
                {
                    "name": "identifier",
                    "description": "the identifier of the notification",
                    "type": "String"
                },
                {
                    "name": "state",
                    "description": "the state of the notification",
                    "type": "String"
                },
                {
                    "name": "timeout",
                    "description": "the number of second, the notification will be shown",
                    "type": "Integer"
                }
            ],
            "class": "eZ.RoleServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-sectionserversideviewservice.js",
            "line": 7,
            "description": "Provides the section server side view service class",
            "itemtype": "method",
            "name": "ez-sectionserversideviewservice",
            "class": "eZ.SectionServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-sectionserversideviewservice.js",
            "line": 31,
            "description": "Assign the section to the contents after the user has chosen them in\nthe universal discovery widget",
            "itemtype": "method",
            "name": "_assignSection",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.SectionServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-sectionserversideviewservice.js",
            "line": 66,
            "description": "Assign section callback trigerring notification and calling given callback",
            "itemtype": "method",
            "name": "_assignSectionCallback",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "sectionId",
                    "description": "the section id",
                    "type": "String"
                },
                {
                    "name": "sectionName",
                    "description": "the section name",
                    "type": "String"
                },
                {
                    "name": "contents",
                    "description": "the array of contents to which section is being assigned to",
                    "type": "Array"
                },
                {
                    "name": "callback",
                    "description": "the callback to call when other tasks are done",
                    "type": "Function"
                }
            ],
            "class": "eZ.SectionServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-sectionserversideviewservice.js",
            "line": 81,
            "description": "Notification changed to *started* before assigning section to contents",
            "itemtype": "method",
            "name": "_assignSectionNotificationStarted",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "sectionId",
                    "description": "the section id",
                    "type": "String"
                },
                {
                    "name": "sectionName",
                    "description": "the section name",
                    "type": "String"
                },
                {
                    "name": "selection",
                    "description": "the UDW selection",
                    "type": "Array"
                }
            ],
            "class": "eZ.SectionServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-sectionserversideviewservice.js",
            "line": 105,
            "description": "Notification changed to *done* after assigning section to contents",
            "itemtype": "method",
            "name": "_assignSectionNotificationDone",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "sectionId",
                    "description": "the section id",
                    "type": "String"
                },
                {
                    "name": "sectionName",
                    "description": "the section name",
                    "type": "String"
                },
                {
                    "name": "selection",
                    "description": "the UDW selection",
                    "type": "Array"
                }
            ],
            "class": "eZ.SectionServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-sectionserversideviewservice.js",
            "line": 129,
            "description": "Generates identifier for notifications which is unique based on\nsection ID and IDs of contents which section is being assigned to.",
            "itemtype": "method",
            "name": "_getAssignSectionNotificationIdentifier",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "action",
                    "description": "custom string describing action which is being taken",
                    "type": "String"
                },
                {
                    "name": "sectionId",
                    "description": "the section id",
                    "type": "String"
                },
                {
                    "name": "selection",
                    "description": "the UDW selection",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "unique notification identifier based on passed parameters",
                "type": "String"
            },
            "class": "eZ.SectionServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-sectionserversideviewservice.js",
            "line": 149,
            "description": "Refreshes the section view",
            "itemtype": "method",
            "name": "_refreshView",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.SectionServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-serversideviewservice.js",
            "line": 7,
            "description": "Provides the server side view service class",
            "itemtype": "method",
            "name": "ez-serversideviewservice",
            "class": "eZ.ServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-serversideviewservice.js",
            "line": 32,
            "description": "Handles the `submitForm` event by preventing the original form to be\nsubmitted by the browser and by submitting the form with an AJAX\nrequest.",
            "itemtype": "method",
            "name": "_handleFormSubmit",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.ServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-serversideviewservice.js",
            "line": 59,
            "description": "Handles the response of a form submission. It detects if a\nredirection needs to happen in the application.",
            "itemtype": "method",
            "name": "_handleFormSubmitResponse",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "view",
                    "description": "",
                    "type": "Y.View"
                },
                {
                    "name": "tId",
                    "description": "the transaction id",
                    "type": "String"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "XMLHttpRequest"
                }
            ],
            "class": "eZ.ServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-serversideviewservice.js",
            "line": 81,
            "description": "Handles the loading error.",
            "itemtype": "method",
            "name": "_handleLoadFailure",
            "params": [
                {
                    "name": "tId",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "XMLHttpRequest"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.ServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-serversideviewservice.js",
            "line": 102,
            "description": "Parses the notification node(s) in the PJAX response and sends the\ncorresponding notify events.",
            "itemtype": "method",
            "name": "_parseNotifications",
            "params": [
                {
                    "name": "docFragment",
                    "description": "",
                    "type": "Y.Node"
                }
            ],
            "return": {
                "description": "the number of notifications",
                "type": "Number"
            },
            "access": "protected",
            "tagname": "",
            "class": "eZ.ServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-serversideviewservice.js",
            "line": 118,
            "description": "Updates the view attributes with the provided HTTP response",
            "itemtype": "method",
            "name": "_updateView",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "view",
                    "description": "",
                    "type": "eZ.ServerSideView"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "Response"
                }
            ],
            "class": "eZ.ServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-serversideviewservice.js",
            "line": 134,
            "description": "Load the content and the title of the server side view using a PJAX\nlike strategy, ie the server is supposed to response with an HTML\nlike document containing a title and the html code to use. The\nloading is done, the next callback is called with the service itself\nin parameter. If an error occurs, an error event is triggered.",
            "itemtype": "method",
            "name": "_load",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "next",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.ServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-serversideviewservice.js",
            "line": 162,
            "description": "Parses the server response",
            "itemtype": "method",
            "name": "_parseResponse",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "response",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "eZ.ServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-serversideviewservice.js",
            "line": 186,
            "description": "Rewrites the server side generated HTML so that it's browseable in\nthe PlatformUI application",
            "itemtype": "method",
            "name": "_rewrite",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Node"
                }
            ],
            "return": {
                "description": "",
                "type": "Node"
            },
            "class": "eZ.ServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-serversideviewservice.js",
            "line": 205,
            "description": "Returns the URI in PlatformUI App from the PJAX URI",
            "itemtype": "method",
            "name": "_getAdminRouteUri",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "uri",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.ServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-serversideviewservice.js",
            "line": 220,
            "description": "Checks whether the link can be transformed in a PJAX link.",
            "itemtype": "method",
            "name": "_isPjaxLink",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "link",
                    "description": "",
                    "type": "Y.Node"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.ServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-serversideviewservice.js",
            "line": 238,
            "description": "Fires notify event based on a notification node in the PJAX response.",
            "itemtype": "method",
            "name": "_notifyUser",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Node"
                }
            ],
            "class": "eZ.ServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-serversideviewservice.js",
            "line": 265,
            "description": "Returns the title and the html code as an object",
            "itemtype": "method",
            "name": "_getViewParameters",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.ServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-serversideviewservice.js",
            "line": 280,
            "description": "The title parsed from the pjax response.",
            "itemtype": "attribute",
            "name": "title",
            "default": "\"\"",
            "type": "String",
            "class": "eZ.ServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-serversideviewservice.js",
            "line": 291,
            "description": "The html code parsed from the pjax response.",
            "itemtype": "attribute",
            "name": "html",
            "default": "\"\"",
            "type": "String",
            "class": "eZ.ServerSideViewService",
            "module": "ez-navigationhubviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-universaldiscoveryviewservice.js",
            "line": 24,
            "description": "Returns the value of the `parameters` attribute. This attribute is set\nwhen the app shows the universal discovery side view with the\nconfiguration provided in the `contentDiscover` event.",
            "itemtype": "method",
            "name": "_getViewParameters",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "mixed"
            },
            "class": "eZ.UniversalDiscoveryViewService",
            "module": "ez-universaldiscoveryviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-viewservice.js",
            "line": 13,
            "description": "Fired when a loading error occurs",
            "itemtype": "event",
            "name": "error",
            "params": [
                {
                    "name": "message",
                    "description": "the error message",
                    "type": "String"
                }
            ],
            "class": "eZ.ViewService",
            "module": "ez-viewservice"
        },
        {
            "file": "Resources/public/js/views/services/ez-viewservice.js",
            "line": 33,
            "description": "Triggers the error event when the message parameter in the event\nfacade",
            "itemtype": "method",
            "name": "_error",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "msg",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "eZ.ViewService",
            "module": "ez-viewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-viewservice.js",
            "line": 45,
            "description": "Loads the data for the view. This method first calls the\n`parallelLoad` of each plugins in parallel with the service `_load`\nand after that it calls in parallel the `afterLoad` of each plugins\nand then calls the callback with the service in parameter.\n\n**Do not override this method unless you know what you are doing**\nYou'll most likely want to implement the `_load` method instead!",
            "itemtype": "method",
            "name": "load",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.ViewService",
            "module": "ez-viewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-viewservice.js",
            "line": 78,
            "description": "Default load implementation of the service. This method is meant to be\noverridden in services. The default implementation does nothing except\ncalling the passed callback.",
            "itemtype": "method",
            "name": "_load",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.ViewService",
            "module": "ez-viewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-viewservice.js",
            "line": 91,
            "description": "Configures the next view services. This method is meant to be overridden in\nview services implementations. It is called before load and takes the view\nservice instance that will replace the current one.\nThe default implementation does nothing.",
            "itemtype": "method",
            "name": "_setNextViewServiceParameters",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "service",
                    "description": "the new active view service",
                    "type": "eZ.ViewService"
                }
            ],
            "return": {
                "description": "the new view service",
                "type": "eZ.ViewService"
            },
            "class": "eZ.ViewService",
            "module": "ez-viewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-viewservice.js",
            "line": 106,
            "description": "Configures the next view services, it calls `_setNextViewServiceParameters`\nand takes the view service plugins into account.\n\n**Do not override this method unless you know what you are doing**\nYou'll most likely want to implement the `_setNextViewServiceParameters`\nmethod instead or write a view service plugin.",
            "itemtype": "method",
            "name": "setNextViewServiceParameters",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "newService",
                    "description": "the new active view service",
                    "type": "eZ.ViewService"
                }
            ],
            "return": {
                "description": "the new view service",
                "type": "eZ.ViewService"
            },
            "class": "eZ.ViewService",
            "module": "ez-viewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-viewservice.js",
            "line": 130,
            "description": "Returns the parameters to pass to the view. This method merges the\nview parameters provided by the plugins and by the service itself.\n\n**Do not override this method unless you know what you are doing**\nYou'll most likely want to implement the `_getViewParameters` method\ninstead!",
            "itemtype": "method",
            "name": "getViewParameters",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.ViewService",
            "module": "ez-viewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-viewservice.js",
            "line": 151,
            "description": "Returns the parameters to pass to the view. This method is meant to\nbe overridden in custom view services. The default implementation\nreturns an empty object.",
            "itemtype": "method",
            "name": "_getViewParameters",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.ViewService",
            "module": "ez-viewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-viewservice.js",
            "line": 164,
            "description": "The CAPI instance.",
            "itemtype": "attribute",
            "name": "capi",
            "initonly": "",
            "class": "eZ.ViewService",
            "module": "ez-viewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-viewservice.js",
            "line": 174,
            "description": "The request object currently handled",
            "itemtype": "attribute",
            "name": "request",
            "class": "eZ.ViewService",
            "module": "ez-viewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-viewservice.js",
            "line": 181,
            "description": "The response object",
            "itemtype": "attribute",
            "name": "response",
            "class": "eZ.ViewService",
            "module": "ez-viewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-viewservice.js",
            "line": 188,
            "description": "The application object",
            "itemtype": "attribute",
            "name": "app",
            "initonly": "",
            "class": "eZ.ViewService",
            "module": "ez-viewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/services/ez-viewservice.js",
            "line": 198,
            "description": "The view service configuration.",
            "itemtype": "attribute",
            "name": "config",
            "type": "mixed",
            "class": "eZ.ViewService",
            "module": "ez-viewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewdetailstabview.js",
            "line": 61,
            "description": "Fire the `loadUser` event",
            "itemtype": "method",
            "name": "_fireLoadUser",
            "access": "protected",
            "tagname": "",
            "class": "eZ.LocationViewDetailsTabView",
            "module": "ez-locationviewdetailstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewdetailstabview.js",
            "line": 70,
            "description": "Fired when the details view needs authors",
            "itemtype": "event",
            "name": "loadUser",
            "params": [
                {
                    "name": "userId",
                    "description": "Id of the author",
                    "type": "String"
                },
                {
                    "name": "attributeName",
                    "description": "Where to store the result",
                    "type": "String"
                }
            ],
            "class": "eZ.LocationViewDetailsTabView",
            "module": "ez-locationviewdetailstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewdetailstabview.js",
            "line": 94,
            "description": "The title of the tab",
            "itemtype": "attribute",
            "name": "title",
            "type": "{String}",
            "default": "\"Details\"",
            "readonly": "",
            "class": "eZ.LocationViewDetailsTabView",
            "module": "ez-locationviewdetailstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewdetailstabview.js",
            "line": 107,
            "description": "The identifier of the tab",
            "itemtype": "attribute",
            "name": "identifier",
            "type": "{String}",
            "default": "\"details\"",
            "readonly": "",
            "class": "eZ.LocationViewDetailsTabView",
            "module": "ez-locationviewdetailstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewdetailstabview.js",
            "line": 120,
            "description": "The creator of the content",
            "itemtype": "attribute",
            "name": "creator",
            "type": "{Object}",
            "class": "eZ.LocationViewDetailsTabView",
            "module": "ez-locationviewdetailstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewdetailstabview.js",
            "line": 128,
            "description": "The owner of the content",
            "itemtype": "attribute",
            "name": "owner",
            "type": "{Object}",
            "class": "eZ.LocationViewDetailsTabView",
            "module": "ez-locationviewdetailstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewdetailstabview.js",
            "line": 136,
            "description": "The content being displayed",
            "itemtype": "attribute",
            "name": "content",
            "type": "{eZ.Content}",
            "writeonce": "",
            "class": "eZ.LocationViewDetailsTabView",
            "module": "ez-locationviewdetailstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewdetailstabview.js",
            "line": 147,
            "description": "The location being displayed",
            "itemtype": "attribute",
            "name": "location",
            "type": "{eZ.Location}",
            "writeonce": "",
            "class": "eZ.LocationViewDetailsTabView",
            "module": "ez-locationviewdetailstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewdetailstabview.js",
            "line": 158,
            "description": "The config",
            "itemtype": "attribute",
            "name": "config",
            "type": "mixed",
            "writeonce": "",
            "class": "eZ.LocationViewDetailsTabView",
            "module": "ez-locationviewdetailstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "line": 64,
            "description": "Fire the `loadLocations` event",
            "itemtype": "method",
            "name": "_fireLoadLocations",
            "access": "protected",
            "tagname": "",
            "class": "eZ.LocationViewLocationsTabView",
            "module": "ez-locationviewlocationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "line": 71,
            "description": "Fired when the locations tab view needs content's locations",
            "itemtype": "event",
            "name": "loadLocations",
            "params": [
                {
                    "name": "content",
                    "description": "the content for which locations will be loaded",
                    "type": "eZ.Content"
                },
                {
                    "name": "location",
                    "description": "currently being displayed",
                    "type": "eZ.Location"
                }
            ],
            "class": "eZ.LocationViewLocationsTabView",
            "module": "ez-locationviewlocationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "line": 85,
            "description": "Tap event handler on the `Add location` button. It fires the\n`createLocation` event",
            "itemtype": "method",
            "name": "_addLocation",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.LocationViewLocationsTabView",
            "module": "ez-locationviewlocationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "line": 94,
            "description": "Fired when the user clicks on `Add location` button",
            "itemtype": "event",
            "name": "createLocation",
            "params": [
                {
                    "name": "content",
                    "description": "the content for which locations will be created",
                    "type": "eZ.Content"
                },
                {
                    "name": "afterCreateCallback",
                    "description": "callback function that will be called after\n                  creating location(s)",
                    "type": "Function"
                }
            ],
            "class": "eZ.LocationViewLocationsTabView",
            "module": "ez-locationviewlocationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "line": 108,
            "description": "After create location callback function. It fires `loadLocations` event\nfor refresh the view.",
            "itemtype": "method",
            "name": "_refresh",
            "access": "protected",
            "tagname": "",
            "class": "eZ.LocationViewLocationsTabView",
            "module": "ez-locationviewlocationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "line": 119,
            "description": "Tap event handler on the main location radio input. It fires the\n`setMainLocation` event",
            "itemtype": "method",
            "name": "_setMainLocation",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.LocationViewLocationsTabView",
            "module": "ez-locationviewlocationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "line": 145,
            "description": "Turns off disabled state for main location radio inputs.",
            "itemtype": "method",
            "name": "_enableSetMainLocationRadios",
            "access": "private",
            "tagname": "",
            "class": "eZ.LocationViewLocationsTabView",
            "module": "ez-locationviewlocationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "line": 155,
            "description": "Switches the visibility of the location provided in the `switchVisibility` event",
            "itemtype": "method",
            "name": "_switchVisibility",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.LocationViewLocationsTabView",
            "module": "ez-locationviewlocationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "line": 177,
            "description": "Fired when the user clicks on the hide/reveal button",
            "itemtype": "event",
            "name": "switchVisibility",
            "params": [
                {
                    "name": "location",
                    "description": "Location who's visibility needs to be changed\n       callback called ones the visibility has been updated",
                    "type": "eZ.Location"
                }
            ],
            "class": "eZ.LocationViewLocationsTabView",
            "module": "ez-locationviewlocationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "line": 196,
            "description": "Tap event handler on the `Remove selected` button. It fires the\n`removeLocations` event",
            "itemtype": "method",
            "name": "_removeSelectedLocations",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.LocationViewLocationsTabView",
            "module": "ez-locationviewlocationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "line": 226,
            "description": "Callback function called after removing location(s).",
            "itemtype": "method",
            "name": "_afterRemoveLocationCallback",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "locationsRemoved",
                    "description": "if TRUE the view is reloaded, if FALSE it just enables checkboxes",
                    "type": "Boolean"
                }
            ],
            "class": "eZ.LocationViewLocationsTabView",
            "module": "ez-locationviewlocationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "line": 241,
            "description": "Disables all checkboxes on locations list preventing from making use of them.",
            "itemtype": "method",
            "name": "_disableLocationsCheckboxes",
            "access": "private",
            "tagname": "",
            "class": "eZ.LocationViewLocationsTabView",
            "module": "ez-locationviewlocationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "line": 251,
            "description": "Enables checkboxes on locations list. Checkbox of main location remains disabled.",
            "itemtype": "method",
            "name": "_enableLocationsCheckboxes",
            "access": "private",
            "tagname": "",
            "class": "eZ.LocationViewLocationsTabView",
            "module": "ez-locationviewlocationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "line": 264,
            "description": "The title of the tab",
            "itemtype": "attribute",
            "name": "title",
            "type": "{String}",
            "default": "\"Locations\"",
            "readonly": "",
            "class": "eZ.LocationViewLocationsTabView",
            "module": "ez-locationviewlocationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "line": 277,
            "description": "The identifier of the tab",
            "itemtype": "attribute",
            "name": "identifier",
            "type": "{String}",
            "default": "\"locations\"",
            "readonly": "",
            "class": "eZ.LocationViewLocationsTabView",
            "module": "ez-locationviewlocationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "line": 290,
            "description": "The content being displayed",
            "itemtype": "attribute",
            "name": "content",
            "type": "{eZ.Content}",
            "writeonce": "",
            "class": "eZ.LocationViewLocationsTabView",
            "module": "ez-locationviewlocationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "line": 301,
            "description": "The location being displayed in the location view.",
            "itemtype": "attribute",
            "name": "location",
            "type": "{eZ.Location}",
            "writeonce": "",
            "class": "eZ.LocationViewLocationsTabView",
            "module": "ez-locationviewlocationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "line": 312,
            "description": "List of locations of the content",
            "itemtype": "attribute",
            "name": "locations",
            "type": "{Array}",
            "class": "eZ.LocationViewLocationsTabView",
            "module": "ez-locationviewlocationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewlocationstabview.js",
            "line": 320,
            "description": "The config",
            "itemtype": "attribute",
            "name": "config",
            "type": "mixed",
            "writeonce": "",
            "class": "eZ.LocationViewLocationsTabView",
            "module": "ez-locationviewlocationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewrelationstabview.js",
            "line": 41,
            "description": "Provides the name of the relation type based on its Id",
            "itemtype": "method",
            "name": "_lookupRelationTypeName",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "relationTypeId",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.LocationViewRelationsTabView",
            "module": "ez-locationviewrelationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewrelationstabview.js",
            "line": 61,
            "description": "Provides the relation information for a given content",
            "itemtype": "method",
            "name": "_lookupRelationInfo",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "content",
                    "description": "",
                    "type": "eZ.Content"
                }
            ],
            "return": {
                "description": "of Relations struct:\n             struct.relationTypeName: Ready to be displayed name of the relation type\n             struct.fieldDefinitionName: Name of the field definition if any (undefined if none)",
                "type": "Array"
            },
            "class": "eZ.LocationViewRelationsTabView",
            "module": "ez-locationviewrelationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewrelationstabview.js",
            "line": 94,
            "description": "Provides items for the relation list",
            "itemtype": "method",
            "name": "_lookupRelationListItems",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "relationList",
                    "description": "List of related content",
                    "type": "ez.Content[]"
                }
            ],
            "return": {
                "description": "of RelationsListItems struct:\n             struct.content: JSONified related content\n             struct.mainLocationId: main location Id of the content\n             struct.relationInfo.relationTypeName: Ready to be displayed name of the relation type\n             struct.relationInfo.fieldDefinitionName: Name of the field definition if any (\"\" if none)",
                "type": "Array"
            },
            "class": "eZ.LocationViewRelationsTabView",
            "module": "ez-locationviewrelationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewrelationstabview.js",
            "line": 120,
            "description": "Fire the `loadObjectRelations` event to retrieve the related contents",
            "itemtype": "method",
            "name": "_fireLoadObjectRelations",
            "access": "protected",
            "tagname": "",
            "class": "eZ.LocationViewRelationsTabView",
            "module": "ez-locationviewrelationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewrelationstabview.js",
            "line": 131,
            "description": "The title of the tab",
            "itemtype": "attribute",
            "name": "title",
            "type": "{String}",
            "default": "\"Related content\"",
            "readonly": "",
            "class": "eZ.LocationViewRelationsTabView",
            "module": "ez-locationviewrelationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewrelationstabview.js",
            "line": 144,
            "description": "The identifier of the tab",
            "itemtype": "attribute",
            "name": "identifier",
            "type": "{String}",
            "default": "\"relations\"",
            "readonly": "",
            "class": "eZ.LocationViewRelationsTabView",
            "module": "ez-locationviewrelationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewrelationstabview.js",
            "line": 157,
            "description": "The related contents of the content",
            "itemtype": "attribute",
            "name": "relatedContents",
            "type": "Array",
            "class": "eZ.LocationViewRelationsTabView",
            "module": "ez-locationviewrelationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewrelationstabview.js",
            "line": 167,
            "description": "The content type of the content being displayed",
            "itemtype": "attribute",
            "name": "contentType",
            "type": "{eZ.ContentType}",
            "writeonce": "",
            "class": "eZ.LocationViewRelationsTabView",
            "module": "ez-locationviewrelationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewrelationstabview.js",
            "line": 178,
            "description": "The content being displayed",
            "itemtype": "attribute",
            "name": "content",
            "type": "{eZ.Content}",
            "writeonce": "",
            "class": "eZ.LocationViewRelationsTabView",
            "module": "ez-locationviewrelationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewrelationstabview.js",
            "line": 189,
            "description": "The config",
            "itemtype": "attribute",
            "name": "config",
            "type": "mixed",
            "writeonce": "",
            "class": "eZ.LocationViewRelationsTabView",
            "module": "ez-locationviewrelationstabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewviewtabview.js",
            "line": 34,
            "description": "The title of the tab",
            "itemtype": "attribute",
            "name": "title",
            "type": "{String}",
            "default": "\"View\"",
            "readonly": "",
            "class": "eZ.LocationViewViewTabView",
            "module": "ez-locationviewviewtabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewviewtabview.js",
            "line": 47,
            "description": "The identifier of the tab",
            "itemtype": "attribute",
            "name": "identifier",
            "type": "{String}",
            "default": "\"view\"",
            "readonly": "",
            "class": "eZ.LocationViewViewTabView",
            "module": "ez-locationviewviewtabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewviewtabview.js",
            "line": 60,
            "description": "The content being displayed",
            "itemtype": "attribute",
            "name": "content",
            "type": "{eZ.Content}",
            "writeonce": "",
            "class": "eZ.LocationViewViewTabView",
            "module": "ez-locationviewviewtabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewviewtabview.js",
            "line": 71,
            "description": "The location being displayed",
            "itemtype": "attribute",
            "name": "location",
            "type": "{eZ.Location}",
            "writeonce": "",
            "class": "eZ.LocationViewViewTabView",
            "module": "ez-locationviewviewtabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewviewtabview.js",
            "line": 82,
            "description": "The content type of the content being displayed",
            "itemtype": "attribute",
            "name": "contentType",
            "type": "{eZ.ContentType}",
            "writeonce": "",
            "class": "eZ.LocationViewViewTabView",
            "module": "ez-locationviewviewtabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewviewtabview.js",
            "line": 93,
            "description": "The config",
            "itemtype": "attribute",
            "name": "config",
            "type": "mixed",
            "writeonce": "",
            "class": "eZ.LocationViewViewTabView",
            "module": "ez-locationviewviewtabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewviewtabview.js",
            "line": 104,
            "description": "The language code in which the content displayed",
            "itemtype": "attribute",
            "name": "languageCode",
            "type": "{String}",
            "writeonce": "",
            "class": "eZ.LocationViewViewTabView",
            "module": "ez-locationviewviewtabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/tabs/ez-locationviewviewtabview.js",
            "line": 115,
            "description": "The raw content view instance",
            "itemtype": "attribute",
            "name": "rawContentView",
            "type": "{eZ.RawContentView}",
            "class": "eZ.LocationViewViewTabView",
            "module": "ez-locationviewviewtabview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverybrowseview.js",
            "line": 30,
            "description": "Custom reset implementation to explicitely reset the sub views.",
            "itemtype": "method",
            "name": "reset",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "eZ.UniversalDiscoveryBrowseView",
            "module": "ez-universaldiscoverybrowseview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverybrowseview.js",
            "line": 69,
            "description": "`multipleChange` and `isSelectableChange` events handler. It sets the selected view\n`addConfirmButton` flag according to the new `multiple` attribute value and passes\nnew `isSelectable` function to the selected view.",
            "itemtype": "method",
            "name": "_setSelectedViewAttrs",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryBrowseView",
            "module": "ez-universaldiscoverybrowseview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverybrowseview.js",
            "line": 84,
            "description": "`treeNavigate` event handler. It fires the `selectedContent` event\nand set the content structure on the selected view so that it is\ndisplayed.",
            "itemtype": "method",
            "name": "_selectContent",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.UniversalDiscoveryBrowseView",
            "module": "ez-universaldiscoverybrowseview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverybrowseview.js",
            "line": 102,
            "description": "`visibleChange` event handler. It makes to reset the current\nselection when the browse method is hidden/showed",
            "itemtype": "method",
            "name": "_unselectContent",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryBrowseView",
            "module": "ez-universaldiscoverybrowseview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverybrowseview.js",
            "line": 114,
            "description": "Fires the `selectContent` event for the given `selection`",
            "itemtype": "method",
            "name": "_fireSelectContent",
            "params": [
                {
                    "name": "selection",
                    "description": "",
                    "type": "Object|Null"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryBrowseView",
            "module": "ez-universaldiscoverybrowseview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverybrowseview.js",
            "line": 122,
            "description": "Fired when a content is selected or unselected. The event facade\nprovides the content structure (the contentInfo, location and content\ntype models) if a selection was made.",
            "itemtype": "event",
            "name": "selectContent",
            "params": [
                {
                    "name": "selection",
                    "description": "",
                    "type": "Object|Null",
                    "props": [
                        {
                            "name": "contentInfo",
                            "description": "",
                            "type": "eZ.ContentInfo"
                        },
                        {
                            "name": "location",
                            "description": "",
                            "type": "eZ.Location"
                        },
                        {
                            "name": "contentType",
                            "description": "",
                            "type": "eZ.ContentType"
                        }
                    ]
                }
            ],
            "class": "eZ.UniversalDiscoveryBrowseView",
            "module": "ez-universaldiscoverybrowseview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverybrowseview.js",
            "line": 139,
            "itemtype": "attribute",
            "name": "title",
            "default": "'Browse'",
            "class": "eZ.UniversalDiscoveryBrowseView",
            "module": "ez-universaldiscoverybrowseview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverybrowseview.js",
            "line": 148,
            "itemtype": "attribute",
            "name": "identifier",
            "default": "'browse'",
            "class": "eZ.UniversalDiscoveryBrowseView",
            "module": "ez-universaldiscoverybrowseview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverybrowseview.js",
            "line": 157,
            "description": "Holds the tree view",
            "itemtype": "attribute",
            "name": "treeView",
            "type": "{eZ.TreeView}",
            "class": "eZ.UniversalDiscoveryBrowseView",
            "module": "ez-universaldiscoverybrowseview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverybrowseview.js",
            "line": 171,
            "description": "Holds the selected view that displays the currently selected\ncontent (if any)",
            "itemtype": "attribute",
            "name": "selectedView",
            "type": "{eZ.UniversalDiscoverySelectedView}",
            "class": "eZ.UniversalDiscoveryBrowseView",
            "module": "ez-universaldiscoverybrowseview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js",
            "line": 71,
            "description": "tap event handler on the remove button.",
            "itemtype": "method",
            "name": "_removeContent",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryConfirmedListView",
            "module": "ez-universaldiscoveryconfirmedlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js",
            "line": 97,
            "description": "Fires the unselectContent to remove the content from the universal\ndiscovery selection.",
            "itemtype": "method",
            "name": "_removeContent",
            "params": [
                {
                    "name": "contentId",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryConfirmedListView",
            "module": "ez-universaldiscoveryconfirmedlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js",
            "line": 106,
            "description": "Fired to unselect a content in universal discovery widget",
            "itemtype": "event",
            "name": "unselectContent",
            "params": [
                {
                    "name": "contentId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "eZ.UniversalDiscoveryConfirmedListView",
            "module": "ez-universaldiscoveryconfirmedlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js",
            "line": 117,
            "description": "Adds or removes the `is-empty` class on the container depending on\nthe confirmedList content",
            "itemtype": "method",
            "name": "_uiHandleEmptyClass",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryConfirmedListView",
            "module": "ez-universaldiscoveryconfirmedlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js",
            "line": 134,
            "description": "Show or hide the full list depending on the `showFullList` flag",
            "itemtype": "method",
            "name": "_uiHandleFullList",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryConfirmedListView",
            "module": "ez-universaldiscoveryconfirmedlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js",
            "line": 152,
            "description": "`trackOutsideEventsChange` event handler.\nAdds or removes the click outside event handler depending on the\n`trackOutsideEvents` attribute value.",
            "itemtype": "method",
            "name": "_handleClickOutsideEventHandler",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryConfirmedListView",
            "module": "ez-universaldiscoveryconfirmedlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js",
            "line": 168,
            "description": "Adds the click outside event handler",
            "itemtype": "method",
            "name": "_addClickOutsideHandler",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryConfirmedListView",
            "module": "ez-universaldiscoveryconfirmedlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js",
            "line": 184,
            "description": "Removes the click outside event handler",
            "itemtype": "method",
            "name": "_removeClickOutsideHandler",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryConfirmedListView",
            "module": "ez-universaldiscoveryconfirmedlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js",
            "line": 197,
            "description": "Toggles the `showFullList` flag",
            "itemtype": "method",
            "name": "_toggleFullList",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryConfirmedListView",
            "module": "ez-universaldiscoveryconfirmedlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js",
            "line": 207,
            "description": "Hides the full list",
            "itemtype": "method",
            "name": "_hideFullList",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryConfirmedListView",
            "module": "ez-universaldiscoveryconfirmedlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js",
            "line": 217,
            "description": "Returns the number of content in the content list that won't be\ndisplayed in the *mini list*",
            "itemtype": "method",
            "name": "_getRemainingCount",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "eZ.UniversalDiscoveryConfirmedListView",
            "module": "ez-universaldiscoveryconfirmedlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js",
            "line": 232,
            "description": "Extracts a portion of the content list to display before the *+X\nmore* message. If the confirmed list is not filled, it returns false.",
            "itemtype": "method",
            "name": "_getMiniDisplayList",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Array|false"
            },
            "class": "eZ.UniversalDiscoveryConfirmedListView",
            "module": "ez-universaldiscoveryconfirmedlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js",
            "line": 251,
            "description": "Transforms the given confirmed list so that it's suitable to be used\nin the template, ie the models are replaced by the result of the\n`toJSON` method",
            "itemtype": "method",
            "name": "_jsonifyList",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "list",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "eZ.UniversalDiscoveryConfirmedListView",
            "module": "ez-universaldiscoveryconfirmedlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js",
            "line": 273,
            "description": "Checks whether the confirmed list is filled or not",
            "itemtype": "method",
            "name": "_hasConfirmedList",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.UniversalDiscoveryConfirmedListView",
            "module": "ez-universaldiscoveryconfirmedlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js",
            "line": 284,
            "description": "Custom reset implementation to make sure to also reset the\nread only `showFullList` attribute.",
            "itemtype": "method",
            "name": "reset",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "eZ.UniversalDiscoveryConfirmedListView",
            "module": "ez-universaldiscoveryconfirmedlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js",
            "line": 300,
            "description": "The current confirmed list. It's an array containing one or\nseveral content structure (ie an object with a contentInfo, a\nlocation and a content type models) or null.",
            "itemtype": "attribute",
            "name": "confirmedList",
            "type": "{Array|Null}",
            "class": "eZ.UniversalDiscoveryConfirmedListView",
            "module": "ez-universaldiscoveryconfirmedlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js",
            "line": 312,
            "description": "Flag indicating whether the full list should be shown",
            "itemtype": "attribute",
            "name": "showFullList",
            "type": "Boolean",
            "readonly": "",
            "class": "eZ.UniversalDiscoveryConfirmedListView",
            "module": "ez-universaldiscoveryconfirmedlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryconfirmedlistview.js",
            "line": 324,
            "description": "Flag indicating whether the confirmed list should track the\noutside events (click).",
            "itemtype": "attribute",
            "name": "trackOutsideEvents",
            "readonly": "",
            "class": "eZ.UniversalDiscoveryConfirmedListView",
            "module": "ez-universaldiscoveryconfirmedlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverymethodbaseview.js",
            "line": 27,
            "description": "Returns the HTML identifier of the method",
            "itemtype": "method",
            "name": "getHTMLIdentifier",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.UniversalDiscoveryMethodBaseView",
            "module": "ez-universaldiscoverymethodbaseview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverymethodbaseview.js",
            "line": 37,
            "description": "Method called when a content is removed from the universal discovery\nview selection. The default implementation does nothing, it is meant\nto be overriden.",
            "itemtype": "method",
            "name": "onUnselectContent",
            "params": [
                {
                    "name": "contentId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "eZ.UniversalDiscoveryMethodBaseView",
            "module": "ez-universaldiscoverymethodbaseview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverymethodbaseview.js",
            "line": 49,
            "description": "Stores the title of the method. It is displayed in the tab label\ngenerated by the universal discovery view",
            "itemtype": "attribute",
            "name": "title",
            "type": "{String}",
            "readonly": "",
            "class": "eZ.UniversalDiscoveryMethodBaseView",
            "module": "ez-universaldiscoverymethodbaseview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverymethodbaseview.js",
            "line": 62,
            "description": "Stores the identifier of the method. It is used to generate the\nidentifier of the tab panel and to set the visible method in the\nuniversal discovery view",
            "itemtype": "attribute",
            "name": "identifer",
            "type": "{String}",
            "readonly": "",
            "class": "eZ.UniversalDiscoveryMethodBaseView",
            "module": "ez-universaldiscoverymethodbaseview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverymethodbaseview.js",
            "line": 76,
            "description": "Priority of the method",
            "itemtype": "attribute",
            "name": "priority",
            "type": "{Number}",
            "default": "0",
            "class": "eZ.UniversalDiscoveryMethodBaseView",
            "module": "ez-universaldiscoverymethodbaseview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverymethodbaseview.js",
            "line": 87,
            "description": "Flag indicating whether the user is able to select several\ncontents.",
            "itemtype": "attribute",
            "name": "multiple",
            "type": "{Boolean}",
            "default": "false",
            "class": "eZ.UniversalDiscoveryMethodBaseView",
            "module": "ez-universaldiscoverymethodbaseview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverymethodbaseview.js",
            "line": 99,
            "description": "Flag indicating whether the Content should be provided in the\nselection.",
            "itemtype": "attribute",
            "name": "loadContent",
            "type": "{Boolean}",
            "default": "false",
            "class": "eZ.UniversalDiscoveryMethodBaseView",
            "module": "ez-universaldiscoverymethodbaseview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverymethodbaseview.js",
            "line": 111,
            "description": "The visible flag. it is updated by the universal discovery view\ndepending on the tab state.",
            "itemtype": "attribute",
            "name": "visible",
            "type": "{Boolean}",
            "default": "false",
            "class": "eZ.UniversalDiscoveryMethodBaseView",
            "module": "ez-universaldiscoverymethodbaseview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverymethodbaseview.js",
            "line": 123,
            "description": "Checks wether the content is already selected.",
            "itemtype": "attribute",
            "name": "isAlreadySelected",
            "type": "{Function}",
            "class": "eZ.UniversalDiscoveryMethodBaseView",
            "module": "ez-universaldiscoverymethodbaseview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverymethodbaseview.js",
            "line": 136,
            "description": "Checks wether the content is selectable.",
            "itemtype": "attribute",
            "name": "isSelectable",
            "type": "{Function}",
            "class": "eZ.UniversalDiscoveryMethodBaseView",
            "module": "ez-universaldiscoverymethodbaseview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 58,
            "description": "Custom reset implementation to explicitely reset the sub views.",
            "itemtype": "method",
            "name": "reset",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 100,
            "description": "`searchResultListChange` event handler. It clears selectedView and hides page loading mask.",
            "itemtype": "method",
            "name": "_searchResultChanged",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 111,
            "description": "`multipleChange` and `isSelectableChange` events handler. It sets the selected view\n`addConfirmButton` flag according to the new `multiple` attribute value and passes\nnew `isSelectable` function to the selected view.",
            "itemtype": "method",
            "name": "_setSelectedViewAttrs",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 126,
            "description": "Search form `submit` event handler. It sets the attributes that take part in the search\nand proceeds with the firing location search.",
            "itemtype": "method",
            "name": "_search",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 144,
            "description": "Fires the `locationSearch` event to fetch the result list of the search.",
            "itemtype": "method",
            "name": "_fireLocationSearch",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 175,
            "description": "Converts the search result list array to JSON so that it can be used in the\ntemplate.",
            "itemtype": "method",
            "name": "_convertToJSONList",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "undefined|Array"
            },
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 195,
            "description": "Sets the UI in the loading the state",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_uiPageLoading",
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 205,
            "description": "Removes the loading state of the UI",
            "itemtype": "method",
            "name": "_uiPageEndLoading",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 215,
            "description": "`selectContent` event handler. It highlights only selected content and unhighlights other\ncontents. If selection in given event facade is empty then it just unhighlights all contents.",
            "itemtype": "method",
            "name": "_uiSelectContent",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade",
                    "props": [
                        {
                            "name": "selection",
                            "description": "selected contentStruct",
                            "type": "Null|Object"
                        }
                    ]
                }
            ],
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 235,
            "description": "Fires the `selectContent` event for the given `selection`",
            "itemtype": "method",
            "name": "_fireSelectContent",
            "params": [
                {
                    "name": "selection",
                    "description": "",
                    "type": "Object|Null"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 243,
            "description": "Fired when a content is selected or unselected. The event facade\nprovides the content structure (the contentInfo, location and content\ntype models) if a selection was made.",
            "itemtype": "event",
            "name": "selectContent",
            "params": [
                {
                    "name": "selection",
                    "description": "",
                    "type": "Object|Null",
                    "props": [
                        {
                            "name": "contentInfo",
                            "description": "",
                            "type": "eZ.ContentInfo"
                        },
                        {
                            "name": "location",
                            "description": "",
                            "type": "eZ.Location"
                        },
                        {
                            "name": "contentType",
                            "description": "",
                            "type": "eZ.ContentType"
                        }
                    ]
                }
            ],
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 259,
            "description": "`visibleChange` event handler. It makes to reset the current\nselection when the search method is hidden/showed",
            "itemtype": "method",
            "name": "_unselectContent",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 271,
            "description": "Preview button `tap` event handler. It prepares contentStruct by taking location from\nresult list based on location's id and adding contentInfo and contentType. After that\nthe row containing selected location is highlighted.",
            "itemtype": "method",
            "name": "_selectContent",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 303,
            "description": "Gets single location from the results list based on the locations id.\nIf there is no location in search result with given location id then `undefined` is returned.",
            "itemtype": "method",
            "name": "_getLocationStructFromResultList",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "locationId",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "locationStruct.contentType",
                "type": "eZ.ContentType"
            },
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 326,
            "description": "tap event handler on the navigation links. Changes the page if the\nlink is not disabled",
            "itemtype": "method",
            "name": "_handlePagination",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 344,
            "description": "Returns the *goto* function for the given type operation",
            "itemtype": "method",
            "name": "_getGotoMethod",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 356,
            "description": "Go to the first page",
            "itemtype": "method",
            "name": "_gotoFirst",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 366,
            "description": "Go to the next page",
            "itemtype": "method",
            "name": "_gotoNext",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 376,
            "description": "Go to the previous page",
            "itemtype": "method",
            "name": "_gotoPrev",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 386,
            "description": "Go to the last page",
            "itemtype": "method",
            "name": "_gotoLast",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 398,
            "description": "Checks whether the pagination will be useful",
            "itemtype": "method",
            "name": "_hasPages",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 409,
            "description": "Checks whether the user is on the first \"page\".",
            "itemtype": "method",
            "name": "_isLastPage",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 420,
            "description": "Checks whether the user is on the last \"page\".",
            "itemtype": "method",
            "name": "_isLastPage",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 432,
            "itemtype": "attribute",
            "name": "title",
            "default": "'Search'",
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 441,
            "itemtype": "attribute",
            "name": "identifier",
            "default": "'search'",
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 450,
            "description": "The max number of the Locations to display in the search result list\nper \"page\".",
            "itemtype": "attribute",
            "name": "limit",
            "default": "10",
            "type": "Number",
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 462,
            "description": "The offset in the search result list.",
            "itemtype": "attribute",
            "name": "offset",
            "default": "0",
            "type": "Number",
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 473,
            "description": "The search text used in full text search.",
            "itemtype": "attribute",
            "name": "searchText",
            "default": "''",
            "type": "String",
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 484,
            "description": "The number of total search results.",
            "itemtype": "attribute",
            "name": "searchResultCount",
            "default": "0",
            "type": "Number",
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 495,
            "description": "The search result list which is array containing location structs. Single location struct\nis indexed object containing `location` (eZ.Location) and `contentType` (eZ.ContentType)",
            "itemtype": "attribute",
            "name": "searchResultList",
            "default": "[]",
            "type": "Array of {Object} array containing location structs",
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoverysearchview.js",
            "line": 507,
            "description": "Holds the selected view that displays the currently selected\ncontent (if any)",
            "itemtype": "attribute",
            "name": "selectedView",
            "type": "{eZ.UniversalDiscoverySelectedView}",
            "class": "eZ.UniversalDiscoverySearchView",
            "module": "ez-universaldiscoverysearchview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryselectedview.js",
            "line": 45,
            "description": "Sets the confirm selection button state depending on wether content\nis selectable and is not already selected.",
            "itemtype": "method",
            "name": "_setConfirmButtonState",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoverySelectedView",
            "module": "ez-universaldiscoveryselectedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryselectedview.js",
            "line": 64,
            "description": "`confirmButtonEnabledChange` event handler. It sets the confirm\nbutton state depending on the value of the `confirmButtonEnabled`\nattribute",
            "itemtype": "method",
            "name": "_uiButtonState",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoverySelectedView",
            "module": "ez-universaldiscoveryselectedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryselectedview.js",
            "line": 82,
            "description": "tap event handler on the confirm button. If the given content is not already selected\nit disables the confirm button and  fires the `confirmSelectedContent` event\nmeaning that the user wants the content to be added to his confirmed content list.",
            "itemtype": "method",
            "name": "_confirmSelected",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.UniversalDiscoverySelectedView",
            "module": "ez-universaldiscoveryselectedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryselectedview.js",
            "line": 97,
            "description": "Fired when the user has confirmed that he wants the content to be\nadded in the confirmed list. This event will be fired/used only\nwhen the universal discovery widget is configured to allow\nseveral contents to be selected.",
            "itemtype": "event",
            "name": "confirmSelectedContent",
            "params": [
                {
                    "name": "selection",
                    "description": "the content structure for the content\nwhich is selected",
                    "type": "Object"
                }
            ],
            "class": "eZ.UniversalDiscoverySelectedView",
            "module": "ez-universaldiscoveryselectedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryselectedview.js",
            "line": 124,
            "description": "Returns the element that will be animated when the displayed content\nis selected",
            "itemtype": "method",
            "name": "_getAnimatedElement",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Y.Node|Null"
            },
            "class": "eZ.UniversalDiscoverySelectedView",
            "module": "ez-universaldiscoveryselectedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryselectedview.js",
            "line": 136,
            "description": "Starts the animation of the content selection. It also returns the\nnode to animate.",
            "itemtype": "method",
            "name": "startAnimation",
            "return": {
                "description": "",
                "type": "Y.Node|Null"
            },
            "class": "eZ.UniversalDiscoverySelectedView",
            "module": "ez-universaldiscoveryselectedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryselectedview.js",
            "line": 153,
            "description": "Resets the animated element to its original state",
            "itemtype": "method",
            "name": "_uiResetAnimation",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoverySelectedView",
            "module": "ez-universaldiscoveryselectedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryselectedview.js",
            "line": 167,
            "description": "'jsonifies' the model available under the identifier in the\n`contentStruct` attribute",
            "itemtype": "method",
            "name": "_modelJson",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "identifier",
                    "description": "the identifier of the model in the\n`contentStruct` attribute",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Object|false"
            },
            "class": "eZ.UniversalDiscoverySelectedView",
            "module": "ez-universaldiscoveryselectedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryselectedview.js",
            "line": 187,
            "description": "The content structure representing the content to display. It\nshould contain the content info, the location and the content\ntype models under the key `contentInfo`, `location` and\n`contentType`.",
            "itemtype": "attribute",
            "name": "contentStruct",
            "type": "{null|Object}",
            "default": "null",
            "class": "eZ.UniversalDiscoverySelectedView",
            "module": "ez-universaldiscoveryselectedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryselectedview.js",
            "line": 201,
            "description": "Flag indicating whether a confirm button has to be added.",
            "itemtype": "attribute",
            "name": "addConfirmButton",
            "type": "{Boolean}",
            "default": "false",
            "class": "eZ.UniversalDiscoverySelectedView",
            "module": "ez-universaldiscoveryselectedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryselectedview.js",
            "line": 212,
            "description": "Flag indicating whether the confirm button should be enabled or\nnot.",
            "itemtype": "attribute",
            "name": "confirmButtonEnabled",
            "type": "{Boolean}",
            "default": "true",
            "class": "eZ.UniversalDiscoverySelectedView",
            "module": "ez-universaldiscoveryselectedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryselectedview.js",
            "line": 224,
            "description": "Checks wether the content is already selected.",
            "itemtype": "attribute",
            "name": "isAlreadySelected",
            "type": "{Function}",
            "class": "eZ.UniversalDiscoverySelectedView",
            "module": "ez-universaldiscoveryselectedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/universaldiscovery/ez-universaldiscoveryselectedview.js",
            "line": 237,
            "description": "Checks wether the content is selectable.",
            "itemtype": "attribute",
            "name": "isSelectable",
            "type": "{Function}",
            "class": "eZ.UniversalDiscoverySelectedView",
            "module": "ez-universaldiscoveryselectedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-actionbarview.js",
            "line": 25,
            "description": "An array of {{#crossLink\n\"eZ.ButtonActionView\"}}eZ.ButtonActionView{{/crossLink}}",
            "itemtype": "attribute",
            "name": "actionsList",
            "type": "Array",
            "class": "eZ.ActionBarView",
            "module": "ez-actionbarview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-actionbarview.js",
            "line": 84,
            "description": "The location being rendered",
            "itemtype": "attribute",
            "name": "location",
            "type": "Y.eZ.Location",
            "writeonce": "",
            "class": "eZ.ActionBarView",
            "module": "ez-actionbarview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-actionbarview.js",
            "line": 95,
            "description": "The content associated the current location",
            "itemtype": "attribute",
            "name": "content",
            "type": "Y.eZ.Content",
            "writeonce": "",
            "class": "eZ.ActionBarView",
            "module": "ez-actionbarview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-actionbarview.js",
            "line": 106,
            "description": "The content type of the content at the current location",
            "itemtype": "attribute",
            "name": "contentType",
            "type": "Y.eZ.ContentType",
            "writeonce": "",
            "class": "eZ.ActionBarView",
            "module": "ez-actionbarview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-barview.js",
            "line": 35,
            "description": "Overrides the default implementation from Y.eZ.TemplateBasedView so\nthat all bar views use the same template",
            "itemtype": "method",
            "name": "_getName",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "String"
            },
            "class": "eZ.BarView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-barview.js",
            "line": 47,
            "description": "Initializer is called upon view's init\nCreating actions lookup object, misc init workflow",
            "itemtype": "method",
            "name": "initializer",
            "class": "eZ.BarView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-barview.js",
            "line": 70,
            "description": "Renders the edit action bar (non-height-responsive version).",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "the view itself",
                "type": "eZ.EditActionBarView"
            },
            "class": "eZ.BarView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-barview.js",
            "line": 98,
            "description": "Add the action to the main actions list",
            "itemtype": "method",
            "name": "addAction",
            "params": [
                {
                    "name": "action",
                    "description": "instance of an action view",
                    "type": "eZ.ButtonActionView"
                }
            ],
            "class": "eZ.BarView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-barview.js",
            "line": 113,
            "description": "Remove an action from the main actions list",
            "itemtype": "method",
            "name": "removeAction",
            "params": [
                {
                    "name": "actionId",
                    "description": "Unique action identifier",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True, if action was found and removed, false otherwise",
                "type": "Boolean"
            },
            "class": "eZ.BarView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-barview.js",
            "line": 136,
            "description": "Get an action view with the actionId",
            "itemtype": "method",
            "name": "getAction",
            "params": [
                {
                    "name": "actionId",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "eZ.ButtonActionView"
            },
            "class": "eZ.BarView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-barview.js",
            "line": 151,
            "description": "Handles container height update by rearranging the actions between\nmenus. We are filling-in the active menu, until the container becomes\nhigher than the available height, after that we are filling the\nhidden menu.",
            "itemtype": "method",
            "name": "_handleHeightUpdate",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade of the resize event",
                    "type": "Object"
                }
            ],
            "class": "eZ.BarView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-barview.js",
            "line": 183,
            "description": "Push last action from the ACTIVE_MENU_CLASS menu to the VIEW_MORE_MENU_CLASS menu",
            "itemtype": "method",
            "name": "_pushLastActionToViewMore",
            "access": "private",
            "tagname": "",
            "class": "eZ.BarView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-barview.js",
            "line": 202,
            "description": "Pull first available action from the VIEW_MORE_MENU_CLASS menu to the ACTIVE_MENU_CLASS menu",
            "itemtype": "method",
            "name": "_pullFirstActionFromViewMore",
            "access": "private",
            "tagname": "",
            "class": "eZ.BarView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-barview.js",
            "line": 221,
            "description": "Check do we need to show \"View More\" link. Do it, if needed.",
            "itemtype": "method",
            "name": "_checkViewMoreTrigger",
            "access": "private",
            "tagname": "",
            "class": "eZ.BarView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-barview.js",
            "line": 239,
            "description": "Returns scroll height of the action bar view container",
            "itemtype": "method",
            "name": "_getHeight",
            "return": {
                "description": "Scroll height of the action bar view container",
                "type": "Int"
            },
            "access": "private",
            "tagname": "",
            "class": "eZ.BarView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-barview.js",
            "line": 250,
            "description": "Returns scroll height of the first action in VIEW_MORE_MENU_CLASS menu",
            "itemtype": "method",
            "name": "_getFirstViewMoreActionHeight",
            "return": {
                "description": "Scroll height of the action",
                "type": "Int"
            },
            "access": "private",
            "tagname": "",
            "class": "eZ.BarView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-barview.js",
            "line": 261,
            "description": "Indicates if there are some actions in ACTIVE_MENU_CLASS menu",
            "itemtype": "method",
            "name": "_hasActiveActions",
            "return": {
                "description": "true if there are some actions in ACTIVE_MENU_CLASS menu, false otherwise.",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "eZ.BarView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-barview.js",
            "line": 272,
            "description": "Indicates if there are some actions in VIEW_MORE_MENU_CLASS menu",
            "itemtype": "method",
            "name": "_hasViewMoreActions",
            "return": {
                "description": "true if there are some actions in VIEW_MORE_MENU_CLASS menu, false otherwise.",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "eZ.BarView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-barview.js",
            "line": 283,
            "description": "Sorts the actions list by priority",
            "itemtype": "method",
            "name": "_sortActions",
            "access": "protected",
            "tagname": "",
            "class": "eZ.BarView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-barview.js",
            "line": 305,
            "description": "Event event handler for clicks on \"View More\" link",
            "itemtype": "method",
            "name": "_toggleViewMore",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade of the click event",
                    "type": "Object"
                }
            ],
            "class": "eZ.BarView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-barview.js",
            "line": 328,
            "description": "The actions list",
            "itemtype": "attribute",
            "name": "actionsList",
            "type": "Array",
            "default": "[]",
            "class": "eZ.BarView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-barview.js",
            "line": 339,
            "description": "Text on the \"View more\" action (shown when second part of the menu is hidden)",
            "itemtype": "attribute",
            "name": "viewMoreText",
            "default": "\"View more\"",
            "class": "eZ.BarView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-barview.js",
            "line": 349,
            "description": "Text on the \"View less\" action (shown when second part of the menu is shown)",
            "itemtype": "attribute",
            "name": "viewLessText",
            "default": "\"View less\"",
            "class": "eZ.BarView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-barview.js",
            "line": 359,
            "description": "Content which is currently loaded in content edit view",
            "itemtype": "attribute",
            "name": "content",
            "type": "Y.eZ.Content",
            "default": "{}",
            "required": 1,
            "class": "eZ.BarView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-confirmboxview.js",
            "line": 7,
            "description": "Provides the confirm box view class",
            "itemtype": "method",
            "name": "ez-confirmboxview",
            "class": "eZ.ConfirmBoxView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-confirmboxview.js",
            "line": 33,
            "description": "Tap event handler on the close links. It fires the `cancel` event.",
            "itemtype": "method",
            "name": "_cancel",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.ConfirmBoxView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-confirmboxview.js",
            "line": 45,
            "description": "Tap event handler on the confirm button. It fires the `confirm` event.",
            "itemtype": "method",
            "name": "_confirm",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.ConfirmBoxView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-confirmboxview.js",
            "line": 71,
            "description": "Updates the title in the rendered confirmBox",
            "itemtype": "method",
            "name": "_uiUpdateTitle",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ConfirmBoxView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-confirmboxview.js",
            "line": 82,
            "description": "Publishes the cancelDiscover and contentDiscovered events",
            "itemtype": "method",
            "name": "_publishEvents",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ConfirmBoxView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-confirmboxview.js",
            "line": 103,
            "description": "Updates the event handler for the given event",
            "itemtype": "method",
            "name": "_syncEventHandler",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "eventName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "oldHandler",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "newHandler",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.ConfirmBoxView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-confirmboxview.js",
            "line": 122,
            "description": "Resets the state of the confirmBox view",
            "itemtype": "method",
            "name": "_resetState",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ConfirmBoxView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-confirmboxview.js",
            "line": 145,
            "description": "Closes the confirmBox by firing the confirmBoxClose event",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_closeConfirmBox",
            "class": "eZ.ConfirmBoxView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-confirmboxview.js",
            "line": 156,
            "description": "Title of the confirmBox",
            "itemtype": "attribute",
            "name": "title",
            "default": "\"\"",
            "type": "{String}",
            "class": "eZ.ConfirmBoxView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-confirmboxview.js",
            "line": 167,
            "description": "Details of the confirmBox.\nThis attribute is supposed to contain an HTML fragment\nthat won't be escaped while rendering the confirm box view.",
            "itemtype": "attribute",
            "name": "details",
            "default": "\"\"",
            "type": "{String}",
            "class": "eZ.ConfirmBoxView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-confirmboxview.js",
            "line": 180,
            "description": "confirm event handler",
            "itemtype": "attribute",
            "name": "confirmHandler",
            "type": "{Function|Null}",
            "default": "null",
            "class": "eZ.ConfirmBoxView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-confirmboxview.js",
            "line": 191,
            "description": "cancel event handler",
            "itemtype": "attribute",
            "name": "cancelHandler",
            "type": "{Function|Null}",
            "default": "null",
            "class": "eZ.ConfirmBoxView",
            "module": "ez-barview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditformview.js",
            "line": 45,
            "description": "Sets the field edit views instance for the current content/contentType",
            "itemtype": "method",
            "name": "_setFieldEditViews",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ContentEditFormView",
            "module": "ez-contenteditformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditformview.js",
            "line": 90,
            "description": "The field edit views instances for the current content",
            "itemtype": "property",
            "name": "_fieldEditViews",
            "default": "[]",
            "type": "Array of {eZ.FieldEditView}",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ContentEditFormView",
            "module": "ez-contenteditformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditformview.js",
            "line": 101,
            "description": "Renders the form view",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "the view itself",
                "type": "eZ.ContentEditFormView"
            },
            "class": "eZ.ContentEditFormView",
            "module": "ez-contenteditformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditformview.js",
            "line": 115,
            "description": "Checks whether the form is valid or not",
            "itemtype": "method",
            "name": "isValid",
            "return": {
                "description": "Boolean"
            },
            "class": "eZ.ContentEditFormView",
            "module": "ez-contenteditformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditformview.js",
            "line": 131,
            "description": "Returns an array containing the field updated with the user input.\nAny undefined field is ignored.",
            "itemtype": "method",
            "name": "getFields",
            "return": {
                "description": "Array"
            },
            "class": "eZ.ContentEditFormView",
            "module": "ez-contenteditformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditformview.js",
            "line": 151,
            "description": "Makes sure the field edit views are correctly destroyed",
            "itemtype": "method",
            "name": "destructor",
            "class": "eZ.ContentEditFormView",
            "module": "ez-contenteditformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditformview.js",
            "line": 163,
            "description": "Renders the field edit views in the correct fieldset (field group)",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_renderFieldEditViews",
            "class": "eZ.ContentEditFormView",
            "module": "ez-contenteditformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditformview.js",
            "line": 181,
            "description": "Toggles collapsing for parent fieldSet with \"SlideUp/Down\" effect.",
            "itemtype": "method",
            "name": "_toggleFieldsetCollapse",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ContentEditFormView",
            "module": "ez-contenteditformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditformview.js",
            "line": 199,
            "description": "Form submit event handler to halt the form submission.",
            "itemtype": "method",
            "name": "_haltSubmit",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.ContentEditFormView",
            "module": "ez-contenteditformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditformview.js",
            "line": 210,
            "description": "The content type instance, which we use to build correct Field Groups",
            "itemtype": "attribute",
            "name": "contentType",
            "default": "{}",
            "type": "{eZ.ContentType}",
            "required": 1,
            "class": "eZ.ContentEditFormView",
            "module": "ez-contenteditformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditformview.js",
            "line": 222,
            "description": "The content instance",
            "itemtype": "attribute",
            "name": "content",
            "default": "{}",
            "type": "{eZ.Content}",
            "required": 1,
            "class": "eZ.ContentEditFormView",
            "module": "ez-contenteditformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditformview.js",
            "line": 234,
            "description": "The version handled in the form view",
            "itemtype": "attribute",
            "name": "version",
            "default": "{}",
            "type": "{eZ.Version}",
            "required": 1,
            "class": "eZ.ContentEditFormView",
            "module": "ez-contenteditformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditformview.js",
            "line": 246,
            "description": "The language code in which the content is edited",
            "itemtype": "attribute",
            "name": "languageCode",
            "type": "{String}",
            "required": 1,
            "class": "eZ.ContentEditFormView",
            "module": "ez-contenteditformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditformview.js",
            "line": 257,
            "description": "The logged in user",
            "itemtype": "attribute",
            "name": "user",
            "type": "{eZ.User}",
            "required": 1,
            "class": "eZ.ContentEditFormView",
            "module": "ez-contenteditformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 44,
            "description": "Initializer is called upon view's init\nCreating and managing child views inside it",
            "itemtype": "method",
            "name": "initializer",
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 66,
            "description": "`previewAction` event handler. It fires the `saveAction` draft so\nthat the draft is saved before trying to preview the version.",
            "itemtype": "method",
            "name": "_saveAndPreview",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 89,
            "description": "Event handler for the saveAction and publishAction events. It\nenriches the event facade with the updated fields and the form\nvalidity",
            "itemtype": "method",
            "name": "_handleSavePublish",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 105,
            "description": "Destructor is called upon view's destruction\nDestroying and cleaning up child views",
            "itemtype": "method",
            "name": "destructor",
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 116,
            "description": "Renders the content edit view",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "the view itself",
                "type": "eZ.ContentEditView"
            },
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 147,
            "description": "Sets the minimum height of the view",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_uiSetMinHeight",
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 159,
            "description": "Returns the title of the page when the content edit view is the\nactive view",
            "itemtype": "method",
            "name": "getTitle",
            "return": {
                "description": "String"
            },
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 170,
            "description": "Set current input focus on the view",
            "itemtype": "method",
            "name": "setFocus",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 180,
            "description": "Shows the technical infos of the content.",
            "itemtype": "method",
            "name": "_showDetails",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 190,
            "description": "Hides the technical infos of the content.         *",
            "itemtype": "method",
            "name": "_hideDetails",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 200,
            "description": "Event event handler for the close link in the content edit view",
            "itemtype": "method",
            "name": "_closeView",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade of the tap event",
                    "type": "Object"
                }
            ],
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 208,
            "description": "Fired when the close link is clicked",
            "itemtype": "event",
            "name": "closeView",
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 217,
            "description": "Event event handler for any key pressed within the content edit view",
            "itemtype": "method",
            "name": "_handleKeyboard",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade of the keyboard event",
                    "type": "Object"
                }
            ],
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 231,
            "description": "Returns whether the current browser is a touch device or not",
            "itemtype": "method",
            "name": "_isTouch",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 242,
            "description": "Tap event handler on change language button. It fires `changeLanguage` event.",
            "itemtype": "method",
            "name": "_changeLanguage",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 252,
            "description": "Fired when the change language link was tapped",
            "itemtype": "event",
            "name": "changeLanguage",
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 260,
            "description": "Sets language indicator",
            "itemtype": "method",
            "name": "setLanguageIndicator",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "languageCode",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 275,
            "description": "The content being edited",
            "itemtype": "attribute",
            "name": "content",
            "default": "{}",
            "required": 1,
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 286,
            "description": "The version being edited",
            "itemtype": "attribute",
            "name": "content",
            "default": "{}",
            "required": 1,
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 297,
            "description": "The content type of the content being edited",
            "itemtype": "attribute",
            "name": "contentType",
            "default": "{}",
            "required": 1,
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 308,
            "description": "The main location of the content being edited",
            "itemtype": "attribute",
            "name": "mainLocation",
            "default": "{}",
            "required": 1,
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 319,
            "description": "The owner of the content being edited",
            "itemtype": "attribute",
            "name": "owner",
            "default": "{}",
            "required": 1,
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 330,
            "description": "The logged in user",
            "itemtype": "attribute",
            "name": "user",
            "type": "{eZ.User}",
            "required": 1,
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 339,
            "description": "The ContentEditFormView (by default) instance which will be used to render form",
            "itemtype": "attribute",
            "name": "formView",
            "default": "new Y.eZ.ContentEditFormView()",
            "type": "{eZ.ContentEditFormView}",
            "required": 1,
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 361,
            "description": "The EditActionBarView (by default) instance",
            "itemtype": "attribute",
            "name": "actionBar",
            "default": "new Y.eZ.EditActionBarView()",
            "type": "{eZ.EditActionBarView}",
            "required": 1,
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenteditview.js",
            "line": 381,
            "description": "The language code in which the content is edited.",
            "itemtype": "attribute",
            "name": "languageCode",
            "type": "{String}",
            "required": 1,
            "class": "eZ.ContentEditView",
            "module": "ez-contenteditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenttypeselectorview.js",
            "line": 49,
            "description": "Filters the displayed content types by the selected content type\ngroups.",
            "itemtype": "method",
            "name": "_filterByGroups",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ContentTypeSelectorView",
            "module": "ez-contenttypeselector",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenttypeselectorview.js",
            "line": 60,
            "description": "Makes sure there's always at least one content type groups checked by\ndisabling the selected checkbox if there's only one",
            "itemtype": "method",
            "name": "_handleCheckboxState",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ContentTypeSelectorView",
            "module": "ez-contenttypeselector",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenttypeselectorview.js",
            "line": 75,
            "description": "Disables the checked checkbox",
            "itemtype": "method",
            "name": "_disableSelectedCheckbox",
            "access": "private",
            "tagname": "",
            "class": "eZ.ContentTypeSelectorView",
            "module": "ez-contenttypeselector",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenttypeselectorview.js",
            "line": 85,
            "description": "Enables the checkboxes",
            "itemtype": "method",
            "name": "_enableCheckboxes",
            "access": "private",
            "tagname": "",
            "class": "eZ.ContentTypeSelectorView",
            "module": "ez-contenttypeselector",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenttypeselectorview.js",
            "line": 95,
            "description": "Returns an array of the content types in the selected content type\ngroups. This array is sorted by name of the content types",
            "itemtype": "method",
            "name": "_getContentTypes",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ContentTypeSelectorView",
            "module": "ez-contenttypeselector",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenttypeselectorview.js",
            "line": 122,
            "description": "Renders the content type selector view",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "the view itself",
                "type": "eZ.ContentTypeSelectorView"
            },
            "class": "eZ.ContentTypeSelectorView",
            "module": "ez-contenttypeselector",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenttypeselectorview.js",
            "line": 148,
            "description": "Renders the filter view",
            "itemtype": "method",
            "name": "_renderFilterView",
            "class": "eZ.ContentTypeSelectorView",
            "module": "ez-contenttypeselector",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenttypeselectorview.js",
            "line": 181,
            "description": "Fires the `createContent` event",
            "itemtype": "method",
            "name": "_createContentEvent",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "typeId",
                    "description": "the content type id",
                    "type": "String"
                }
            ],
            "class": "eZ.ContentTypeSelectorView",
            "module": "ez-contenttypeselector",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenttypeselectorview.js",
            "line": 201,
            "description": "keeps the `selectedGroupIds` attribute and the checked content type\ngroups id in sync",
            "itemtype": "method",
            "name": "_syncSelectedIds",
            "access": "protected",
            "tagname": "",
            "class": "eZ.ContentTypeSelectorView",
            "module": "ez-contenttypeselector",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenttypeselectorview.js",
            "line": 212,
            "description": "Returns the selected content type groups id from the DOM",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getSelectedIds",
            "return": {
                "description": "array of the content groups id (string)",
                "type": "Array"
            },
            "class": "eZ.ContentTypeSelectorView",
            "module": "ez-contenttypeselector",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenttypeselectorview.js",
            "line": 229,
            "description": "Returns a NodeList containing the content type groups checkbox. If\n`checked` is true, only the checked checkbox are returned.",
            "itemtype": "method",
            "name": "_getCheckboxes",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "NodeList"
            },
            "class": "eZ.ContentTypeSelectorView",
            "module": "ez-contenttypeselector",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenttypeselectorview.js",
            "line": 244,
            "description": "Stores the list of content type groups",
            "itemtype": "attribute",
            "name": "contentTypeGroups",
            "type": "{Array}",
            "class": "eZ.ContentTypeSelectorView",
            "module": "ez-contenttypeselector",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenttypeselectorview.js",
            "line": 252,
            "description": "A SelectionFilterView instance that displays the available\ncontent types. This attribute is only filled after the view is\nrendered.",
            "itemtype": "attribute",
            "name": "filter",
            "readonly": "",
            "type": "{eZ.SelectionFilterView}",
            "class": "eZ.ContentTypeSelectorView",
            "module": "ez-contenttypeselector",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-contenttypeselectorview.js",
            "line": 265,
            "description": "The list of the selected content type groups ids",
            "itemtype": "attribute",
            "name": "selectedGroupIds",
            "type": "{Array}",
            "default": "an array containing the id of the 'Content' group",
            "class": "eZ.ContentTypeSelectorView",
            "module": "ez-contenttypeselector",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-dashboardview.js",
            "line": 28,
            "description": "Renders the dashboard view",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "the view itself",
                "type": "eZ.DashboardView"
            },
            "class": "eZ.DashboardView",
            "module": "ez-dashboardview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-dashboardview.js",
            "line": 41,
            "description": "Sets the source of the iframe to the value of the iframeSource attribute.",
            "itemtype": "method",
            "name": "_setIFrameSource",
            "access": "private",
            "tagname": "",
            "class": "eZ.DashboardView",
            "module": "ez-dashboardview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-dashboardview.js",
            "line": 53,
            "description": "Stores the iframe Source",
            "itemtype": "attribute",
            "name": "iframeSource",
            "type": "String",
            "default": "'http://ez.no/in-product/eZ-Platform'",
            "readonly": "",
            "class": "eZ.DashboardView",
            "module": "ez-dashboardview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-discoverybarview.js",
            "line": 23,
            "description": "Renders the discovery bar view",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "the view it self",
                "type": "eZ.DiscoveryBarView"
            },
            "class": "eZ.DiscoveryBarView",
            "module": "ez-discoverybarview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-discoverybarview.js",
            "line": 35,
            "description": "An array of {{#crossLink\n\"eZ.ButtonActionView\"}}eZ.ButtonActionView{{/crossLink}}",
            "itemtype": "attribute",
            "name": "actionsList",
            "type": "Array",
            "class": "eZ.DiscoveryBarView",
            "module": "ez-discoverybarview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-editactionbarview.js",
            "line": 23,
            "description": "Makes sure for that new action gets and updated version of the version",
            "itemtype": "method",
            "name": "initializer",
            "class": "eZ.EditActionBarView",
            "module": "ez-editactionbarview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-editactionbarview.js",
            "line": 35,
            "description": "Sets the version on all the action list",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_setVersion",
            "params": [
                {
                    "name": "version",
                    "description": "",
                    "type": "eZ.Version"
                }
            ],
            "class": "eZ.EditActionBarView",
            "module": "ez-editactionbarview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-editactionbarview.js",
            "line": 48,
            "description": "Sets the languageCode on all the action list",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_setLanguageCode",
            "params": [
                {
                    "name": "languageCode",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "eZ.EditActionBarView",
            "module": "ez-editactionbarview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-editactionbarview.js",
            "line": 62,
            "description": "The edit bar action list filled with the default button action\nview list",
            "itemtype": "attribute",
            "name": "actionsList",
            "type": "Array",
            "class": "eZ.EditActionBarView",
            "module": "ez-editactionbarview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-editactionbarview.js",
            "line": 115,
            "description": "The content type of the content being edited",
            "itemtype": "attribute",
            "name": "contentType",
            "type": "{eZ.ContentType}",
            "required": 1,
            "class": "eZ.EditActionBarView",
            "module": "ez-editactionbarview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-editactionbarview.js",
            "line": 124,
            "description": "The version currently being edited",
            "itemtype": "attribute",
            "name": "version",
            "type": "{eZ.Version}",
            "default": "{}",
            "class": "eZ.EditActionBarView",
            "module": "ez-editactionbarview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-editactionbarview.js",
            "line": 138,
            "description": "The language code of the content currently edited",
            "itemtype": "attribute",
            "name": "languageCode",
            "type": "{String}",
            "class": "eZ.EditActionBarView",
            "module": "ez-editactionbarview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-editpreviewview.js",
            "line": 30,
            "description": "Returns the version to use to generate the preview. If the version\nwas not saved yet, we are actually generating the preview to the\ncurrent version.",
            "itemtype": "method",
            "name": "_getPreviewedVersion",
            "return": {
                "description": "",
                "type": "eZ.Version"
            },
            "class": "eZ.EditPreviewView",
            "module": "ez-editpreviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-editpreviewview.js",
            "line": 45,
            "description": "Renders the edit preview",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "the view itself",
                "type": "eZ.EditPreview"
            },
            "class": "eZ.EditPreviewView",
            "module": "ez-editpreviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-editpreviewview.js",
            "line": 70,
            "description": "Showing the edit preview view with a nice transition",
            "itemtype": "method",
            "name": "show",
            "class": "eZ.EditPreviewView",
            "module": "ez-editpreviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-editpreviewview.js",
            "line": 90,
            "description": "Event event handler for the \"close preview\" link in the edit preview\nHiding the edit preview with a nice transition",
            "itemtype": "method",
            "name": "_editPreviewHide",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade of the tap event",
                    "type": "Object"
                }
            ],
            "class": "eZ.EditPreviewView",
            "module": "ez-editpreviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-editpreviewview.js",
            "line": 101,
            "description": "Fired when the \"close preview\" link is clicked",
            "itemtype": "event",
            "name": "editPreviewHide",
            "class": "eZ.EditPreviewView",
            "module": "ez-editpreviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-editpreviewview.js",
            "line": 109,
            "description": "Checks whether the preview is hidden",
            "itemtype": "method",
            "name": "isHidden",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.EditPreviewView",
            "module": "ez-editpreviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-editpreviewview.js",
            "line": 120,
            "description": "Preview parameters for different modes",
            "itemtype": "attribute",
            "name": "previewModes",
            "default": "[]",
            "required": 1,
            "class": "eZ.EditPreviewView",
            "module": "ez-editpreviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-editpreviewview.js",
            "line": 147,
            "description": "Mode of the actual preview to be rendered",
            "itemtype": "attribute",
            "name": "currentModeId",
            "default": "\"mobile\"",
            "required": 1,
            "class": "eZ.EditPreviewView",
            "module": "ez-editpreviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-editpreviewview.js",
            "line": 158,
            "description": "Content which should be previewed",
            "itemtype": "attribute",
            "name": "content",
            "type": "Y.eZ.Content",
            "default": "{}",
            "required": 1,
            "class": "eZ.EditPreviewView",
            "module": "ez-editpreviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-editpreviewview.js",
            "line": 170,
            "description": "The version which should be previewed",
            "itemtype": "attribute",
            "name": "version",
            "type": "eZ.Version",
            "default": "{}",
            "required": 1,
            "class": "eZ.EditPreviewView",
            "module": "ez-editpreviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-editpreviewview.js",
            "line": 182,
            "description": "The languageCode of the content previewed",
            "itemtype": "attribute",
            "name": "languageCode",
            "type": "String",
            "required": 1,
            "class": "eZ.EditPreviewView",
            "module": "ez-editpreviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 39,
            "description": "Contains the default content of the error message placeholder. It\nis used to restore the error placeholder when the view switches\nfrom the error state to the normal state.",
            "itemtype": "property",
            "name": "_errorDefaultContent",
            "access": "protected",
            "tagname": "",
            "type": "string",
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 50,
            "description": "Contains the class to add/remove on/from the container when an error\nis detected.",
            "itemtype": "property",
            "name": "_errorClass",
            "access": "protected",
            "tagname": "",
            "type": "string",
            "default": "'is-error'",
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 61,
            "description": "Default implementation of the field edit view render. By default, it\ninjects the field definition, the field, the content and the content\ntype",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "",
                "type": "eZ.FieldEditView"
            },
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 96,
            "description": "Returns an object containing the additional variables needed in the\nfield edit view template. The default implementation returns an empty\nobject",
            "itemtype": "method",
            "name": "_variables",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "Object"
            },
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 109,
            "description": "Reflects in the UI the errorStatus change",
            "itemtype": "method",
            "name": "_errorUI",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "the event facade of the errorStatusChange event",
                    "type": "Object"
                }
            ],
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 134,
            "description": "Sets the error message in UI",
            "itemtype": "method",
            "name": "_setErrorMessage",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "msg",
                    "description": "the error message",
                    "type": "String"
                }
            ],
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 145,
            "description": "Check if the fieldValue is valid, and if it is, hide de description",
            "itemtype": "method",
            "name": "_checkValidityDescription",
            "access": "protected",
            "tagname": "",
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 157,
            "description": "Show the field description",
            "itemtype": "method",
            "name": "_showDescription",
            "access": "protected",
            "tagname": "",
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 175,
            "description": "Set the description tooltip position.\nThe tooltip position is modified by it's height and is relative to the field input.",
            "itemtype": "method",
            "name": "_setTooltipPosition",
            "access": "protected",
            "tagname": "",
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 198,
            "description": "Hide the field description or the tooltip",
            "itemtype": "method",
            "name": "_hideDescription",
            "access": "protected",
            "tagname": "",
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 218,
            "description": "Custom initializer method, it sets the event handling on the\nerrorStatusChange event",
            "itemtype": "method",
            "name": "initializer",
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 226,
            "description": "Set if the fieldDefinition description is active or not.",
            "itemtype": "property",
            "name": "_handleFieldDescriptionVisibility",
            "access": "protected",
            "tagname": "",
            "type": "boolean",
            "default": "true",
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 236,
            "description": "Set if the fieldDefinition description has the standard display.\nStandard means it will use the ez-standard-description CSS rule from fieldedit.css",
            "itemtype": "property",
            "name": "_useStandardFieldDefinitionDescription",
            "access": "protected",
            "tagname": "",
            "type": "boolean",
            "default": "true",
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 247,
            "description": "Contains the initial X an Y position of a tooltip\nThis will be used to restore its position when vanishing",
            "itemtype": "property",
            "name": "_tooltipInitialPosition",
            "access": "protected",
            "tagname": "",
            "type": "array",
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 262,
            "description": "Checks whether the current user input is valid or not. This methood\nshould be implemented by each field edit view and is supposed to\nset the `errorStatus` attribute.\n\nThe default implementation does nothing.",
            "itemtype": "method",
            "name": "validate",
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 274,
            "description": "Returns whether the view is currently in a valid state",
            "itemtype": "method",
            "name": "isValid",
            "return": {
                "description": "boolean"
            },
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 284,
            "description": "Returns the value of the field from the current user input. This\nmethod should be implemented in each field edit view.\n\nThe default implementation returns undefined. Returning undefined\nmeans that the field should be ignored when saving the content.",
            "itemtype": "method",
            "name": "_getFieldValue",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "mixed"
            },
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 302,
            "description": "Returns an updated version of the field containing a field value\nreflecting the current user input. Returns undefined when the field\nvalue should not be taken into account.",
            "itemtype": "method",
            "name": "getField",
            "return": {
                "description": "Object or undefined"
            },
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 330,
            "description": "Returns whether the current browser is a touch device or not",
            "itemtype": "method",
            "name": "_isTouch",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 342,
            "description": "The validation error status. A truthy value means there's an\nerror. Setting this attribute to a non empty string will add this\nstring as an error message (under the field name by default)",
            "itemtype": "attribute",
            "name": "errorStatus",
            "type": "mixed",
            "default": "false",
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 355,
            "description": "The field definition of the field to edit",
            "itemtype": "attribute",
            "name": "fieldDefinition",
            "type": "Object",
            "default": "null",
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 366,
            "description": "The field to edit",
            "itemtype": "attribute",
            "name": "field",
            "type": "Object",
            "default": "null",
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 377,
            "description": "The content the field to edit belongs to",
            "itemtype": "attribute",
            "name": "content",
            "type": "{eZ.Content}",
            "default": "null",
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 388,
            "description": "The version the field to edit belongs to",
            "itemtype": "attribute",
            "name": "version",
            "type": "{eZ.Version}",
            "default": "null",
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 399,
            "description": "The logged in user",
            "itemtype": "attribute",
            "name": "user",
            "type": "{eZ.User}",
            "required": 1,
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 408,
            "description": "The content type of the content",
            "itemtype": "attribute",
            "name": "contentType",
            "type": "{eZ.ContentType}",
            "default": "null",
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 419,
            "description": "The language code in which the content is edited.",
            "itemtype": "attribute",
            "name": "languageCode",
            "type": "{String}",
            "default": "null",
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 431,
            "description": "Registry of all registered field edit views indexed by field type\nidentifier",
            "itemtype": "property",
            "name": "",
            "access": "private",
            "tagname": "",
            "type": "Object",
            "default": "{}",
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 442,
            "description": "Registers a field edit view for the given field type identifier",
            "itemtype": "method",
            "name": "registerFieldEditView",
            "static": 1,
            "params": [
                {
                    "name": "fieldTypeIdentifier",
                    "description": "the field type identifier\n                (ezstring, eztext, ...)",
                    "type": "String"
                },
                {
                    "name": "editView",
                    "description": "the constructor function of the field edit\n                  view",
                    "type": "Function"
                }
            ],
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldeditview.js",
            "line": 456,
            "description": "Returns the field edit view constructor for the given field type identifier.\nThrow a TypeError if no field edit view is registered for it",
            "itemtype": "method",
            "name": "getFieldEditView",
            "static": 1,
            "params": [
                {
                    "name": "fieldTypeIdentifier",
                    "description": "the field type identifier\n                (ezstring, eztext, ...)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "eZ.FieldEditView",
            "module": "ez-fieldeditview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldview.js",
            "line": 26,
            "description": "Renders the field view. By default, it injects the field,\nthe fieldDefinition and the value of the field.",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "the view it self",
                "type": "Y.eZ.FieldView"
            },
            "class": "eZ.FieldView",
            "module": "ez-fieldview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldview.js",
            "line": 56,
            "description": "Overrides the eZ.TemplateBasedView implementation to be make sure the\nall field views have the correct class on the container even when\nusing a custom template.\nNote: the render method adds a class based on the field type being\nhandled allowing to style the field views per field type.",
            "itemtype": "method",
            "name": "_generateViewClassName",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.FieldView",
            "module": "ez-fieldview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldview.js",
            "line": 71,
            "description": "Returns the value to display",
            "itemtype": "method",
            "name": "_getFieldValue",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.FieldView",
            "module": "ez-fieldview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldview.js",
            "line": 82,
            "description": "Checks whether the field value is empty",
            "itemtype": "method",
            "name": "_isFieldEmpty",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.FieldView",
            "module": "ez-fieldview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldview.js",
            "line": 93,
            "description": "Returns an object containing the additional variables needed in the\nfield edit view template. The default implementation returns an empty\nobject",
            "itemtype": "method",
            "name": "_variables",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "Object"
            },
            "class": "eZ.FieldView",
            "module": "ez-fieldview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldview.js",
            "line": 108,
            "description": "The field definition of the displayed field",
            "itemtype": "attribute",
            "name": "fieldDefinition",
            "type": "{}",
            "class": "eZ.FieldView",
            "module": "ez-fieldview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldview.js",
            "line": 116,
            "description": "The field being displayed",
            "itemtype": "attribute",
            "name": "field",
            "type": "{}",
            "class": "eZ.FieldView",
            "module": "ez-fieldview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldview.js",
            "line": 125,
            "description": "Hash containing the custom field view implementations for the\ndifferent field type identifier",
            "itemtype": "property",
            "name": "REGISTRY",
            "access": "private",
            "tagname": "",
            "static": 1,
            "default": "{}",
            "class": "eZ.FieldView",
            "module": "ez-fieldview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldview.js",
            "line": 136,
            "description": "Registers a custom field view implementation for the given field type\nidentifier.",
            "itemtype": "method",
            "name": "registerFieldView",
            "static": 1,
            "params": [
                {
                    "name": "fieldTypeIdentifier",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "view",
                    "description": "the constructor function of the custom field\nview implementation",
                    "type": "Function"
                }
            ],
            "class": "eZ.FieldView",
            "module": "ez-fieldview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-fieldview.js",
            "line": 150,
            "description": "Returns the view constructor for the given field type identifier. If\nno custom implementation is registered, the Y.eZ.FieldView\nconstructor is returned",
            "itemtype": "method",
            "name": "getFieldView",
            "static": 1,
            "params": [
                {
                    "name": "fieldTypeIdentifier",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the constructor of the field view",
                "type": "Function"
            },
            "class": "eZ.FieldView",
            "module": "ez-fieldview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 86,
            "description": "Tap event handler on language from languages list",
            "itemtype": "method",
            "name": "_selectLanguage",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 99,
            "description": "Tap event handler on language from base languages list",
            "itemtype": "method",
            "name": "_selectBaseLanguage",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 112,
            "description": "Tap event handler on switcher dictating if new translation will base\non already existing one or not",
            "itemtype": "method",
            "name": "_toggleBaseTranslation",
            "access": "protected",
            "tagname": "",
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 123,
            "description": "Publishes the cancelLanguageSelection and languageSelected events",
            "itemtype": "method",
            "name": "_publishEvents",
            "access": "protected",
            "tagname": "",
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 144,
            "description": "languageSelectedHandlerChange and cancelLanguageSelectionHandlerChange event\nhandler. It makes sure the potential previous event handler are\nremoved and it adds the new handlers if any.",
            "itemtype": "method",
            "name": "_syncEventHandler",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "eventName",
                    "description": "event name",
                    "type": "String"
                },
                {
                    "name": "oldHandler",
                    "description": "the previous event handler",
                    "type": "Function|Null"
                },
                {
                    "name": "newHandler",
                    "description": "the new event handler",
                    "type": "Function|Null"
                }
            ],
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 164,
            "description": "Resets the state of the languageSelectionBox view",
            "itemtype": "method",
            "name": "_resetState",
            "access": "protected",
            "tagname": "",
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 176,
            "description": "Highlights the selected language",
            "itemtype": "method",
            "name": "_uiHighlightLanguage",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "languageCode",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "baseLanguage",
                    "description": "defines if language should be highlighted in base languages list",
                    "type": "Boolean"
                }
            ],
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 204,
            "description": "Sets the state for base translation checkbox",
            "itemtype": "method",
            "name": "_uiBaseTranslationState",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "baseTranslation",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 223,
            "description": "Sets visibility of whole part containing base translations",
            "itemtype": "method",
            "name": "_uiSetBaseTranslationVisibility",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "canBaseTranslation",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 240,
            "description": "`selectedLanguageCodeChange` event handler. It enables/disables the button\ndepending on new translation selection",
            "itemtype": "method",
            "name": "_uiSetConfirmButtonState",
            "access": "protected",
            "tagname": "",
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 272,
            "description": "Cancel the languageSelectionBox by firing the `cancelLanguageSelect` event",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_cancelLanguageSelection",
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 279,
            "description": "Fired when language selection is being cancelled",
            "itemtype": "event",
            "name": "cancelLanguageSelection",
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 287,
            "description": "Confirm the languageSelectionBox's selection by firing the `languageSelected` event",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_confirmLanguageSelection",
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 300,
            "description": "Fired when language selection is being confirmed",
            "itemtype": "event",
            "name": "languageSelected",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "baseTranslation",
                            "description": "defines if translation will be based on already existing language",
                            "type": "Boolean"
                        },
                        {
                            "name": "selectedLanguageCode",
                            "description": "language code of selected language",
                            "type": "String"
                        },
                        {
                            "name": "selectedBaseLanguageCode",
                            "description": "language on which translation will be based",
                            "type": "Null|String"
                        }
                    ]
                }
            ],
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 312,
            "description": "Returns list of languages that are available but are not included in list passed\nin `referenceLanguageList` attribute",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getNewTranslations",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 330,
            "description": "Title of the languageSelectionBox",
            "itemtype": "attribute",
            "name": "title",
            "default": "\"\"",
            "type": "{String}",
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 341,
            "description": "languageSelected event handler",
            "itemtype": "attribute",
            "name": "languageSelectedHandler",
            "type": "{Function|Null}",
            "default": "null",
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 352,
            "description": "cancelLanguageSelection event handler",
            "itemtype": "attribute",
            "name": "cancelLanguageSelectionHandler",
            "type": "{Function|Null}",
            "default": "null",
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 363,
            "description": "List of active system languages. List contains language objects indexed by language code.",
            "itemtype": "attribute",
            "name": "systemLanguageList",
            "type": "{Object}",
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 371,
            "description": "List of available new translations",
            "itemtype": "attribute",
            "name": "newTranslations",
            "type": "{Array}",
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 381,
            "description": "List of languages used as reference. When in translation mode, this is the list of existing\ntranslations and it is displayed as list of base languages on which new translation can be based.\nIf not in translation mode, this is the list of languages that can be picked in.",
            "itemtype": "attribute",
            "name": "referenceLanguageList",
            "type": "{Array|Null}",
            "default": "null",
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 394,
            "description": "Enables or disables possibility of based new translation on already existing one",
            "itemtype": "attribute",
            "name": "canBaseTranslation",
            "type": "{Boolean}",
            "default": "true",
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 405,
            "description": "Defines if new translation will be based on already existing one",
            "itemtype": "attribute",
            "name": "baseTranslation",
            "type": "{Boolean}",
            "default": "false",
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 416,
            "description": "Selected language from new translations list",
            "itemtype": "attribute",
            "name": "selectedLanguageCode",
            "type": "{string|Null}",
            "default": "null",
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 427,
            "description": "Selected language from existing translations list on which\nnew translation will be based",
            "itemtype": "attribute",
            "name": "selectedBaseLanguageCode",
            "type": "{string|Null}",
            "default": "null",
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageselectionboxview.js",
            "line": 439,
            "description": "Translation mode flag. In translation mode, the referenceLanguageList attribute holds\nthe list of existing translations, so the language selection box will allow to select\nthe system language list but not yet the reference list. By default, the translation\nmode is disabled, the user will be able to select a language from the list in the\nreferenceLanguageList attribute.",
            "itemtype": "attribute",
            "name": "translationMode",
            "type": "{Boolean}",
            "default": "false",
            "class": "eZ.LanguageSelectionBoxView",
            "module": "ez-languageselectionboxview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageswitcherview.js",
            "line": 33,
            "description": "Renders the language switcher view",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "the view itself",
                "type": "eZ.LanguageSwitcherView"
            },
            "class": "eZ.LanguageSwitcherView",
            "module": "ez-languageswitcherview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageswitcherview.js",
            "line": 51,
            "description": "Returns array with translations of content other than already being viewed.\nIf conten doesn't have got other translations than the one already being viewed,\nthen empty array is returned.",
            "itemtype": "method",
            "name": "_getOtherTranslationsList",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "other translations",
                "type": "Array"
            },
            "class": "eZ.LanguageSwitcherView",
            "module": "ez-languageswitcherview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageswitcherview.js",
            "line": 69,
            "description": "expandedChange event handler to define or detach the click outside\nevent handler so that the view gets hidden when the user click\nsomewhere else",
            "itemtype": "method",
            "name": "_setClickOutsideEventHandler",
            "params": [
                {
                    "name": "e",
                    "description": "event facade of the expandedChange event",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.LanguageSwitcherView",
            "module": "ez-languageswitcherview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageswitcherview.js",
            "line": 88,
            "description": "Hides the expanded view",
            "itemtype": "method",
            "name": "_hideView",
            "access": "protected",
            "tagname": "",
            "class": "eZ.LanguageSwitcherView",
            "module": "ez-languageswitcherview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageswitcherview.js",
            "line": 98,
            "description": "Toggles the expanded state",
            "itemtype": "method",
            "name": "_toggleExpanded",
            "access": "protected",
            "tagname": "",
            "class": "eZ.LanguageSwitcherView",
            "module": "ez-languageswitcherview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageswitcherview.js",
            "line": 110,
            "description": "The content associated the current location",
            "itemtype": "attribute",
            "name": "content",
            "type": "Y.eZ.Content",
            "writeonce": "",
            "class": "eZ.LanguageSwitcherView",
            "module": "ez-languageswitcherview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageswitcherview.js",
            "line": 121,
            "description": "The current location",
            "itemtype": "attribute",
            "name": "location",
            "type": "Y.eZ.Location",
            "writeonce": "",
            "class": "eZ.LanguageSwitcherView",
            "module": "ez-languageswitcherview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-languageswitcherview.js",
            "line": 132,
            "description": "Language code of language currently active for the current location",
            "itemtype": "attribute",
            "name": "languageCode",
            "type": "String",
            "writeonce": "",
            "class": "eZ.LanguageSwitcherView",
            "module": "ez-languageswitcherview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewtabview.js",
            "line": 26,
            "description": "The title of the tab displayed in the label lists",
            "itemtype": "attribute",
            "name": "title",
            "type": "{String}",
            "required": 1,
            "class": "eZ.LocationViewTabView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewtabview.js",
            "line": 35,
            "description": "The identifier of the tab.",
            "itemtype": "attribute",
            "name": "identifier",
            "type": "{String}",
            "required": 1,
            "class": "eZ.LocationViewTabView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewtabview.js",
            "line": 44,
            "description": "The priority of the tab in the list.",
            "itemtype": "attribute",
            "name": "priority",
            "type": "{Number}",
            "default": "0",
            "class": "eZ.LocationViewTabView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewtabview.js",
            "line": 55,
            "description": "The current selected state of the tab. It becomes true when the\ntab is visible.",
            "itemtype": "attribute",
            "name": "selected",
            "type": "{Boolean}",
            "default": "false",
            "class": "eZ.LocationViewTabView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 37,
            "description": "Event handler for the minimizeActionBarAction event",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_handleMinimizeActionBar",
            "class": "eZ.LocationViewView",
            "module": "ez-locationviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 47,
            "description": "Converts each location in the path to a plain object representation",
            "itemtype": "method",
            "name": "_pathToJSON",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "Array"
            },
            "class": "eZ.LocationViewView",
            "module": "ez-locationviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 60,
            "description": "Renders the location view",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "the view itself",
                "type": "eZ.LocationViewView"
            },
            "class": "eZ.LocationViewView",
            "module": "ez-locationviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 91,
            "description": "Renders the tab views in their container.",
            "itemtype": "method",
            "name": "_renderTabViews",
            "access": "protected",
            "tagname": "",
            "class": "eZ.LocationViewView",
            "module": "ez-locationviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 107,
            "description": "Returns the tabs list suitable for the template. Each element in the\nreturned array is an object containing the title, the identifier and\nwhether the tab is selected.",
            "itemtype": "method",
            "name": "_getTabsList",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "eZ.LocationViewView",
            "module": "ez-locationviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 129,
            "description": "`changeTab` event handler. It synchronizes the `selectedTab`\nattribute.",
            "itemtype": "method",
            "name": "_syncSelectedTab",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "the changeTab event facade",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.LocationViewView",
            "module": "ez-locationviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 141,
            "description": "`selectedTabChange` event handler. It makes sure the the `selectedTab`\nattribute and the tab view's `selected` attribute are in sync.",
            "itemtype": "method",
            "name": "_syncTabSelectedAttr",
            "access": "protected",
            "tagname": "",
            "class": "eZ.LocationViewView",
            "module": "ez-locationviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 154,
            "description": "Returns the title of the page when the location view is the active\nview.",
            "itemtype": "method",
            "name": "getTitle",
            "return": {
                "description": "String"
            },
            "class": "eZ.LocationViewView",
            "module": "ez-locationviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 169,
            "description": "Sets the minimum height of the view",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_uiSetMinHeight",
            "class": "eZ.LocationViewView",
            "module": "ez-locationviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 183,
            "description": "Adds a tabView to the list of tabs.",
            "itemtype": "method",
            "name": "addTabView",
            "params": [
                {
                    "name": "tabView",
                    "description": "",
                    "type": "eZ.LocationViewTabView"
                }
            ],
            "class": "eZ.LocationViewView",
            "module": "ez-locationviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 199,
            "description": "Removes a tab from its identifier. When found, the location view is\nremoved from the bubble targets list of the tabView.",
            "itemtype": "method",
            "name": "removeTabView",
            "params": [
                {
                    "name": "identifier",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the removed tab view or null",
                "type": "eZ.LocationViewTabView|Null"
            },
            "class": "eZ.LocationViewView",
            "module": "ez-locationviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 237,
            "description": "The location being rendered",
            "itemtype": "attribute",
            "name": "location",
            "type": "Y.eZ.Location",
            "writeonce": "",
            "class": "eZ.LocationViewView",
            "module": "ez-locationviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 248,
            "description": "The content associated the current location",
            "itemtype": "attribute",
            "name": "content",
            "type": "Y.eZ.Content",
            "writeonce": "",
            "class": "eZ.LocationViewView",
            "module": "ez-locationviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 259,
            "description": "The content type of the content at the current location",
            "itemtype": "attribute",
            "name": "contentType",
            "type": "Y.eZ.ContentType",
            "writeonce": "",
            "class": "eZ.LocationViewView",
            "module": "ez-locationviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 270,
            "description": "The path from the root location to the current location. Each\nentry of the path consists of the location.",
            "itemtype": "attribute",
            "name": "path",
            "type": "Array",
            "writeonce": "",
            "class": "eZ.LocationViewView",
            "module": "ez-locationviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 282,
            "description": "Language code of language currently active for the current location",
            "itemtype": "attribute",
            "name": "languageCode",
            "type": "String",
            "class": "eZ.LocationViewView",
            "module": "ez-locationviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 290,
            "description": "The action bar instance, by default an instance {{#crossLink\n\"eZ.ActionBarView\"}}eZ.ActionBarView{{/crossLink}}",
            "itemtype": "attribute",
            "name": "actionBar",
            "type": "eZ.BarView",
            "class": "eZ.LocationViewView",
            "module": "ez-locationviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 308,
            "description": "The list of the Location View tab Views.\nDo NOT change this attribute directly, use addTabView or\nremoveTabView to handle the tabs list.",
            "itemtype": "attribute",
            "name": "tabs",
            "type": "{Array} of {eZ.LocationViewTabView}",
            "writeonce": "",
            "class": "eZ.LocationViewView",
            "module": "ez-locationviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 359,
            "description": "The subitem list view or null if the content (type) is not\nconfigured to be a container.",
            "itemtype": "attribute",
            "name": "subitemList",
            "type": "{eZ.SubitemListView|Null}",
            "writeonce": "",
            "class": "eZ.LocationViewView",
            "module": "ez-locationviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-locationviewview.js",
            "line": 383,
            "description": "Stores the identifier of the selected tab.",
            "itemtype": "attribute",
            "name": "selectedTab",
            "type": "{String}",
            "readonly": "",
            "class": "eZ.LocationViewView",
            "module": "ez-locationviewview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-loginformview.js",
            "line": 17,
            "description": "Fired when the user submit the login form",
            "itemtype": "event",
            "name": "authentication",
            "params": [
                {
                    "name": "credentials",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "login",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "password",
                            "description": "",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "eZ.LoginFormView",
            "module": "ez-loginformview"
        },
        {
            "file": "Resources/public/js/views/ez-loginformview.js",
            "line": 46,
            "description": "The default message in the message box. This property is filled\nright after the view is rendered",
            "itemtype": "property",
            "name": "_defaultMessage",
            "access": "protected",
            "tagname": "",
            "type": "String",
            "default": "\"\"",
            "class": "eZ.LoginFormView",
            "module": "ez-loginformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-loginformview.js",
            "line": 58,
            "description": "Event handler for the `authenticating` attribute change event.",
            "itemtype": "method",
            "name": "_uiAuthenticatingChange",
            "access": "protected",
            "tagname": "",
            "class": "eZ.LoginFormView",
            "module": "ez-loginformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-loginformview.js",
            "line": 78,
            "description": "Event handler for the `error` attribute change event.",
            "itemtype": "method",
            "name": "_uiErrorChange",
            "access": "protected",
            "tagname": "",
            "class": "eZ.LoginFormView",
            "module": "ez-loginformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-loginformview.js",
            "line": 99,
            "description": "Event handler for the submit event. It checks if the form is\ncorrectly filled and it then fires the `authentication` event with\nthe provided credentials.",
            "itemtype": "method",
            "name": "_login",
            "access": "protected",
            "tagname": "",
            "class": "eZ.LoginFormView",
            "module": "ez-loginformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-loginformview.js",
            "line": 123,
            "description": "Sets the message in the message box",
            "itemtype": "method",
            "name": "_setMessage",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "msg",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "eZ.LoginFormView",
            "module": "ez-loginformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-loginformview.js",
            "line": 134,
            "description": "Renders the login form view",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "the view itself",
                "type": "eZ.LoginFormView"
            },
            "class": "eZ.LoginFormView",
            "module": "ez-loginformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-loginformview.js",
            "line": 149,
            "description": "Sets the height of the view",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_uiSetHeight",
            "class": "eZ.LoginFormView",
            "module": "ez-loginformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-loginformview.js",
            "line": 164,
            "description": "The error message to display",
            "itemtype": "attribute",
            "name": "error",
            "type": "String",
            "default": "\"\"",
            "class": "eZ.LoginFormView",
            "module": "ez-loginformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-loginformview.js",
            "line": 175,
            "description": "Indicates whether an authentication is currently happening",
            "itemtype": "attribute",
            "name": "authenticating",
            "type": "Boolean",
            "default": "false",
            "class": "eZ.LoginFormView",
            "module": "ez-loginformview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 55,
            "description": "The y coordinate of the active menu when the navigation is not fixed.",
            "itemtype": "property",
            "name": "_navigationY",
            "default": "0",
            "type": "Number",
            "access": "protected",
            "tagname": "",
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 65,
            "description": "The scroll event subscription set to manage the fixed navigation",
            "itemtype": "property",
            "name": "",
            "default": "null",
            "type": "EventHandle",
            "access": "protected",
            "tagname": "",
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 75,
            "description": "The resize event subscription set to manage the width of the\nnavigation",
            "itemtype": "property",
            "name": "_resizeSubscription",
            "default": "null",
            "type": "EventHandle",
            "access": "protected",
            "tagname": "",
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 102,
            "description": "Returns the height of the navigation menu",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getNavigationHeight",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 113,
            "description": "matchedRouteChange event handler. It makes sure the corresponding\nnavigation item is selected and the zone in which it is, is active.",
            "itemtype": "method",
            "name": "_handleSelectedItem",
            "access": "protected",
            "tagname": "",
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 137,
            "description": "Fires the event to navigate to the given zone. The navigation happens\nonly if the zone has exactly one navigation items.",
            "itemtype": "method",
            "name": "_navigateToZone",
            "params": [
                {
                    "name": "zone",
                    "description": "",
                    "type": "String|Null"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 161,
            "description": "Sets the active navigation in the UI",
            "itemtype": "method",
            "name": "_uiSetActiveNavigation",
            "params": [
                {
                    "name": "previousZone",
                    "description": "the previously active zone",
                    "type": "String|Null"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 174,
            "description": "Handles the fixed navigation in the UI",
            "itemtype": "method",
            "name": "_uiHandleFixedNavigation",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 200,
            "description": "event fired when the navigation mode change so that the rest of\nthe application can also change if needed. For the navigation\nhub, the navigation mode is either true or false. True when the\nnavigation is fixed and false otherwise.",
            "itemtype": "event",
            "name": "navigationModeChange",
            "params": [
                {
                    "name": "navigation",
                    "description": "navigation mode info",
                    "props": [
                        {
                            "name": "modeClass",
                            "description": "the class to add on the app container"
                        },
                        {
                            "name": "value",
                            "description": "the new value of the navigation mode"
                        }
                    ]
                }
            ],
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 219,
            "description": "Marks the zone associated with the activeNavigation as active",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_uiSetActiveZone",
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 237,
            "description": "Renders the navigation hub view",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "the view itself",
                "type": "eZ.NavigationHubView"
            },
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 255,
            "description": "Builds the zone list for the template. Each zone is represented by an\nobject with a `name` and a `hasNavigation` properties.",
            "itemtype": "method",
            "name": "_buildZones",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 275,
            "description": "Returns whether the zone associated with the given key has a\nnavigation ie it has more than one navigation item view.",
            "itemtype": "method",
            "name": "_hasNavigation",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "zoneKey",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 290,
            "description": "Returns the navigation item views instances associated with the given\nzone key.",
            "itemtype": "method",
            "name": "_getNavigationItemViews",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "zoneKey",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "of eZ.NavigationItemView",
                "type": "Undefined|Array"
            },
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 303,
            "description": "Renders the navigation items in the corresponding navigation zone",
            "itemtype": "method",
            "name": "_renderNavigationItems",
            "access": "protected",
            "tagname": "",
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 342,
            "description": "Sets the active flag on the navigation item views",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_setNavigationItemActive",
            "params": [
                {
                    "name": "active",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 357,
            "description": "Makes sure the navigation corresponding to the activeNavigation value\nis shown if needed",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_uiShowNavigation",
            "params": [
                {
                    "name": "previousZone",
                    "description": "the previously active zone",
                    "type": "String|Null"
                }
            ],
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 374,
            "description": "tap/mouseover handler on the navigation zones. It sets the\nactiveNavigation attribute to the corresponding value",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_setNavigation",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 386,
            "description": "Handles the user scroll to make the navigation fixed or not",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_handleScroll",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 403,
            "description": "Makes sure all the active navigation items are available in the menu.\nIf there's too much items, the overflowed elements are put in the\n*more* sub menu",
            "itemtype": "method",
            "name": "_uiNavigationSize",
            "access": "protected",
            "tagname": "",
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 438,
            "description": "Checks whether there are too much items in the navigation for the\ncurrent viewport size",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_navigationOverflowed",
            "return": {
                "description": "Boolean"
            },
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 450,
            "description": "Checks whether the navigation is not completely filled up",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_navigationUnderflowed",
            "return": {
                "description": "Boolean"
            },
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 461,
            "description": "Returns all navigation items except the *More* item",
            "itemtype": "method",
            "name": "_getNavigationItems",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "NodeList"
            },
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 472,
            "description": "mouseover event handler for the sub menu links to show and place\nthe corresponding sub menu",
            "itemtype": "method",
            "name": "_uiShowSubMenu",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 497,
            "description": "mouseout/clickoutside event handler for the sub menu links to hide\nthe corresponding sub menu",
            "itemtype": "method",
            "name": "_uiHideSubMenu",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 510,
            "description": "Toggles the sub menu visibility",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_uiToggleSubMenu",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 525,
            "description": "Tap event handler on the logout link",
            "itemtype": "method",
            "name": "_logOut",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "tap event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 539,
            "description": "Sets the _navigationMenu property depending on the val parameter.",
            "itemtype": "method",
            "name": "_setNavigationMenu",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "val",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "val",
                "type": "String"
            },
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 556,
            "description": "Returns the navigation node corresponding to the identifier",
            "params": [
                {
                    "name": "identifier",
                    "description": "",
                    "type": "String"
                }
            ],
            "itemtype": "method",
            "name": "_getNavigationNode",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Y.Node"
            },
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 568,
            "description": "Builds the list of navigation item views based on the value. This\nmethod is a setter for the *NavigationItems.",
            "itemtype": "method",
            "name": "_buildNavigationViews",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "an array of plain object or Y.Views (see\nattributes description)",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "of Y.View",
                "type": "Array"
            },
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 598,
            "description": "Object describing the available zones (Platform, Studio), the\nkey is the zone identifier, the value is the zone name.",
            "itemtype": "attribute",
            "name": "zones",
            "type": "Object",
            "readonly": "",
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 616,
            "description": "Stores the navigation view item views instance for each item in\nthe navigation for the platform zone. This attribute accepts either\nan array of already build views or an array of object with at a\n`Constructor` property and optionally a `config` property holding\nan object to pass to the constructor function.",
            "itemtype": "attribute",
            "name": "platformNavigationItems",
            "type": "Array of Y.View",
            "writeonce": "",
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 632,
            "description": "Stores the navigation view item views instance for each item in\nthe navigation for the studio zone. This attribute accepts either\nan array of already build views or an array of object with at a\n`Constructor` property and optionally a `config` property holding\nan object to pass to the constructor function.",
            "itemtype": "attribute",
            "name": "studioNavigationItems",
            "type": "Array of Y.View",
            "writeonce": "",
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 648,
            "description": "Stores the navigation view item views instance for each item in\nthe navigation for the admin zone. This attribute accepts either\nan array of already build views or an array of object with at a\n`Constructor` property and optionally a `config` property holding\nan object to pass to the constructor function.",
            "itemtype": "attribute",
            "name": "studioplusNavigationItems",
            "type": "Array of Y.View",
            "writeonce": "",
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 664,
            "description": "Stores the navigation view item views instance for each item in\nthe navigation for the studioplus zone. This attribute accepts either\nan array of already build views or an array of object with at a\n`Constructor` property and optionally a `config` property holding\nan object to pass to the constructor function.",
            "itemtype": "attribute",
            "name": "studioplusNavigationItems",
            "type": "Array of Y.View",
            "writeonce": "",
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 680,
            "description": "Contains the identifier ('platform', 'studio', ...) of the\ncurrently active navigation. When set, this attribute updates the\n`_navigationMenu` property with the corresponding Node",
            "itemtype": "attribute",
            "name": "activeNavigation",
            "type": "String",
            "default": "null",
            "required": 1,
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 695,
            "description": "Whether the navigation is in fixed more or not",
            "itemtype": "attribute",
            "name": "navigationFixed",
            "type": "Boolean",
            "default": "false",
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 706,
            "description": "The currently authenticated user",
            "itemtype": "attribute",
            "name": "user",
            "type": "eZ.User",
            "required": 1,
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-navigationhubview.js",
            "line": 715,
            "description": "The matched route provided by the navigation hub view service. It\nused to detect which navigaiton item should be selected and it is\nupdated after each page change.",
            "itemtype": "attribute",
            "name": "matchedRoute",
            "type": "{Object}",
            "class": "eZ.NavigationHubView",
            "module": "ez-navigationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-notificationhubview.js",
            "line": 24,
            "description": "Array of the currently rendered notification views.",
            "itemtype": "property",
            "name": "_notificationViews",
            "type": "{Array}",
            "access": "protected",
            "tagname": "",
            "class": "eZ.NotificationHubView",
            "module": "ez-notificationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-notificationhubview.js",
            "line": 34,
            "description": "Subscribes to the `add` and `remove` events on the notification list\nso that the view is in sync with the list.",
            "itemtype": "method",
            "name": "_setListEventHandlers",
            "params": [
                {
                    "name": "list",
                    "description": "",
                    "type": "eZ.NotificationList"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.NotificationHubView",
            "module": "ez-notificationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-notificationhubview.js",
            "line": 52,
            "description": "Adds a notification view for a new Notification model in the list.\nThe view is directly rendered and added to the hub view container.",
            "itemtype": "method",
            "name": "_addNotificationView",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "notification",
                    "description": "",
                    "type": "eZ.Notification"
                }
            ],
            "class": "eZ.NotificationHubView",
            "module": "ez-notificationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-notificationhubview.js",
            "line": 71,
            "description": "Removes the notification view corresponding to the given notification\nmodel from the internal view list.",
            "itemtype": "method",
            "name": "_removeNotificationView",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "notification",
                    "description": "",
                    "type": "eZ.Notification"
                }
            ],
            "class": "eZ.NotificationHubView",
            "module": "ez-notificationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-notificationhubview.js",
            "line": 98,
            "description": "The notification model list to display",
            "itemtype": "attribute",
            "name": "notificationList",
            "type": "{eZ.NotificationList}",
            "writeonce": "",
            "class": "eZ.NotificationHubView",
            "module": "ez-notificationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-notificationview.js",
            "line": 7,
            "description": "Provides the notification view class",
            "itemtype": "method",
            "name": "ez-notificationview",
            "class": "eZ.NotificationView",
            "module": "ez-notificationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-notificationview.js",
            "line": 33,
            "description": "Closes the notification view by destroying the corresponding\nNotification object.",
            "itemtype": "method",
            "name": "_closeNotification",
            "access": "protected",
            "tagname": "",
            "class": "eZ.NotificationView",
            "module": "ez-notificationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-notificationview.js",
            "line": 47,
            "description": "Stores the auto hide timer returned by Y.later.",
            "itemtype": "property",
            "name": "_autohideTimer",
            "type": "{Object|Null}",
            "access": "protected",
            "tagname": "",
            "class": "eZ.NotificationView",
            "module": "ez-notificationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-notificationview.js",
            "line": 80,
            "description": "Creates a timer so that the notification is automatically hidden\nafter its timeout. An already existing timer if any is stopped",
            "itemtype": "method",
            "name": "_setAutohide",
            "access": "protected",
            "tagname": "",
            "class": "eZ.NotificationView",
            "module": "ez-notificationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-notificationview.js",
            "line": 96,
            "description": "Stops the auto hide timer if any",
            "itemtype": "method",
            "name": "_stopAutohide",
            "access": "protected",
            "tagname": "",
            "class": "eZ.NotificationView",
            "module": "ez-notificationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-notificationview.js",
            "line": 108,
            "description": "Returns the state class from the given state string",
            "itemtype": "method",
            "name": "_getStateClass",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "eZ.NotificationView",
            "module": "ez-notificationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-notificationview.js",
            "line": 119,
            "description": "Set and unset the state class on the container depending on the\nprevState and newState parameters",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_uiChangeState",
            "params": [
                {
                    "name": "prevState",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "newState",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "eZ.NotificationView",
            "module": "ez-notificationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-notificationview.js",
            "line": 139,
            "description": "Updates the displayed notification text",
            "itemtype": "method",
            "name": "_uiChangeText",
            "params": [
                {
                    "name": "text",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.NotificationView",
            "module": "ez-notificationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-notificationview.js",
            "line": 160,
            "description": "Hides the notification view and destroys the view after the CSS\ntransition has been executed.",
            "itemtype": "method",
            "name": "vanish",
            "class": "eZ.NotificationView",
            "module": "ez-notificationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-notificationview.js",
            "line": 174,
            "description": "The notification model to displayed",
            "itemtype": "attribute",
            "name": "notification",
            "type": "{eZ.Notification}",
            "required": 1,
            "class": "eZ.NotificationView",
            "module": "ez-notificationhubview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-rawcontentview.js",
            "line": 45,
            "description": "Tap event handler to collapse/uncollapse the raw content view",
            "itemtype": "method",
            "name": "_collapseView",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event face of the tap event",
                    "type": "Object"
                }
            ],
            "class": "eZ.RawContentView",
            "module": "ez-rawcontentview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-rawcontentview.js",
            "line": 63,
            "description": "Tap event handler to collapse/uncollapse the field group",
            "itemtype": "method",
            "name": "_collapseFieldGroup",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade of the tap event",
                    "type": "Object"
                }
            ],
            "class": "eZ.RawContentView",
            "module": "ez-rawcontentview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-rawcontentview.js",
            "line": 84,
            "description": "Sets the field views for the current content",
            "itemtype": "method",
            "name": "_setFieldViews",
            "access": "protected",
            "tagname": "",
            "class": "eZ.RawContentView",
            "module": "ez-rawcontentview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-rawcontentview.js",
            "line": 116,
            "description": "The field views instances for the current content",
            "itemtype": "property",
            "name": "_fieldViews",
            "access": "protected",
            "tagname": "",
            "default": "[]",
            "type": "Array of {eZ.FieldView}",
            "class": "eZ.RawContentView",
            "module": "ez-rawcontentview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-rawcontentview.js",
            "line": 127,
            "description": "Renders the raw content view",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "the view itself",
                "type": "eZ.RawContentView"
            },
            "class": "eZ.RawContentView",
            "module": "ez-rawcontentview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-rawcontentview.js",
            "line": 149,
            "description": "Renders the field views in the correct field group",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_renderFieldViews",
            "class": "eZ.RawContentView",
            "module": "ez-rawcontentview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-rawcontentview.js",
            "line": 174,
            "description": "The location being rendered",
            "itemtype": "attribute",
            "name": "location",
            "type": "Y.eZ.Location",
            "writeonce": "",
            "class": "eZ.RawContentView",
            "module": "ez-rawcontentview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-rawcontentview.js",
            "line": 185,
            "description": "The content associated the current location",
            "itemtype": "attribute",
            "name": "content",
            "type": "Y.eZ.Content",
            "writeonce": "",
            "class": "eZ.RawContentView",
            "module": "ez-rawcontentview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-rawcontentview.js",
            "line": 196,
            "description": "The content type of the content at the current location",
            "itemtype": "attribute",
            "name": "contentType",
            "type": "Y.eZ.ContentType",
            "writeonce": "",
            "class": "eZ.RawContentView",
            "module": "ez-rawcontentview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-rawcontentview.js",
            "line": 207,
            "description": "Language code of language currently active for the current location",
            "itemtype": "attribute",
            "name": "languageCode",
            "type": "String",
            "writeonce": "",
            "class": "eZ.RawContentView",
            "module": "ez-rawcontentview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-rawcontentview.js",
            "line": 218,
            "description": "The language switcher view instance",
            "itemtype": "attribute",
            "name": "languageSwitcherView",
            "type": "eZ.LanguageSwitcherView",
            "class": "eZ.RawContentView",
            "module": "ez-rawcontentview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 53,
            "description": "Initializes the selection filter view. It adds the necessary classes\nand sets up the event handlers",
            "itemtype": "method",
            "name": "initializer",
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 114,
            "description": "Event handler for the tap event happening on the item elements. It\nselects or unselects the items depending on the current state.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_select",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 126,
            "description": "Fired when a user action unselects an item",
            "itemtype": "event",
            "name": "unselect",
            "params": [
                {
                    "name": "text",
                    "description": "the value which was unselected",
                    "type": "String"
                }
            ],
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 140,
            "description": "Fired when a user action selects an item",
            "itemtype": "event",
            "name": "select",
            "params": [
                {
                    "name": "text",
                    "description": "the value which was selected",
                    "type": "String"
                },
                {
                    "name": "elementNode",
                    "description": "the node containing the value",
                    "type": "Node"
                },
                {
                    "name": "attributes",
                    "description": "the data attributes on the\nelementNode. Those attributes are ones returned by the\nfunction stored in the resultAttributesFormatter attribute.",
                    "type": "Object"
                }
            ],
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 165,
            "description": "Returns the attributes of the selected element. The attributes are\nthe data attribute of the selected element.",
            "params": [
                {
                    "name": "the",
                    "description": "selected node",
                    "type": "Node"
                }
            ],
            "itemtype": "method",
            "name": "_getTargetAttributes",
            "return": {
                "description": "a hash with the attributes values.",
                "type": "Object"
            },
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 185,
            "description": "Event handler for the mouseover event on the list items.",
            "itemtype": "method",
            "name": "_itemMouseOver",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 196,
            "description": "Event handler for the mouseout event on the list items.",
            "itemtype": "method",
            "name": "_itemMouseOout",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 207,
            "description": "Checks whether the item is selected",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_isItemSelected",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Node"
                }
            ],
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 218,
            "description": "Selects the item in the DOM by adding the selected class",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_uiSelectItem",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Node"
                }
            ],
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 229,
            "description": "Unselects the item in the DOM by removing the selected class",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_uiSelectItem",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Node"
                }
            ],
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 240,
            "description": "Sets the item as active by adding the active class",
            "itemtype": "method",
            "name": "_uiActiveItem",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Node"
                }
            ],
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 251,
            "description": "Sets the item as inactive by adding the active class",
            "itemtype": "method",
            "name": "_uiActiveItem",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Node"
                }
            ],
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 262,
            "description": "Adds the unfiltered list of items to the list node",
            "itemtype": "method",
            "name": "_uiSetDefaultList",
            "access": "protected",
            "tagname": "",
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 273,
            "description": "Adds some items in the list node based on the list parameter. Each\nelement of the list should be an object with a display and a text entries",
            "itemtype": "method",
            "name": "_uiSetList",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "list",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 294,
            "description": "Adds an item in the list of possible choice.",
            "itemtype": "method",
            "name": "_uiAddItemNode",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "content",
                    "description": "the string to display",
                    "type": "String"
                },
                {
                    "name": "attrs",
                    "description": "hash to create data attributes",
                    "type": "String"
                }
            ],
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 315,
            "description": "Resets the filter input and the item list",
            "itemtype": "method",
            "name": "resetFilter",
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 325,
            "description": "Returns the list item node based on a string value",
            "itemtype": "method",
            "name": "_getListNode",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Node"
            },
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 337,
            "description": "Renders the view",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "the view it self",
                "type": "eZ.SelectionFilterView"
            },
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 361,
            "description": "Unselects an item based on its value",
            "itemtype": "method",
            "name": "unselect",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "selectedNode",
                    "description": "optional selected node for internal use\nonly.",
                    "type": "Node",
                    "optional": true
                }
            ],
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 386,
            "description": "Focuses the filter input",
            "itemtype": "method",
            "name": "focus",
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 398,
            "description": "Whether to allow filtering",
            "itemtype": "attribute",
            "name": "filter",
            "writeonce": "",
            "default": "true",
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 410,
            "description": "The node where the available items should be added",
            "itemtype": "attribute",
            "name": "listNode",
            "required": 1,
            "writeonce": "",
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 423,
            "description": "Whether it should be possible to select several items",
            "itemtype": "attribute",
            "name": "isMultiple",
            "writeonce": "",
            "default": "false",
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 435,
            "description": "The selected values",
            "itemtype": "attribute",
            "name": "selected",
            "writeonce": "",
            "default": "[]",
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 447,
            "description": "The source for the list of available items.\nOverrides the source attribute from AutoCompleteBase to only\naccepts array as source.",
            "itemtype": "attribute",
            "name": "source",
            "required": 1,
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-selectionfilterview.js",
            "line": 461,
            "description": "A function to extract the attributes to add for each element in\nthe source array. The default implementation returns a hash\ncontaining a `text` entry holding the `toString` return value of\nthe source element.",
            "itemtype": "attribute",
            "name": "resultAttributesFormatter",
            "type": "{Function}",
            "class": "eZ.SelectionFilterView",
            "module": "ez-selectionfilterview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-serversideview.js",
            "line": 29,
            "description": "Check if the submit action requires a confirm box,",
            "itemtype": "method",
            "name": "_confirmSubmit",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.ServerSideView",
            "module": "ez-serversideview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-serversideview.js",
            "line": 61,
            "description": "Form handling. The DOM submit is transformed into an application\nlevel event `submitForm` so that the server side view service can\nhandle it.",
            "itemtype": "method",
            "name": "_submitForm",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                },
                {
                    "name": "focusedNode",
                    "description": "",
                    "type": "Node"
                }
            ],
            "class": "eZ.ServerSideView",
            "module": "ez-serversideview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-serversideview.js",
            "line": 72,
            "description": "Fired when a form is submitted in the browser",
            "itemtype": "event",
            "name": "submitForm",
            "params": [
                {
                    "name": "form",
                    "description": "the Node object of the submitted form",
                    "type": "Node"
                },
                {
                    "name": "formData",
                    "description": "the serialized form data including the\nused button to validate the form",
                    "type": "Object"
                },
                {
                    "name": "originalEvent",
                    "description": "the original DOM submit event",
                    "type": "Event"
                }
            ],
            "class": "eZ.ServerSideView",
            "module": "ez-serversideview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-serversideview.js",
            "line": 88,
            "description": "Serializes the form data so that it can be sent with an AJAX request.\nIt also checks which button was used (if any) to include it in the\ndata.",
            "itemtype": "method",
            "name": "_serializeForm",
            "params": [
                {
                    "name": "form",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "focusedNode",
                    "description": "",
                    "type": "Node"
                }
            ],
            "return": {
                "description": "key/value data of the form",
                "type": "Object"
            },
            "class": "eZ.ServerSideView",
            "module": "ez-serversideview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-serversideview.js",
            "line": 145,
            "description": "Checks whether the given node is a valid submit button for the given\nform.",
            "itemtype": "method",
            "name": "_isSubmitButton",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "form",
                    "description": "",
                    "type": "Node"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.ServerSideView",
            "module": "ez-serversideview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-serversideview.js",
            "line": 173,
            "description": "Initializes the view to make sure the container will get the\nez-view-serversideview class",
            "itemtype": "method",
            "name": "initializer",
            "class": "eZ.ServerSideView",
            "module": "ez-serversideview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-serversideview.js",
            "line": 187,
            "description": "Renders the view in its container. It just puts the html attibute\ncontent as the content of the view container",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "the view it self",
                "type": "eZ.ServerSideView"
            },
            "class": "eZ.ServerSideView",
            "module": "ez-serversideview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-serversideview.js",
            "line": 199,
            "description": "Returns the string to use as the page title",
            "itemtype": "method",
            "name": "getTitle",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.ServerSideView",
            "module": "ez-serversideview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-serversideview.js",
            "line": 210,
            "description": "The title of the view",
            "itemtype": "attribute",
            "name": "title",
            "default": "\"\"",
            "type": "String",
            "class": "eZ.ServerSideView",
            "module": "ez-serversideview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-serversideview.js",
            "line": 221,
            "description": "The HTML content of the view",
            "itemtype": "attribute",
            "name": "html",
            "default": "\"\"",
            "type": "String",
            "class": "eZ.ServerSideView",
            "module": "ez-serversideview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-studiopluspresentationview.js",
            "line": 27,
            "description": "Renders the studio plus presentation view",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "the view itself",
                "type": "eZ.StudioPlusPresentationView"
            },
            "class": "eZ.StudioPlusPresentationView",
            "module": "ez-studiopluspresentationview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-studiopluspresentationview.js",
            "line": 40,
            "description": "Sets the source of the iframe to the value of the iframeSource attribute.",
            "itemtype": "method",
            "name": "_setIFrameSource",
            "access": "private",
            "tagname": "",
            "class": "eZ.StudioPlusPresentationView",
            "module": "ez-studiopluspresentationview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-studiopluspresentationview.js",
            "line": 52,
            "description": "Stores the iframe Source",
            "itemtype": "attribute",
            "name": "iframeSource",
            "type": "String",
            "default": "'http://ez.no/in-product-studioplus-teaser'",
            "readonly": "",
            "class": "eZ.StudioPlusPresentationView",
            "module": "ez-studiopluspresentationview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-studiopresentationview.js",
            "line": 28,
            "description": "Renders the studio presentation view",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "the view itself",
                "type": "eZ.StudioPresentationView"
            },
            "class": "eZ.StudioPresentationView",
            "module": "ez-studiopresentationview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-studiopresentationview.js",
            "line": 41,
            "description": "Sets the source of the iframe to the value of the iframeSource attribute.",
            "itemtype": "method",
            "name": "_setIFrameSource",
            "access": "private",
            "tagname": "",
            "class": "eZ.StudioPresentationView",
            "module": "ez-studiopresentationview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-studiopresentationview.js",
            "line": 53,
            "description": "Stores the iframe Source",
            "itemtype": "attribute",
            "name": "iframeSource",
            "type": "String",
            "default": "'http://ez.no/in-product-studio-teaser'",
            "readonly": "",
            "class": "eZ.StudioPresentationView",
            "module": "ez-studiopresentationview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-subitemlistview.js",
            "line": 47,
            "description": "Refreshes the subitem list",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_refresh",
            "class": "eZ.SubitemListView",
            "module": "ez-subitemlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-subitemlistview.js",
            "line": 58,
            "description": "Sets the UI in the loading the state",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_uiPageLoading",
            "class": "eZ.SubitemListView",
            "module": "ez-subitemlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-subitemlistview.js",
            "line": 68,
            "description": "Removes the loading state of the UI",
            "itemtype": "method",
            "name": "_uiPageEndLoading",
            "access": "protected",
            "tagname": "",
            "class": "eZ.SubitemListView",
            "module": "ez-subitemlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-subitemlistview.js",
            "line": 78,
            "description": "tap event handler on the navigation links. Changes the page if the\nlink is not disabled",
            "itemtype": "method",
            "name": "_handlePagination",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.SubitemListView",
            "module": "ez-subitemlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-subitemlistview.js",
            "line": 95,
            "description": "Returns the *goto* function for the given type operation",
            "itemtype": "method",
            "name": "_getGotoMethod",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "eZ.SubitemListView",
            "module": "ez-subitemlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-subitemlistview.js",
            "line": 107,
            "description": "Go to the first page",
            "itemtype": "method",
            "name": "_gotoFirst",
            "access": "protected",
            "tagname": "",
            "class": "eZ.SubitemListView",
            "module": "ez-subitemlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-subitemlistview.js",
            "line": 117,
            "description": "Go to the next page",
            "itemtype": "method",
            "name": "_gotoNext",
            "access": "protected",
            "tagname": "",
            "class": "eZ.SubitemListView",
            "module": "ez-subitemlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-subitemlistview.js",
            "line": 127,
            "description": "Go to the previous page",
            "itemtype": "method",
            "name": "_gotoPrev",
            "access": "protected",
            "tagname": "",
            "class": "eZ.SubitemListView",
            "module": "ez-subitemlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-subitemlistview.js",
            "line": 137,
            "description": "Go to the last page",
            "itemtype": "method",
            "name": "_gotoLast",
            "access": "protected",
            "tagname": "",
            "class": "eZ.SubitemListView",
            "module": "ez-subitemlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-subitemlistview.js",
            "line": 162,
            "description": "Checks whether the pagination will be useful",
            "itemtype": "method",
            "name": "_hasPages",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.SubitemListView",
            "module": "ez-subitemlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-subitemlistview.js",
            "line": 173,
            "description": "Checks whether the user is on the first \"page\".",
            "itemtype": "method",
            "name": "_isLastPage",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.SubitemListView",
            "module": "ez-subitemlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-subitemlistview.js",
            "line": 184,
            "description": "Checks whether the user is on the last \"page\".",
            "itemtype": "method",
            "name": "_isLastPage",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.SubitemListView",
            "module": "ez-subitemlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-subitemlistview.js",
            "line": 195,
            "description": "Converts the subitems array to JSON so that it can be used in the\ntemplate.",
            "itemtype": "method",
            "name": "_convertToJSONList",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "undefined|Array"
            },
            "class": "eZ.SubitemListView",
            "module": "ez-subitemlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-subitemlistview.js",
            "line": 212,
            "description": "Fires the `locationSearch` event to fetch the subitems of the\ncurrently displayed Location.",
            "itemtype": "method",
            "name": "_fireLocationSearch",
            "access": "protected",
            "tagname": "",
            "class": "eZ.SubitemListView",
            "module": "ez-subitemlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-subitemlistview.js",
            "line": 246,
            "description": "The max number of the Locations to display in the subitem list\nper \"page\".",
            "itemtype": "attribute",
            "name": "limit",
            "default": "10",
            "type": "Number",
            "class": "eZ.SubitemListView",
            "module": "ez-subitemlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-subitemlistview.js",
            "line": 258,
            "description": "The offset in the Location list.",
            "itemtype": "attribute",
            "name": "offset",
            "default": "0",
            "type": "Number",
            "class": "eZ.SubitemListView",
            "module": "ez-subitemlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-subitemlistview.js",
            "line": 269,
            "description": "The location being displayed",
            "itemtype": "attribute",
            "name": "location",
            "type": "{eZ.Location}",
            "writeonce": "",
            "class": "eZ.SubitemListView",
            "module": "ez-subitemlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-subitemlistview.js",
            "line": 280,
            "description": "The subitems list.",
            "itemtype": "attribute",
            "name": "subitems",
            "type": "Array of {Object} array containing location structs",
            "class": "eZ.SubitemListView",
            "module": "ez-subitemlistview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-templatebasedview.js",
            "line": 25,
            "description": "Returns the name of the class. This name is used to retrieve the\ncorrect template",
            "itemtype": "method",
            "name": "_getName",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "String"
            },
            "class": "eZ.TemplateBasedView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-templatebasedview.js",
            "line": 37,
            "description": "Generates the class name of a view from its name",
            "itemtype": "method",
            "name": "_generateViewClassName",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "String"
            },
            "class": "eZ.TemplateBasedView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-templatebasedview.js",
            "line": 49,
            "description": "Initializes the template based view object:\n\n  * filles the `template` property (see _setTemplate)\n\n  * defines the containerTemplate property so that it contains a\n    class based on the name of the view object",
            "itemtype": "method",
            "name": "initializer",
            "class": "eZ.TemplateBasedView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-templatebasedview.js",
            "line": 64,
            "description": "Initializes the `template` property of the view. The template is\nsearched in the template registry and then in the DOM. The id of the\ntemplate (both in the registry and in the DOM) is the name of the\nview in lowercase with the suffix `-ez-template`.",
            "itemtype": "method",
            "name": "_setTemplate",
            "access": "protected",
            "tagname": "",
            "class": "eZ.TemplateBasedView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-templatebasedview.js",
            "line": 95,
            "description": "the prefix to generate the view class name",
            "itemtype": "property",
            "name": "VIEW_PREFIX",
            "static": 1,
            "access": "protected",
            "tagname": "",
            "class": "eZ.TemplateBasedView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-templatebasedview.js",
            "line": 104,
            "description": "Registers a partial template which is registered in the template\nregistry. This method is meant to be called in the initializer\nmethod of a view compontent that requires a given partial. It takes\ncare of not defining/overwriting an existing partial.",
            "static": 1,
            "itemtype": "method",
            "name": "registerPartial",
            "params": [
                {
                    "name": "partialName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "tplId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "eZ.TemplateBasedView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-treeview.js",
            "line": 7,
            "description": "Provides the tree view",
            "itemtype": "method",
            "name": "ez-treeview",
            "class": "eZ.TreeView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-treeview.js",
            "line": 42,
            "description": "Fired when the user clicks on a location in the tree. This event\ncan be prevented and in such case, the original DOM event (tap)\nis prevented as well.",
            "itemtype": "event",
            "name": "treeNavigate",
            "params": [
                {
                    "name": "originalEvent",
                    "description": "the original DOM event facade",
                    "type": "EventFacade"
                },
                {
                    "name": "tree",
                    "description": "the tree currently displayed",
                    "type": "eZ.ContentTree"
                },
                {
                    "name": "nodeId",
                    "description": "the node id in the tree",
                    "type": "String"
                }
            ],
            "class": "eZ.TreeView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-treeview.js",
            "line": 67,
            "description": "tap event handler on the .ez-tree-navigate element. It fires the\n`treeNavigate` event",
            "itemtype": "method",
            "name": "_navigate",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventHandle"
                }
            ],
            "class": "eZ.TreeView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-treeview.js",
            "line": 83,
            "description": "Defines the event handlers related to the tree",
            "itemtype": "method",
            "name": "_uiBindTree",
            "access": "protected",
            "tagname": "",
            "class": "eZ.TreeView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-treeview.js",
            "line": 101,
            "description": "Tree load error event handler",
            "itemtype": "method",
            "name": "_uiError",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event handler",
                    "type": "Object"
                }
            ],
            "class": "eZ.TreeView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-treeview.js",
            "line": 114,
            "description": "Tree select event handler",
            "itemtype": "method",
            "name": "_uiSelect",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "eZ.TreeView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-treeview.js",
            "line": 127,
            "description": "Tree unselect event handler",
            "itemtype": "method",
            "name": "_uiUnselect",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "eZ.TreeView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-treeview.js",
            "line": 140,
            "description": "Tree load event handler",
            "itemtype": "method",
            "name": "_uiLoad",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "eZ.TreeView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-treeview.js",
            "line": 156,
            "description": "Tree open event handler",
            "itemtype": "method",
            "name": "_uiOpen",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "eZ.TreeView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-treeview.js",
            "line": 174,
            "description": "Tree close event handler",
            "itemtype": "method",
            "name": "_uiClose",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "eZ.TreeView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-treeview.js",
            "line": 187,
            "description": "Tree clear event handler",
            "itemtype": "method",
            "name": "_uiClear",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "eZ.TreeView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-treeview.js",
            "line": 199,
            "description": "Returns the Y.Node where the tree is rendered",
            "itemtype": "method",
            "name": "_getTreeContentNode",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Y.Node"
            },
            "class": "eZ.TreeView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-treeview.js",
            "line": 210,
            "description": "Renders the children of a given `node`. This uses the\n`tree-ez-partial`, so it needs to be registered beforehand.",
            "itemtype": "method",
            "name": "_renderNodeChildren",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Y.Tree.Node"
                }
            ],
            "class": "eZ.TreeView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-treeview.js",
            "line": 229,
            "description": "'jsonifies' the node and its data to be used in the tree level\ntemplate",
            "itemtype": "method",
            "name": "_nodeToJson",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Y.Tree.Node"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.TreeView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-treeview.js",
            "line": 256,
            "description": "Tap event handler on the `tree-node-toggle` link. It fires the\n`toggleNode` event",
            "itemtype": "method",
            "name": "_toggleNode",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "eZ.TreeView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-treeview.js",
            "line": 266,
            "description": "Fired when the tree node open state has to change",
            "itemtype": "event",
            "name": "toggleNode",
            "params": [
                {
                    "name": "nodeId",
                    "description": "the node id",
                    "type": "Number"
                }
            ],
            "class": "eZ.TreeView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-treeview.js",
            "line": 277,
            "description": "Returns the Y.Node which renders the given `node`",
            "itemtype": "method",
            "name": "_getElementYNode",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "Y.Tree.Node"
                }
            ],
            "return": {
                "description": "",
                "type": "Y.Node"
            },
            "class": "eZ.TreeView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-treeview.js",
            "line": 290,
            "description": "Holds the tree being displayed",
            "itemtype": "attribute",
            "name": "tree",
            "type": "eZ.ContentTree",
            "writeonce": "",
            "class": "eZ.TreeView",
            "module": "ez-templatebasedview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 81,
            "description": "Stores the given contentStruct in the selection. Depending on the\n`multiple` attribute value, the contentStruct is added to the\nselection or completely replaces it.",
            "itemtype": "method",
            "name": "_storeSelection",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "contentStruct",
                    "description": "",
                    "type": "Object|Null"
                }
            ],
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 102,
            "description": "Unselects the content from its content id.",
            "itemtype": "method",
            "name": "_unselectContent",
            "params": [
                {
                    "name": "contentId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 124,
            "description": "Notifies the browse method views that a content is removed from the\nselection.",
            "itemtype": "method",
            "name": "_notifyMethodsUnselectContent",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "contentId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 138,
            "description": "Checks whether the content is already selected",
            "itemtype": "method",
            "name": "_isAlreadySelected",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "contentStruct",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 155,
            "description": "Add a content to the selection",
            "itemtype": "method",
            "name": "_addToSelection",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "contentStruct",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 169,
            "description": "Resets the current selection",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_resetSelection",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 179,
            "description": "Animates the selection done by the user with the given view. An\nanimation is done only if the source view properly implements the\n`startAnimation` (see {{#crossLink\n\"eZ.UniversalDiscoverySelectedView\"}}Y.eZ.UniversalDiscoverySelectedView{{/crossLink}})",
            "itemtype": "method",
            "name": "_uiAnimateSelection",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "sourceView",
                    "description": "the view used by the user to select the\ncontent",
                    "type": "Y.View"
                }
            ],
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 200,
            "description": "Updates the tab to show the correct tab depending on the visible\nmethod",
            "itemtype": "method",
            "name": "_uiUpdateTab",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 218,
            "description": "Adds or removes the multiple selection class on the container\ndepending on the `multiple` attribute value.",
            "itemtype": "method",
            "name": "_uiMultipleMode",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 235,
            "description": "`selectionChange` event handler. It enables/disables the button\ndepending on the selection",
            "itemtype": "method",
            "name": "_uiSetConfirmButtonState",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 248,
            "description": "Updates the title in the already rendered view",
            "itemtype": "method",
            "name": "_uiUpdateTitle",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 259,
            "description": "Updates the method views depending on the value so that their\n`visible` flag is consistent with the `visibleMethod` attribute value\nand so that they get the correct `multiple` and `loadContent` flag\nvalues as well. What's more the `isSelectable` function registered in\nUDW is passed to the method view.",
            "itemtype": "method",
            "name": "_updateMethods",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 272,
            "description": "Stores a reference to the visible method view",
            "itemtype": "property",
            "name": "_visibleMethodView",
            "access": "protected",
            "tagname": "",
            "type": "{eZ.UniversalDiscoveryMethodBaseView|Null}",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 295,
            "description": "tabChange event handler to update the `visibleMethod` attribute.",
            "itemtype": "method",
            "name": "_updateVisibleMethod",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "EventFacade"
                }
            ],
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 312,
            "description": "Publishes the cancelDiscover and contentDiscovered events",
            "itemtype": "method",
            "name": "_publishEvents",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 333,
            "description": "cancelDiscoverHandlerChange and contentDiscoveredHandlerChange event\nhandler. It makes sure the potential previous event handler are\nremoved and it adds the new handlers if any.",
            "itemtype": "method",
            "name": "_syncEventHandler",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "eventName",
                    "description": "event name",
                    "type": "String"
                },
                {
                    "name": "oldHandler",
                    "description": "the previous event handler",
                    "type": "Function|Null"
                },
                {
                    "name": "newHandler",
                    "description": "the new event handler",
                    "type": "Function|Null"
                }
            ],
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 353,
            "description": "Resets the state of the view",
            "itemtype": "method",
            "name": "_resetState",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 367,
            "description": "Custom reset implementation to make sure to reset the confirmed list\nsub view.",
            "itemtype": "method",
            "name": "reset",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 382,
            "description": "Tap event handler on the cancel link(s).",
            "itemtype": "method",
            "name": "_cancel",
            "params": [
                {
                    "name": "the",
                    "description": "event facade of the tap event",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 391,
            "description": "Fired when the user cancel the selection. By default, the\napplication will close the universal discovery view but this\nevent can be prevented or stopped to avoid that.",
            "itemtype": "event",
            "name": "cancelDiscover",
            "bubbles": "",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 402,
            "description": "Tap event handler on the confirm button",
            "itemtype": "method",
            "name": "_confirmSelection",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 409,
            "description": "Fired when the user confirms the selection. By default, the\napplication will close the universal discovery view but this\nevent can be prevented and stopped so that it does not bubble to\nthe app plugin responsible for that.",
            "itemtype": "event",
            "name": "contentDiscovered",
            "bubbles": "",
            "params": [
                {
                    "name": "selection",
                    "description": "the current selection of the\ndiscovery",
                    "type": "Null|Array|Object"
                }
            ],
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 441,
            "description": "Renders the available methods in a DOM element which id is the\nHTML identifier of the method.",
            "itemtype": "method",
            "name": "_renderMethods",
            "access": "protected",
            "tagname": "",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 456,
            "description": "Builds an array containing objects that describes the available\nmethods.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_methodsList",
            "return": {
                "description": "Array"
            },
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 478,
            "description": "Title of the universal discovery view",
            "itemtype": "attribute",
            "name": "title",
            "type": "{String}",
            "default": "\"Select your content\"",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 489,
            "description": "Flag indicating whether the user is able to select several\ncontents.",
            "itemtype": "attribute",
            "name": "multiple",
            "type": "{Boolean}",
            "default": "false",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 501,
            "description": "Flag indicating whether the Content should be provided in the\nselection.",
            "itemtype": "attribute",
            "name": "loadContent",
            "type": "{Boolean}",
            "default": "false",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 513,
            "description": "An event handler function for the `contentDiscovered` event.",
            "itemtype": "attribute",
            "name": "contentDiscoveredHandler",
            "type": "{Function|null}",
            "default": "null",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 524,
            "description": "An event handler function for the `cancelDiscover` event.",
            "itemtype": "attribute",
            "name": "cancelDiscoverHandler",
            "type": "{Function|null}",
            "default": "null",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 535,
            "description": "The available methods to discover content. Each element in the\narray should be an instance of a class extending\nY.eZ.UniversalDiscoveryMethodBaseView.",
            "itemtype": "attribute",
            "name": "methods",
            "type": "array",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 564,
            "description": "The identifier of the visible method",
            "itemtype": "attribute",
            "name": "visibleMethod",
            "type": "String",
            "default": "'browse'",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 575,
            "description": "The current selection of the discovery. This selection is\nprovided to the contentDiscovered event handler in the event\nfacade. Depending on the `multiple` flag and on the user action,\nthe selection is either null or an object (`multiple` set to\nfalse) or an array (`multiple` set to true)",
            "itemtype": "attribute",
            "name": "selection",
            "type": "{Null|Object|Array}",
            "readonly": "",
            "default": "null",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 592,
            "description": "The confirmed list view. It displays the user's current confirmed\nlist content.",
            "itemtype": "attribute",
            "name": "@confirmedListView",
            "type": "{eZ.UniversalDiscoveryConfirmedListView}",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 607,
            "description": "An arbitrary object the component triggering the universal\ndiscovery can set. It is useful to store some data the\ncontentDiscovered and cancelDiscover handlers need.",
            "itemtype": "attribute",
            "name": "data",
            "type": "{Object}",
            "default": "{}",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-universaldiscoveryview.js",
            "line": 620,
            "description": "Checks wether the content is selectable. Function can be provided in the config\nwhen firing the `contentDiscover` event so it can check if content is selectable\ndepending on the context where UDW is triggered.",
            "itemtype": "attribute",
            "name": "isSelectable",
            "type": "{Function}",
            "class": "eZ.UniversalDiscoveryView",
            "module": "ez-universaldiscoveryview",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-view.js",
            "line": 32,
            "description": "Plugs the registered plugins for this view instance",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_initPlugins",
            "class": "eZ.View",
            "module": "ez-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-view.js",
            "line": 46,
            "description": "Sets the active attribute of the sub views stored in attributes to\nthe same value as the current view",
            "itemtype": "method",
            "name": "_setSubviewsActive",
            "access": "protected",
            "tagname": "",
            "class": "eZ.View",
            "module": "ez-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-view.js",
            "line": 64,
            "description": "Stores the active status of the view. It is set to true by the\napplication after the view container has been added to DOM.",
            "itemtype": "attribute",
            "name": "active",
            "type": "Boolean",
            "default": "false",
            "class": "eZ.View",
            "module": "ez-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/views/ez-view.js",
            "line": 76,
            "description": "An arbitrary config object",
            "itemtype": "attribute",
            "name": "config",
            "type": "{Object}",
            "class": "eZ.View",
            "module": "ez-view",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/extensions/ez-contentinfo-attributes.js",
            "line": 23,
            "description": "The content id of the content in the eZ Publish repository",
            "itemtype": "attribute",
            "name": "contentId",
            "default": "''",
            "type": "string",
            "class": "eZ.ContentInfoAttributes",
            "module": "ez-contentinfo-attributes",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/extensions/ez-contentinfo-attributes.js",
            "line": 34,
            "description": "The name of the content",
            "itemtype": "attribute",
            "name": "name",
            "default": "''",
            "type": "string",
            "class": "eZ.ContentInfoAttributes",
            "module": "ez-contentinfo-attributes",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/extensions/ez-contentinfo-attributes.js",
            "line": 45,
            "description": "The remote id of the content in the eZ Publish repository",
            "itemtype": "attribute",
            "name": "remoteId",
            "default": "''",
            "type": "string",
            "class": "eZ.ContentInfoAttributes",
            "module": "ez-contentinfo-attributes",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/extensions/ez-contentinfo-attributes.js",
            "line": 56,
            "description": "The always available flag of the content",
            "itemtype": "attribute",
            "name": "alwaysAvailable",
            "default": "false",
            "type": "boolean",
            "class": "eZ.ContentInfoAttributes",
            "module": "ez-contentinfo-attributes",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/extensions/ez-contentinfo-attributes.js",
            "line": 68,
            "description": "The last modification date of the content",
            "itemtype": "attribute",
            "name": "lastModificationDate",
            "default": "epoch",
            "type": "Date",
            "class": "eZ.ContentInfoAttributes",
            "module": "ez-contentinfo-attributes",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/extensions/ez-contentinfo-attributes.js",
            "line": 80,
            "description": "The main language code of the content (eng-GB, fre-FR, ...)",
            "itemtype": "attribute",
            "name": "mainLanguageCode",
            "default": "''",
            "type": "string",
            "class": "eZ.ContentInfoAttributes",
            "module": "ez-contentinfo-attributes",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/extensions/ez-contentinfo-attributes.js",
            "line": 91,
            "description": "The published date of the content",
            "itemtype": "attribute",
            "name": "publishedDate",
            "default": "epoch",
            "type": "Date",
            "class": "eZ.ContentInfoAttributes",
            "module": "ez-contentinfo-attributes",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/structs/ez-notification.js",
            "line": 7,
            "description": "Provides the notification model",
            "itemtype": "method",
            "name": "ez-notification",
            "class": "eZ.Notification",
            "module": "ez-contenttree",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/structs/ez-notification.js",
            "line": 25,
            "description": "The identifier of the notification. It is used as the `id` of the\nnotification so that it's possible to change the attributes of\nthe notification.",
            "itemtype": "attribute",
            "name": "identifier",
            "writeonce": "",
            "required": 1,
            "class": "eZ.Notification",
            "module": "ez-contenttree",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/structs/ez-notification.js",
            "line": 38,
            "description": "The text of the notification",
            "itemtype": "attribute",
            "name": "text",
            "type": "{String}",
            "default": "''",
            "class": "eZ.Notification",
            "module": "ez-contenttree",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/structs/ez-notification.js",
            "line": 49,
            "description": "The state of the notification. This state is used to generate and\nset a state class on the container of the eZ.NotifcationView.",
            "itemtype": "attribute",
            "name": "state",
            "type": "{String|Null}",
            "default": "null",
            "class": "eZ.Notification",
            "module": "ez-contenttree",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/structs/ez-notification.js",
            "line": 61,
            "description": "The duration in second after which the notification should disappear.\nZero means the notification should not automatically disappear.",
            "itemtype": "attribute",
            "name": "timeout",
            "type": "{Number}",
            "default": "0",
            "class": "eZ.Notification",
            "module": "ez-contenttree",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/structs/ez-notificationlist.js",
            "line": 7,
            "description": "Provides the notification model list",
            "itemtype": "method",
            "name": "ez-notificationlist",
            "class": "eZ.NotificationList",
            "module": "ez-contenttree",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contentinfomodel.js",
            "line": 25,
            "description": "sync implementation that relies on the JS REST client.\nIt only supports the 'read' action. The callback is\ndirectly passed to the corresponding ContentService methods.",
            "itemtype": "method",
            "name": "sync",
            "params": [
                {
                    "name": "action",
                    "description": "the action, currently only 'read' is supported",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "the options for the sync.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "(required) the JS REST client instance",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "a callback executed when the operation is finished",
                    "type": "Function"
                }
            ],
            "class": "eZ.ContentInfo",
            "module": "ez-contentinfomodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contentmodel.js",
            "line": 24,
            "description": "Override of the eZ.RestModel _parseStruct method to also read the\nfields of the current version",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_parseStruct",
            "params": [
                {
                    "name": "struct",
                    "description": "the struct to transform",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.Content",
            "module": "ez-contentmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contentmodel.js",
            "line": 56,
            "description": "Creates a new content (ie the content must not have an id) in the\nrepository.",
            "itemtype": "method",
            "name": "save",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "(required) the JS REST client instance",
                            "type": "Object"
                        },
                        {
                            "name": "contentType",
                            "description": "(required) the content\ntype to use to create the content",
                            "type": "eZ.ContentType"
                        },
                        {
                            "name": "parentLocation",
                            "description": "(required) the parent\nlocation",
                            "type": "eZ.Location"
                        },
                        {
                            "name": "languageCode",
                            "description": "(required)",
                            "type": "String"
                        },
                        {
                            "name": "fields",
                            "description": "(required) an array containing a\nliteral object for each fields in the content with the properties\n`fieldDefinitionIdentifier` and `fieldValue",
                            "type": "Array"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.Content",
            "module": "ez-contentmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contentmodel.js",
            "line": 74,
            "description": "sync implementation that relies on the JS REST client.\nIt only supports the 'read' and 'create' action. The callback is\ndirectly passed to the corresponding ContentService methods.",
            "itemtype": "method",
            "name": "sync",
            "params": [
                {
                    "name": "action",
                    "description": "the action, currently only 'read' and 'create' are supported",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "the options for the sync.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "(required) the JS REST client instance",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "a callback executed when the operation is finished",
                    "type": "Function"
                }
            ],
            "class": "eZ.Content",
            "module": "ez-contentmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contentmodel.js",
            "line": 99,
            "description": "Creates a content in the repository",
            "itemtype": "method",
            "name": "_createContent",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "(required) the JS REST client instance",
                            "type": "Object"
                        },
                        {
                            "name": "contentType",
                            "description": "(required) the content\ntype to use to create the content",
                            "type": "eZ.ContentType"
                        },
                        {
                            "name": "parentLocation",
                            "description": "(required) the parent\nlocation",
                            "type": "eZ.Location"
                        },
                        {
                            "name": "languageCode",
                            "description": "(required)",
                            "type": "String"
                        },
                        {
                            "name": "fields",
                            "description": "(required) an array containing a\nliteral object for each fields in the content with the properties\n`fieldDefinitionIdentifier` and `fieldValue",
                            "type": "Array"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.Content",
            "module": "ez-contentmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contentmodel.js",
            "line": 128,
            "description": "Creates the content create struct to create the content in the\nrepository",
            "itemtype": "method",
            "name": "_createContentStruct",
            "params": [
                {
                    "name": "options",
                    "description": "see _createContent",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "eZ.Content",
            "module": "ez-contentmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contentmodel.js",
            "line": 154,
            "description": "Returns the field which identifier is in parameter",
            "itemtype": "method",
            "name": "getField",
            "params": [
                {
                    "name": "identifier",
                    "description": "the field definition identifier",
                    "type": "String"
                }
            ],
            "return": {
                "description": "or undefined if the field does not exists",
                "type": "Object"
            },
            "class": "eZ.Content",
            "module": "ez-contentmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contentmodel.js",
            "line": 166,
            "description": "Checks whether the content is translated into `languageCode`",
            "itemtype": "method",
            "name": "hasTranslation",
            "params": [
                {
                    "name": "languageCode",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.Content",
            "module": "ez-contentmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contentmodel.js",
            "line": 177,
            "description": "Filters the relations on this content by type or optionally by field\ndefinition identifier.",
            "itemtype": "method",
            "name": "relations",
            "params": [
                {
                    "name": "type",
                    "description": "type of relation to filter on\n       ('ATTRIBUTE', 'COMMON', 'EMBED', 'LINK'),\n       if omitted all relations are returned",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "fieldDefinitionIdentifier",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "eZ.Content",
            "module": "ez-contentmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contentmodel.js",
            "line": 212,
            "description": "copy implementation that relies on the JS REST client.",
            "itemtype": "method",
            "name": "copy",
            "params": [
                {
                    "name": "options",
                    "description": "the options for the copy.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "(required) the JS REST client instance",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "parentLocationId",
                    "description": "the location id where we should copy the content",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "a callback executed when the operation is finished",
                    "type": "Function"
                }
            ],
            "class": "eZ.Content",
            "module": "ez-contentmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contentmodel.js",
            "line": 225,
            "description": "Loads content's locations list",
            "itemtype": "method",
            "name": "loadLocations",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "(required) the JS REST client instance",
                            "type": "Object"
                        },
                        {
                            "name": "location",
                            "description": "current location. If present it will be used instead of loading it from the API.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.Content",
            "module": "ez-contentmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contentmodel.js",
            "line": 273,
            "description": "Adds new location for content",
            "itemtype": "method",
            "name": "addLocation",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "(required) the JS REST client instance",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "parentLocation",
                    "description": "the parent location under which new location will be created",
                    "type": "eZ.Location"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.Content",
            "module": "ez-contentmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contentmodel.js",
            "line": 290,
            "description": "Sets main location for content",
            "itemtype": "method",
            "name": "setMainLocation",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "(required) the JS REST client instance",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "locationId",
                    "description": "the location id of location that will be set as main location",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.Content",
            "module": "ez-contentmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contentmodel.js",
            "line": 322,
            "description": "Fields in the current version of the content indexed by field\ndefinition identifier",
            "itemtype": "attribute",
            "name": "fields",
            "default": "{}",
            "type": "Object",
            "class": "eZ.Content",
            "module": "ez-contentmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contentmodel.js",
            "line": 334,
            "description": "The relations set by this content",
            "itemtype": "attribute",
            "name": "relations",
            "type": "Object",
            "default": "{}",
            "class": "eZ.Content",
            "module": "ez-contentmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contentmodel.js",
            "line": 345,
            "description": "The current version of the content",
            "itemtype": "attribute",
            "name": "currentVersion",
            "type": "eZ.Version",
            "class": "eZ.Content",
            "module": "ez-contentmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypegroupmodel.js",
            "line": 24,
            "description": "sync implementation that relies on the JS REST client.\nFor now, it only supports the 'read' action. The callback is\ndirectly passed to the ContentTypeService.loadContentTypeGroup method.",
            "itemtype": "method",
            "name": "sync",
            "params": [
                {
                    "name": "action",
                    "description": "the action, currently only 'read' is supported",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "the options for the sync.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "(required) the JS REST client instance",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "a callback executed when the operation is finished",
                    "type": "Function"
                }
            ],
            "class": "eZ.ContentTypeGroup",
            "module": "ez-contenttypegroupmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypegroupmodel.js",
            "line": 47,
            "description": "Loads the content types in this group using the JS REST client. The\ncontent types list is stored in the `contentTypes` attribute.",
            "itemtype": "method",
            "name": "loadContentTypes",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "(required) the JS REST client instance",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "a callback executed when the operation is finished",
                    "type": "Function"
                }
            ],
            "class": "eZ.ContentTypeGroup",
            "module": "ez-contenttypegroupmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypegroupmodel.js",
            "line": 90,
            "description": "The list of content types in this group. This attribute is lazily\nfilled by loadContentTypes",
            "itemtype": "attribute",
            "name": "contentTypes",
            "default": "undefined",
            "type": "Array",
            "class": "eZ.ContentTypeGroup",
            "module": "ez-contenttypegroupmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypegroupmodel.js",
            "line": 102,
            "description": "The content type group's creation date",
            "itemtype": "attribute",
            "name": "created",
            "default": "epoch",
            "type": "Date",
            "class": "eZ.ContentTypeGroup",
            "module": "ez-contenttypegroupmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypegroupmodel.js",
            "line": 114,
            "description": "The content type group's modification date",
            "itemtype": "attribute",
            "name": "modified",
            "default": "epoch",
            "type": "Date",
            "class": "eZ.ContentTypeGroup",
            "module": "ez-contenttypegroupmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypegroupmodel.js",
            "line": 126,
            "description": "The content type group's identifier (name actually)",
            "itemtype": "attribute",
            "name": "identifier",
            "default": "\"\"",
            "type": "string",
            "class": "eZ.ContentTypeGroup",
            "module": "ez-contenttypegroupmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypemodel.js",
            "line": 26,
            "description": "sync implementation that relies on the JS REST client.\nFor now, it only supports the 'read' action. The callback is\ndirectly passed to the ContentService.loadContentType method.",
            "itemtype": "method",
            "name": "sync",
            "params": [
                {
                    "name": "action",
                    "description": "the action, currently only 'read' is supported",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "the options for the sync.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "(required) the JS REST client instance",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "a callback executed when the operation is finished",
                    "type": "Function"
                }
            ],
            "class": "eZ.ContentType",
            "module": "ez-contenttypemodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypemodel.js",
            "line": 49,
            "description": "Returns the field definitions organized by field group. Each element\nof the array is a hash containing the `fieldGroupName` (string) and\nthe `fieldDefinitions` (array of field definition) entries.",
            "itemtype": "method",
            "name": "getFieldGroups",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "eZ.ContentType",
            "module": "ez-contenttypemodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypemodel.js",
            "line": 87,
            "description": "Checks whether the content type has a field definition which field\ntype is the given fieldTypeIdentifier (ezstring, ezuser, ...)",
            "itemtype": "method",
            "name": "hasFieldType",
            "params": [
                {
                    "name": "fieldTypeIdentifier",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.ContentType",
            "module": "ez-contenttypemodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypemodel.js",
            "line": 101,
            "description": "Returns the fieldIdentifiers of a given type.",
            "itemtype": "method",
            "name": "getFieldDefinitionIdentifiers",
            "params": [
                {
                    "name": "fieldTypeIdentifier",
                    "description": "like ezimage, ezstring, ...",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "eZ.ContentType",
            "module": "ez-contenttypemodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypemodel.js",
            "line": 129,
            "description": "The content type's creation date",
            "itemtype": "attribute",
            "name": "creationDate",
            "default": "epoch",
            "type": "Date",
            "class": "eZ.ContentType",
            "module": "ez-contenttypemodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypemodel.js",
            "line": 141,
            "description": "The content type's default always available flag",
            "itemtype": "attribute",
            "name": "defaultAlwaysAvailable",
            "default": "false",
            "type": "boolean",
            "class": "eZ.ContentType",
            "module": "ez-contenttypemodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypemodel.js",
            "line": 153,
            "description": "The content type's default sort field",
            "itemtype": "attribute",
            "name": "defaultSortField",
            "default": "\"PATH\"",
            "type": "string",
            "class": "eZ.ContentType",
            "module": "ez-contenttypemodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypemodel.js",
            "line": 164,
            "description": "The content type's default sort order",
            "itemtype": "attribute",
            "name": "defaultSortOrder",
            "default": "\"ASC\"",
            "type": "string",
            "class": "eZ.ContentType",
            "module": "ez-contenttypemodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypemodel.js",
            "line": 175,
            "description": "The content type's descriptions",
            "itemtype": "attribute",
            "name": "descriptions",
            "default": "{}",
            "type": "Object",
            "class": "eZ.ContentType",
            "module": "ez-contenttypemodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypemodel.js",
            "line": 187,
            "description": "The content type's identifier",
            "itemtype": "attribute",
            "name": "identifier",
            "default": "\"\"",
            "type": "string",
            "class": "eZ.ContentType",
            "module": "ez-contenttypemodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypemodel.js",
            "line": 198,
            "description": "The content type's is container flag",
            "itemtype": "attribute",
            "name": "isContainer",
            "default": "false",
            "type": "boolean",
            "class": "eZ.ContentType",
            "module": "ez-contenttypemodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypemodel.js",
            "line": 210,
            "description": "The content type's main language code (eng-GB, ....)",
            "itemtype": "attribute",
            "name": "mainLanguageCode",
            "default": "\"\"",
            "type": "boolean",
            "class": "eZ.ContentType",
            "module": "ez-contenttypemodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypemodel.js",
            "line": 221,
            "description": "The content type's modification date",
            "itemtype": "attribute",
            "name": "modificationDate",
            "default": "epoch",
            "type": "Date",
            "class": "eZ.ContentType",
            "module": "ez-contenttypemodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypemodel.js",
            "line": 233,
            "description": "The content type's names",
            "itemtype": "attribute",
            "name": "names",
            "default": "{}",
            "type": "Object",
            "class": "eZ.ContentType",
            "module": "ez-contenttypemodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypemodel.js",
            "line": 245,
            "description": "The content type's name schema",
            "itemtype": "attribute",
            "name": "nameSchema",
            "default": "\"\"",
            "type": "string",
            "class": "eZ.ContentType",
            "module": "ez-contenttypemodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypemodel.js",
            "line": 256,
            "description": "The content type's remote id",
            "itemtype": "attribute",
            "name": "remoteId",
            "default": "\"\"",
            "type": "string",
            "class": "eZ.ContentType",
            "module": "ez-contenttypemodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypemodel.js",
            "line": 267,
            "description": "The content type's status",
            "itemtype": "attribute",
            "name": "status",
            "default": "\"DEFINED\"",
            "type": "string",
            "class": "eZ.ContentType",
            "module": "ez-contenttypemodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypemodel.js",
            "line": 278,
            "description": "The content type's url alias schema",
            "itemtype": "attribute",
            "name": "urlAliasSchema",
            "default": "\"\"",
            "type": "string",
            "class": "eZ.ContentType",
            "module": "ez-contenttypemodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-contenttypemodel.js",
            "line": 289,
            "description": "The content type's field definitions indexed by field definition\nidentifier. The localized properties names and description of\neach field definition are normalized with\n{{#crossLink \"eZ.RestModel/_setterLocalizedValue:method\"}}_setterLocalizedValue{{/crossLink}}",
            "itemtype": "attribute",
            "name": "fieldDefinitions",
            "default": "undefined",
            "type": "Object",
            "class": "eZ.ContentType",
            "module": "ez-contenttypemodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 24,
            "description": "Override of the eZ.RestModel _parseStruct method to also read the content info",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_parseStruct",
            "params": [
                {
                    "name": "struct",
                    "description": "the struct to transform",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 41,
            "description": "sync implementation that relies on the JS REST client.\nFor now, it supports the 'read' and 'delete' actions. The callback is\ndirectly passed to the ContentService.loadLocation method.",
            "itemtype": "method",
            "name": "sync",
            "params": [
                {
                    "name": "action",
                    "description": "the action, currently 'read' and 'delete' are supported",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "the options for the sync.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "(required) the JS REST client instance",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "a callback executed when the operation is finished",
                    "type": "Function"
                }
            ],
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 66,
            "description": "Moves location to trash. Callback is directly passed to ContentService.moveSubtree location",
            "itemtype": "method",
            "name": "trash",
            "params": [
                {
                    "name": "options",
                    "description": "the options for moving to trash",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "(required) the JS REST client instance",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 92,
            "description": "Moves the location under the given parenLocationId.",
            "itemtype": "method",
            "name": "move",
            "params": [
                {
                    "name": "options",
                    "description": "the options for the move.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "(required) the JS REST client instance",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "parentLocationId",
                    "description": "the location id where we should move the content",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "a callback executed when the operation is finished",
                    "type": "Function"
                }
            ],
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 105,
            "description": "Updates the hidden status of the location",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_updatehidden",
            "params": [
                {
                    "name": "options",
                    "description": "the required for the update",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "(required) the JS REST client instance",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "hidden",
                    "description": "`true` or `false` value to be set on the hidden attribute",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "a callback executed when the operation is finished",
                    "type": "Function"
                }
            ],
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 132,
            "description": "Hides the location",
            "itemtype": "method",
            "name": "hide",
            "params": [
                {
                    "name": "options",
                    "description": "the required for the update",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "(required) the JS REST client instance",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "a callback executed when the operation is finished",
                    "type": "Function"
                }
            ],
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 144,
            "description": "Reverse the hidden status of the location",
            "itemtype": "method",
            "name": "unhide",
            "params": [
                {
                    "name": "options",
                    "description": "the required for the update",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "(required) the JS REST client instance",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "a callback executed when the operation is finished",
                    "type": "Function"
                }
            ],
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 156,
            "description": "Deletes the location in the repository.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_deleteLocation",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "the JS REST client instance",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 183,
            "description": "Loads path of the current location. The result is the array containing\neZ.Location objects present on the path sorted by depth.\nThe array doesn't contain current location.\nThe result is available in the `path` attribute or in the `callback`.",
            "itemtype": "method",
            "name": "loadPath",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "the JS REST client instance",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function",
                    "props": [
                        {
                            "name": "error",
                            "description": "",
                            "type": "False|Error"
                        },
                        {
                            "name": "locations",
                            "description": "the array of Locations",
                            "type": "Array"
                        }
                    ]
                }
            ],
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 229,
            "description": "Loads ancestors of the location based on the `pathString`. The result is the REST API view\ncontaining locations from the path.",
            "itemtype": "method",
            "name": "_loadAncestors",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "the JS REST client instance",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 253,
            "description": "Overrides the RestModel implementation to also deal with the `path` attribute",
            "itemtype": "method",
            "name": "toJSON",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 280,
            "description": "The location's number of child",
            "itemtype": "attribute",
            "name": "childCount",
            "default": "0",
            "type": "integer",
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 291,
            "description": "The location's depth",
            "itemtype": "attribute",
            "name": "depth",
            "default": "1",
            "type": "integer",
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 302,
            "description": "The location's hidden flag",
            "itemtype": "attribute",
            "name": "hidden",
            "default": "false",
            "type": "boolean",
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 313,
            "description": "The location's invisible flag",
            "itemtype": "attribute",
            "name": "invisible",
            "default": "false",
            "type": "boolean",
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 324,
            "description": "The location's id in the eZ Publish content repository",
            "itemtype": "attribute",
            "name": "locationId",
            "default": "''",
            "type": "string",
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 335,
            "description": "The location's path string",
            "itemtype": "attribute",
            "name": "pathString",
            "default": "''",
            "type": "string",
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 346,
            "description": "The location's priority",
            "itemtype": "attribute",
            "name": "priority",
            "default": "0",
            "type": "integer",
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 357,
            "description": "The location's remote id",
            "itemtype": "attribute",
            "name": "remoteId",
            "default": "''",
            "type": "string",
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 368,
            "description": "The location's sort field",
            "itemtype": "attribute",
            "name": "sortField",
            "default": "\"PATH\"",
            "type": "string",
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 379,
            "description": "The location's sort order",
            "itemtype": "attribute",
            "name": "sortOrder",
            "default": "\"ASC\"",
            "type": "string",
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 390,
            "description": "The content info",
            "itemtype": "attribute",
            "name": "contentInfo",
            "type": "eZ.ContentInfo",
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-locationmodel.js",
            "line": 407,
            "description": "The location's path. By default it is empty. You need to call the loadPath method to set this attribute.",
            "itemtype": "attribute",
            "name": "path",
            "default": "false",
            "type": "array",
            "readonly": "",
            "class": "eZ.Location",
            "module": "ez-locationmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-restmodel.js",
            "line": 30,
            "description": "Setter function for the boolean attribute.\nMakes sure the string \"true\" is tranformed to true,\nany other value (except a boolean value) is considered\nas false",
            "itemtype": "method",
            "name": "_setterBoolean",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "val",
                    "description": "the value to transform",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.RestModel",
            "module": "ez-restmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-restmodel.js",
            "line": 48,
            "description": "Setter function for the date attribute.\nMake sure to transform the string input value into a date.",
            "itemtype": "method",
            "name": "_setterDate",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "val",
                    "description": "the value to transform",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "eZ.RestModel",
            "module": "ez-restmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-restmodel.js",
            "line": 70,
            "description": "Setter function for the localized attribute.\nIt transforms any value like\n\n    {\n       value: [{\n           '_languageCode': 'fre-FR',\n           '#text': \"Français\"\n       }, {\n           '_languageCode': 'eng-GB',\n           '#text': \"English\"\n       }]\n    }\n\ninto:\n\n    {\n        'fre-FR': 'Français',\n        'eng-GB': 'English'\n    }",
            "itemtype": "method",
            "name": "_setterLocalizedValue",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "val",
                    "description": "the localized object to transform",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.RestModel",
            "module": "ez-restmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-restmodel.js",
            "line": 110,
            "description": "Parses the hash returned by the eZ Publish REST API\nbased on ATTRS_REST_MAP and LINKS_MAP properties",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_parseStruct",
            "params": [
                {
                    "name": "struct",
                    "description": "the struct to transform",
                    "type": "Object"
                },
                {
                    "name": "doc",
                    "description": "The complete object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.RestModel",
            "module": "ez-restmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-restmodel.js",
            "line": 145,
            "description": "Parses an object (usually a response object from the JS REST client)",
            "itemtype": "method",
            "name": "parse",
            "params": [
                {
                    "name": "response",
                    "description": "an object with a `document` property holding\nthe struct to parse like the response object from the eZ JS REST\nClient",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "attribute hash",
                "type": "Object"
            },
            "class": "eZ.RestModel",
            "module": "ez-restmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-restmodel.js",
            "line": 166,
            "description": "Loads the model from a simple literal object. It applies\nthe mapping described by the ATTRS_REST_MAP and LINKS_MAP.",
            "itemtype": "method",
            "name": "loadFromHash",
            "params": [
                {
                    "name": "hash",
                    "description": "a literal object to import",
                    "type": "Object"
                }
            ],
            "class": "eZ.RestModel",
            "module": "ez-restmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-restmodel.js",
            "line": 188,
            "description": "Overrides the default implementation to make sure the id is also\nresetted to its default value (null) when necessary.\nIt's a workaround for https://github.com/yui/yui3/issues/1982 which\ncauses https://jira.ez.no/browse/EZP-23584",
            "itemtype": "method",
            "name": "reset",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the attribute to reset. If\nomitted, all attributes are reset.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "A reference to the host object.",
                "type": "Model"
            },
            "class": "eZ.RestModel",
            "module": "ez-restmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-restmodel.js",
            "line": 207,
            "description": "Overrides the default implementation to make sure the models in\nattributes are also jsonified.",
            "itemtype": "method",
            "name": "toJSON",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.RestModel",
            "module": "ez-restmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-restmodel.js",
            "line": 225,
            "description": "Root element in the REST API response where the data is located.\nIt can contains points to target a deep structure.",
            "static": 1,
            "itemtype": "property",
            "name": "REST_STRUCT_ROOT",
            "type": "string",
            "default": "\"\"",
            "class": "eZ.RestModel",
            "module": "ez-restmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-restmodel.js",
            "line": 236,
            "description": "Mapping between properties in a hash structure\nand the attributes of the model object. Each element can be\na string or a hash with one pair key/value.\nA string means a simple mapping between the rest structure\nproperty and the attribute. The simple hash allows to have\na different attribute identifier than the property name.\nExample:\n\n    // REST structure\n    {\"name\": \"my name\", \"id\": 42}\n\nWith the following map:\n\n    [\"name\", {'id': 'myId'}]\n\nWould result in the following hash:\n\n    {\"name\": \"my name\", \"myId\": 42}\n\nwhen parsed in the _parseStruct method.",
            "static": 1,
            "itemtype": "property",
            "name": "ATTRS_REST_MAP",
            "type": "Array",
            "class": "eZ.RestModel",
            "module": "ez-restmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-restmodel.js",
            "line": 264,
            "description": "Array of linked resources to parse and make available\nin the resources attribute\nExample:\n\n    ['Owner', 'MainLocation']",
            "static": 1,
            "itemtype": "property",
            "name": "LINKS_MAP",
            "type": "Array",
            "class": "eZ.RestModel",
            "module": "ez-restmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-restmodel.js",
            "line": 278,
            "description": "Contains the URI to linked resources\nExample:\n\n    {\n       Owner: '/api/ezp/v2/user/users/14',\n       MainLocation: '/api/ezp/v2/content/locations/1/2/61'\n    }",
            "itemtype": "attribute",
            "name": "resources",
            "type": "Object",
            "default": "{}",
            "class": "eZ.RestModel",
            "module": "ez-restmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-usermodel.js",
            "line": 24,
            "description": "sync implementation that relies on the JS REST client.\nFor now, it only supports the 'read' action. The callback is\ndirectly passed to the UserService.loadUser method.",
            "itemtype": "method",
            "name": "sync",
            "params": [
                {
                    "name": "action",
                    "description": "the action, currently only 'read' is supported",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "the options for the sync.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "(required) the JS REST client instance",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "a callback executed when the operation is finished",
                    "type": "Function"
                }
            ],
            "class": "eZ.User",
            "module": "ez-usermodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-usermodel.js",
            "line": 53,
            "description": "The user's email",
            "itemtype": "attribute",
            "name": "email",
            "default": "''",
            "type": "string",
            "class": "eZ.User",
            "module": "ez-usermodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-usermodel.js",
            "line": 64,
            "description": "The user's login",
            "itemtype": "attribute",
            "name": "login",
            "default": "''",
            "type": "string",
            "class": "eZ.User",
            "module": "ez-usermodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-usermodel.js",
            "line": 75,
            "description": "The user's `enabled` flag",
            "itemtype": "attribute",
            "name": "enabled",
            "default": "true",
            "type": "boolean",
            "class": "eZ.User",
            "module": "ez-usermodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-usermodel.js",
            "line": 87,
            "description": "The user's name",
            "itemtype": "attribute",
            "name": "name",
            "default": "''",
            "type": "string",
            "class": "eZ.User",
            "module": "ez-usermodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-usermodel.js",
            "line": 98,
            "description": "The user's remote id",
            "itemtype": "attribute",
            "name": "remoteId",
            "default": "''",
            "type": "string",
            "class": "eZ.User",
            "module": "ez-usermodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 24,
            "description": "sync implementation for the Version. For now, it supports reading a\nversion from its id, creating a new one based on the content current\nversion, updating it and deleting it. The update can also publish the\nversion",
            "itemtype": "method",
            "name": "sync",
            "params": [
                {
                    "name": "action",
                    "description": "the action, read, create, update, delete are\nsupported",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "the options for the sync.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "the JS REST client instance",
                            "type": "Object"
                        },
                        {
                            "name": "languageCode",
                            "description": "the language in which the fields\nshould be loaded",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "a callback executed when the operation is finished",
                    "type": "Function"
                }
            ],
            "class": "eZ.Version",
            "module": "ez-versionmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 56,
            "description": "Deletes the version in the repository.",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_deleteVersion",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "the JS REST client instance",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.Version",
            "module": "ez-versionmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 82,
            "description": "Saves the version in the repository. Only the version with a status\ndifferent than PUBLISHED can be saved. In addtion, if options\ncontains a publish property with a truthy value, it will also publish\nthe version.",
            "itemtype": "method",
            "name": "save",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "fields",
                            "description": "the fields to updated",
                            "type": "Array"
                        },
                        {
                            "name": "publish",
                            "description": "if evaluated to true, publish the\nversion in addition",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "called when the operation finishes",
                    "type": "Function",
                    "props": [
                        {
                            "name": "err",
                            "description": "",
                            "type": "Error|Boolean"
                        },
                        {
                            "name": "response",
                            "description": "the response object of the update\nrequest (even with the publish operation",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "class": "eZ.Version",
            "module": "ez-versionmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 99,
            "description": "Creates a new version for a given contentId in the repository",
            "itemtype": "method",
            "name": "_createVersion",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "the JS REST client instance",
                            "type": "Object"
                        },
                        {
                            "name": "contentId",
                            "description": "",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.Version",
            "module": "ez-versionmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 122,
            "description": "Updates a version in the repository and potentially publish it",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_updateVersion",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "fields",
                            "description": "an array of fields",
                            "type": "Array"
                        },
                        {
                            "name": "publish",
                            "description": "whether to publish the version after\nthe update",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.Version",
            "module": "ez-versionmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 158,
            "description": "Publishes the version in the repository",
            "itemtype": "method",
            "name": "publishVersion",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "api",
                            "description": "the JS REST client instance",
                            "type": "Object"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "eZ.Version",
            "module": "ez-versionmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 172,
            "description": "Override of the eZ.RestModel _parseStruct method to read the fields\nof the version and the id which are not available under the\nREST_STRUCT_ROOT hierarchy",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_parseStruct",
            "params": [
                {
                    "name": "struct",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "responseDoc",
                    "description": "the full response document",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.Version",
            "module": "ez-versionmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 196,
            "description": "Returns the field which identifier is in parameter",
            "itemtype": "method",
            "name": "getField",
            "params": [
                {
                    "name": "identifier",
                    "description": "the field definition identifier",
                    "type": "String"
                }
            ],
            "return": {
                "description": "or undefined if the field does not exists",
                "type": "Object"
            },
            "class": "eZ.Version",
            "module": "ez-versionmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 207,
            "description": "Return list of translations of version as array of language codes",
            "itemtype": "method",
            "name": "getTranslationsList",
            "return": {
                "description": "language codes of translations",
                "type": "Array"
            },
            "class": "eZ.Version",
            "module": "ez-versionmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 217,
            "description": "Checks whether the version is translated into `languageCode`",
            "itemtype": "method",
            "name": "hasTranslation",
            "params": [
                {
                    "name": "languageCode",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.Version",
            "module": "ez-versionmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 228,
            "description": "Checks whether the version is a draft",
            "itemtype": "method",
            "name": "isDraft",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.Version",
            "module": "ez-versionmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 238,
            "description": "Checks whether the version was created by the `user`",
            "itemtype": "method",
            "name": "createdBy",
            "params": [
                {
                    "name": "user",
                    "description": "",
                    "type": "eZ.User"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.Version",
            "module": "ez-versionmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 258,
            "description": "The version id (f.e. \"450\")",
            "itemtype": "attribute",
            "name": "versionId",
            "type": "String",
            "default": "\"\"",
            "class": "eZ.Version",
            "module": "ez-versionmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 269,
            "description": "The version status",
            "itemtype": "attribute",
            "name": "status",
            "type": "String",
            "default": "\"\"",
            "class": "eZ.Version",
            "module": "ez-versionmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 280,
            "description": "The version number",
            "itemtype": "attribute",
            "name": "versionNo",
            "type": "Number",
            "default": "1",
            "class": "eZ.Version",
            "module": "ez-versionmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 291,
            "description": "The creation date of the version",
            "itemtype": "attribute",
            "name": "creationDate",
            "type": "Date",
            "default": "epoch",
            "class": "eZ.Version",
            "module": "ez-versionmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 303,
            "description": "The modification date of the version",
            "itemtype": "attribute",
            "name": "modificationDate",
            "type": "Date",
            "default": "epoch",
            "class": "eZ.Version",
            "module": "ez-versionmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 315,
            "description": "The language codes",
            "itemtype": "attribute",
            "name": "languageCodes",
            "type": "String",
            "default": "\"\"",
            "class": "eZ.Version",
            "module": "ez-versionmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 326,
            "description": "The initial language code",
            "itemtype": "attribute",
            "name": "initialLanguageCode",
            "type": "String",
            "default": "\"\"",
            "class": "eZ.Version",
            "module": "ez-versionmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 337,
            "description": "The names of the version per language",
            "itemtype": "attribute",
            "name": "names",
            "type": "Object",
            "default": "{}",
            "class": "eZ.Version",
            "module": "ez-versionmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/models/ez-versionmodel.js",
            "line": 349,
            "description": "The fields of the version by field identifier",
            "itemtype": "attribute",
            "name": "fields",
            "type": "Object",
            "default": "{}",
            "class": "eZ.Version",
            "module": "ez-versionmodel",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/extensions/ez-accordion-element.js",
            "line": 25,
            "description": "Collapse or uncollapse an element (transition on its height);",
            "itemtype": "method",
            "name": "_collapse",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "conf",
                    "description": "the configuration",
                    "type": "Object",
                    "props": [
                        {
                            "name": "collapsedClass",
                            "description": "the class to set/unset on the detectElement\n                node",
                            "type": "String"
                        },
                        {
                            "name": "collapseElement",
                            "description": "the DOM element\n                                 which is collapsed/uncollapsed",
                            "type": "Node|HTMLElement|String"
                        },
                        {
                            "name": "detectElement",
                            "description": "the DOM element used\n                                 to detect the current state, if not\n                                 provided the `collapseElement` is used\n                                 instead.",
                            "type": "Node|HTMLElement|String",
                            "optional": true
                        },
                        {
                            "name": "collapsedHeight",
                            "description": "the height of the collapseElement\n                when it is collapsed",
                            "type": "String",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "duration",
                            "description": "the transition duration",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "0.3"
                        },
                        {
                            "name": "easing",
                            "description": "the transition easing",
                            "type": "String",
                            "optional": true,
                            "optdefault": "ease"
                        },
                        {
                            "name": "callback",
                            "description": "optional callback function called after the\n                  element has collapsed/uncollapsed",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "eZ.AccordionElement",
            "module": "ez-accordion-element",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/extensions/ez-asynchronousview.js",
            "line": 29,
            "description": "Holds the method to call to fire the load event.",
            "itemtype": "property",
            "name": "_fireMethod",
            "required": 1,
            "type": "{Function}",
            "access": "protected",
            "tagname": "",
            "class": "eZ.AsynchronousView",
            "module": "ez-expandable",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/extensions/ez-asynchronousview.js",
            "line": 38,
            "description": "Holds the attribute name which stores the data needed to render the\nview. If provided, the asynchronous view will subscribe to the\ncorresponding change event.",
            "itemtype": "property",
            "name": "_watchAttribute",
            "type": "{String}",
            "access": "protected",
            "tagname": "",
            "class": "eZ.AsynchronousView",
            "module": "ez-expandable",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/extensions/ez-asynchronousview.js",
            "line": 72,
            "description": "Tap event handler for the retry button. It resets the attribute which\nname is stored in the `_watchAttribute` property and the\n`loadingError` attribute and fires the loading event with the method\nin `_fireMethod`.",
            "itemtype": "method",
            "name": "_retryLoading",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "eZ.AsynchronousView",
            "module": "ez-expandable",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/extensions/ez-asynchronousview.js",
            "line": 95,
            "description": "Loading error state",
            "itemtype": "attribute",
            "name": "loadingError",
            "type": "Boolean",
            "default": "false",
            "class": "eZ.AsynchronousView",
            "module": "ez-expandable",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/extensions/ez-expandable.js",
            "line": 39,
            "description": "Expanded state",
            "itemtype": "attribute",
            "name": "expanded",
            "default": "false",
            "type": "Boolean",
            "class": "eZ.Expandable",
            "module": "ez-expandable",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/extensions/ez-expandable.js",
            "line": 50,
            "description": "The node which is expanded",
            "itemtype": "attribute",
            "name": "expandableNode",
            "type": "Y.Node",
            "readonly": "",
            "class": "eZ.Expandable",
            "module": "ez-expandable",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/extensions/ez-height-change.js",
            "line": 22,
            "description": "Returns the height of the view container",
            "itemtype": "method",
            "name": "_getContainerHeight",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "eZ.HeightChange",
            "module": "ez-height-change",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/extensions/ez-height-change.js",
            "line": 33,
            "description": "Fires the `heightChange` event",
            "itemtype": "method",
            "name": "_fireHeightChange",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "the",
                    "description": "old height",
                    "type": "Number"
                },
                {
                    "name": "the",
                    "description": "new height",
                    "type": "Number"
                }
            ],
            "class": "eZ.HeightChange",
            "module": "ez-height-change",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/extensions/ez-height-change.js",
            "line": 42,
            "description": "Fired when the height of the container changes",
            "itemtype": "event",
            "name": "heightChange",
            "params": [
                {
                    "name": "height",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "old",
                            "description": "",
                            "type": "Number"
                        },
                        {
                            "name": "new",
                            "description": "",
                            "type": "Number"
                        },
                        {
                            "name": "offset",
                            "description": "",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "eZ.HeightChange",
            "module": "ez-height-change",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/extensions/ez-height-fit.js",
            "line": 31,
            "description": "Sets the height of the view",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_uiSetHeight",
            "params": [
                {
                    "name": "heightOffset",
                    "description": "the height offset to apply when\ncomputing the height of the view.",
                    "type": "Number"
                }
            ],
            "class": "eZ.HeightFit",
            "module": "ez-height-fit",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/extensions/ez-height-fit.js",
            "line": 47,
            "description": "Refreshes the height of the view with the given height offset. This\nmethod is automatically called by the App Position plugin.",
            "itemtype": "method",
            "name": "refreshTopPosition",
            "params": [
                {
                    "name": "heightOffset",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "eZ.HeightFit",
            "module": "ez-height-fit",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/extensions/ez-selection-table.js",
            "line": 52,
            "description": "Change event handler for the ez-selection-table-checkbox checkboxes",
            "itemtype": "method",
            "name": "_handleRowSelection",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.SelectionTable",
            "module": "ez-selection-table",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/extensions/ez-selection-table.js",
            "line": 68,
            "description": "Adds or removes the selected class on the row in which the checkbox is",
            "itemtype": "method",
            "name": "_uiSelectRow",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "checkbox",
                    "description": "",
                    "type": "Node"
                }
            ],
            "class": "eZ.SelectionTable",
            "module": "ez-selection-table",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/extensions/ez-selection-table.js",
            "line": 85,
            "description": "Enables or disableds the buttons depending on the number of selected\ncheckboxes",
            "itemtype": "method",
            "name": "_uiEnableButtons",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "buttons",
                    "description": "",
                    "type": "NodeList"
                }
            ],
            "class": "eZ.SelectionTable",
            "module": "ez-selection-table",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/extensions/ez-sideviewservice.js",
            "line": 26,
            "description": "The parameters of the side view service. The parameters are set\nwhen the side view is shown with the\n{{#crossLink \"eZ.PlatformUIApp/showSideView:method\"}}eZ.PlatformUIApp.showSideView method{{/crossLink}}\ntypically after catching an event (see for instance the\n{{#crossLink \"eZ.Plugin.UniversalDiscovery\"}}Universal Discovery\nPlugin{{/crossLink}})",
            "itemtype": "attribute",
            "name": "parameters",
            "type": "{Object}",
            "default": "undefined",
            "class": "eZ.SideViewService",
            "module": "ez-sideviewservice",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/extensions/ez-tabs.js",
            "line": 34,
            "description": "Fired when changing the visible tab. The default function changes the\nDOM so that the new tab panel appears and the associated tab label is\nhighlighted. The behavior can be prevented.",
            "itemtype": "event",
            "name": "changeTab",
            "params": [
                {
                    "name": "tabLabelNode",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "tabId",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "container",
                    "description": "",
                    "type": "Node"
                }
            ],
            "class": "eZ.Tabs",
            "module": "ez-tabs",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/extensions/ez-tabs.js",
            "line": 54,
            "description": "tap event handler on a tab label",
            "itemtype": "method",
            "name": "_uiTab",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "tap event facade",
                    "type": "Object"
                }
            ],
            "class": "eZ.Tabs",
            "module": "ez-tabs",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/extensions/ez-tabs.js",
            "line": 70,
            "description": "Returns the tab label element from the corresponding link",
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_getTabLabel",
            "params": [
                {
                    "name": "linkNode",
                    "description": "",
                    "type": "Node"
                }
            ],
            "return": {
                "description": "",
                "type": "Node"
            },
            "class": "eZ.Tabs",
            "module": "ez-tabs",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/extensions/ez-tabs.js",
            "line": 82,
            "description": "Selects the `tabLabel` and add the tab selected class on the `targetId`\nelement inside container while removing it from any other element",
            "itemtype": "method",
            "name": "_selectTab",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "tabLabel",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "targetId",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "container",
                    "description": "",
                    "type": "Node"
                }
            ],
            "class": "eZ.Tabs",
            "module": "ez-tabs",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/services/ez-googlemapapiloader.js",
            "line": 30,
            "description": "Constructor function of the object used to load the Google Map API",
            "itemtype": "property",
            "name": "_JSONPRequest",
            "type": "Function",
            "default": "Y.JSONPRequest",
            "access": "protected",
            "tagname": "",
            "class": "eZ.GoogleMapAPILoader",
            "module": "ez-googlemapapiloader",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/services/ez-googlemapapiloader.js",
            "line": 40,
            "description": "Flag indicating if the loader is currently in progress of loading.\nNeeded to avoid concurrent loading.",
            "itemtype": "property",
            "name": "_isLoading",
            "type": "boolean",
            "default": "false",
            "access": "protected",
            "tagname": "",
            "class": "eZ.GoogleMapAPILoader",
            "module": "ez-googlemapapiloader",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/services/ez-googlemapapiloader.js",
            "line": 51,
            "description": "Fired once map API is correctly loaded",
            "itemtype": "event",
            "name": "mapAPIReady",
            "class": "eZ.GoogleMapAPILoader",
            "module": "ez-googlemapapiloader",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/services/ez-googlemapapiloader.js",
            "line": 58,
            "description": "Fired once map API have failed to load",
            "itemtype": "event",
            "name": "mapAPIFailed",
            "class": "eZ.GoogleMapAPILoader",
            "module": "ez-googlemapapiloader",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/services/ez-googlemapapiloader.js",
            "line": 67,
            "description": "Trying to load Google Maps API via JSONP and firing either\n`mapAPIReady` or `mapAPIFailed` depending on results",
            "itemtype": "method",
            "name": "load",
            "class": "eZ.GoogleMapAPILoader",
            "module": "ez-googlemapapiloader",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/services/ez-googlemapapiloader.js",
            "line": 95,
            "description": "Checking if the map API is loaded already",
            "itemtype": "method",
            "name": "isAPILoaded",
            "return": {
                "description": "true if map API was loaded, false if not",
                "type": "Boolean"
            },
            "class": "eZ.GoogleMapAPILoader",
            "module": "ez-googlemapapiloader",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/services/ez-googlemapapiloader.js",
            "line": 105,
            "description": "Method handling successfull maps API loading",
            "itemtype": "method",
            "name": "_mapReady",
            "access": "protected",
            "tagname": "",
            "class": "eZ.GoogleMapAPILoader",
            "module": "ez-googlemapapiloader",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/services/ez-googlemapapiloader.js",
            "line": 116,
            "description": "Method handling failures during maps API loading",
            "itemtype": "method",
            "name": "_mapFailed",
            "access": "protected",
            "tagname": "",
            "class": "eZ.GoogleMapAPILoader",
            "module": "ez-googlemapapiloader",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/services/ez-pluginregistry.js",
            "line": 17,
            "description": "Static property which holds the plugin constructors by component\nidentifier.",
            "static": 1,
            "itemtype": "property",
            "name": "_plugins",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "eZ.PluginRegistry",
            "module": "ez-pluginregistry",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/services/ez-pluginregistry.js",
            "line": 28,
            "description": "Resets the plugin registry",
            "static": 1,
            "itemtype": "method",
            "name": "reset",
            "class": "eZ.PluginRegistry",
            "module": "ez-pluginregistry",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/services/ez-pluginregistry.js",
            "line": 38,
            "description": "Registers a plugin in the registry for the given components",
            "itemtype": "method",
            "name": "registerPlugin",
            "static": 1,
            "params": [
                {
                    "name": "constructor",
                    "description": "the constructor function of the plugin.\n       It should have a `NS` static property to be considered as a\n       valid plugin.",
                    "type": "Function"
                },
                {
                    "name": "components",
                    "description": "array containing the string identifiers of\n       the components that will be extended by the plugin",
                    "type": "Array"
                }
            ],
            "class": "eZ.PluginRegistry",
            "module": "ez-pluginregistry",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/services/ez-pluginregistry.js",
            "line": 61,
            "description": "Removes a plugin from the registry based on its namespace.",
            "itemtype": "method",
            "name": "unregisterPlugin",
            "static": 1,
            "params": [
                {
                    "name": "ns",
                    "description": "the namespace of the plugin to remove",
                    "type": "String"
                }
            ],
            "class": "eZ.PluginRegistry",
            "module": "ez-pluginregistry",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/services/ez-pluginregistry.js",
            "line": 78,
            "description": "Returns the plugins registered for the component.",
            "itemtype": "method",
            "name": "getPlugins",
            "static": 1,
            "params": [
                {
                    "name": "component",
                    "description": "the identifier of the component",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Array"
            },
            "class": "eZ.PluginRegistry",
            "module": "ez-pluginregistry",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/mixins/blocktextalign.js",
            "line": 30,
            "description": "The editor instance where the component is being used.",
            "itemtype": "property",
            "name": "editor",
            "type": "Object",
            "class": "eZ.AlloyEditorButton.ButtonBlockTextAlign",
            "module": "ez-alloyeditor-button-mixin-blocktextalign",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/mixins/blocktextalign.js",
            "line": 37,
            "description": "The label that should be used for accessibility purposes.",
            "itemtype": "property",
            "name": "label",
            "type": "String",
            "class": "eZ.AlloyEditorButton.ButtonBlockTextAlign",
            "module": "ez-alloyeditor-button-mixin-blocktextalign",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/mixins/blocktextalign.js",
            "line": 44,
            "description": "The tabIndex of the button in its toolbar current state. A value other than -1\nmeans that the button has focus and is the active element.",
            "itemtype": "property",
            "name": "tabIndex",
            "type": "Number",
            "class": "eZ.AlloyEditorButton.ButtonBlockTextAlign",
            "module": "ez-alloyeditor-button-mixin-blocktextalign",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/mixins/blocktextalign.js",
            "line": 52,
            "description": "The text-align style value to check and apply",
            "required": 1,
            "itemtype": "property",
            "name": "textAlign",
            "type": "String",
            "class": "eZ.AlloyEditorButton.ButtonBlockTextAlign",
            "module": "ez-alloyeditor-button-mixin-blocktextalign",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/mixins/blocktextalign.js",
            "line": 60,
            "description": "The suffix of the class to use icon to set the button icon",
            "itemtype": "property",
            "name": "classIcon",
            "type": "String",
            "class": "eZ.AlloyEditorButton.ButtonBlockTextAlign",
            "module": "ez-alloyeditor-button-mixin-blocktextalign",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/mixins/blocktextalign.js",
            "line": 72,
            "description": "Checks whether the element holding the caret already has the current\ntext align style",
            "itemtype": "method",
            "name": "isActive",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.AlloyEditorButton.ButtonBlockTextAlign",
            "module": "ez-alloyeditor-button-mixin-blocktextalign",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/mixins/blocktextalign.js",
            "line": 83,
            "description": "Applies or removes the text align style",
            "itemtype": "method",
            "name": "applyStyle",
            "class": "eZ.AlloyEditorButton.ButtonBlockTextAlign",
            "module": "ez-alloyeditor-button-mixin-blocktextalign",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/mixins/blocktextalign.js",
            "line": 100,
            "description": "Lifecycle. Renders the UI of the button.",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "The content which should be rendered.",
                "type": "Object"
            },
            "class": "eZ.AlloyEditorButton.ButtonBlockTextAlign",
            "module": "ez-alloyeditor-button-mixin-blocktextalign",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/mixins/embeddiscovercontent.js",
            "line": 27,
            "description": "The editor instance where the component is being used.",
            "itemtype": "property",
            "name": "editor",
            "type": "Object",
            "class": "eZ.AlloyEditorButton.ButtonEmbedDiscoverContent",
            "module": "ez-alloyeditor-button-mixin-embeddiscovercontent",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/mixins/embeddiscovercontent.js",
            "line": 34,
            "description": "The title of the UDW",
            "itemtype": "property",
            "name": "udwTitle",
            "type": "String",
            "class": "eZ.AlloyEditorButton.ButtonEmbedDiscoverContent",
            "module": "ez-alloyeditor-button-mixin-embeddiscovercontent",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/mixins/embeddiscovercontent.js",
            "line": 41,
            "description": "The method to use as the contentDiscoveredHandler in the UDW",
            "itemtype": "property",
            "name": "udwContentDiscoveredMethod",
            "type": "String",
            "class": "eZ.AlloyEditorButton.ButtonEmbedDiscoverContent",
            "module": "ez-alloyeditor-button-mixin-embeddiscovercontent",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/mixins/embeddiscovercontent.js",
            "line": 48,
            "description": "The method to use as the isSelectable function in the UDW",
            "itemtype": "property",
            "name": "udwIsSelectableMethod",
            "type": "String",
            "class": "eZ.AlloyEditorButton.ButtonEmbedDiscoverContent",
            "module": "ez-alloyeditor-button-mixin-embeddiscovercontent",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/mixins/embeddiscovercontent.js",
            "line": 55,
            "description": "The loadContent flag to pass to the UDW",
            "itemtype": "property",
            "name": "udwLoadContent",
            "type": "Boolean",
            "class": "eZ.AlloyEditorButton.ButtonEmbedDiscoverContent",
            "module": "ez-alloyeditor-button-mixin-embeddiscovercontent",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/mixins/embeddiscovercontent.js",
            "line": 63,
            "description": "Triggers the UDW to choose the content to embed.",
            "itemtype": "method",
            "name": "_chooseContent",
            "access": "protected",
            "tagname": "",
            "class": "eZ.AlloyEditorButton.ButtonEmbedDiscoverContent",
            "module": "ez-alloyeditor-button-mixin-embeddiscovercontent",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/mixins/embeddiscovercontent.js",
            "line": 83,
            "description": "Returns the ezembed widget instance for the current selection.",
            "itemtype": "method",
            "name": "_getWidget",
            "return": {
                "description": "CKEDITOR.plugins.widget"
            },
            "class": "eZ.AlloyEditorButton.ButtonEmbedDiscoverContent",
            "module": "ez-alloyeditor-button-mixin-embeddiscovercontent",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/mixins/embeddiscovercontent.js",
            "line": 97,
            "description": "Sets the href of the ezembed widget based on the given content info",
            "itemtype": "method",
            "name": "_setContentInfo",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "contentInfo",
                    "description": "",
                    "type": "eZ.ContentInfo"
                }
            ],
            "class": "eZ.AlloyEditorButton.ButtonEmbedDiscoverContent",
            "module": "ez-alloyeditor-button-mixin-embeddiscovercontent",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/mixins/embedimage.js",
            "line": 25,
            "description": "Checks whether the current selection can be considered as an image.\nThis is the case if the content type has an ezimage field definition\nand if the corresponding field is not empty. This method is meant to\nbe used as a `isSelectable` function implementation for the UDW.",
            "itemtype": "method",
            "name": "_isImage",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "contentStruct",
                    "description": "the UDW potential selection",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.AlloyEditorButton.ButtonEmbedImage",
            "module": "ez-alloyeditor-button-mixin-embedimage",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/mixins/embedimage.js",
            "line": 46,
            "description": "Returns the image field object of the given content.",
            "itemtype": "method",
            "name": "_getImageField",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "contentType",
                    "description": "",
                    "type": "eZ.ContentType"
                },
                {
                    "name": "content",
                    "description": "",
                    "type": "eZ.Content"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "eZ.AlloyEditorButton.ButtonEmbedImage",
            "module": "ez-alloyeditor-button-mixin-embedimage",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/mixins/embedimage.js",
            "line": 61,
            "description": "Creates the <img> element with the provided image variation.",
            "itemtype": "method",
            "name": "_insertImage",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "imgVariation",
                    "description": "",
                    "type": "False|CAPIError"
                },
                {
                    "name": "imgVariation",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "eZ.AlloyEditorButton.ButtonEmbedImage",
            "module": "ez-alloyeditor-button-mixin-embedimage",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/mixins/embedimage.js",
            "line": 80,
            "description": "Loads the 'medium' variation of the embed image by firing the\n`loadImageVariation`event.",
            "itemtype": "method",
            "name": "_loadEmbedImage",
            "params": [
                {
                    "name": "selection",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.AlloyEditorButton.ButtonEmbedImage",
            "module": "ez-alloyeditor-button-mixin-embedimage",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/embed.js",
            "line": 46,
            "description": "Executes the command generated by the ezembed plugin and set the\ncorrect value based on the choosen content.",
            "itemtype": "method",
            "name": "_addEmbed",
            "params": [
                {
                    "name": "e",
                    "description": "the result of the choice in the UDW",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.AlloyEditorButton.eZ.AlloyEditor.ButtonEmbed",
            "module": "ez-alloyeditor-button-blocktextalignright",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/embedhref.js",
            "line": 48,
            "description": "Updates the emebed element with the selected content in UDW.",
            "itemtype": "method",
            "name": "_updateEmbed",
            "params": [
                {
                    "name": "e",
                    "description": "the contentDiscovered event facade",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.AlloyEditorButton.ButtonEmbedHref",
            "module": "ez-alloyeditor-button-remove",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/heading.js",
            "line": 42,
            "description": "Executes the eZAppendContent to add a heading element in the editor.",
            "itemtype": "method",
            "name": "_addHeading",
            "access": "protected",
            "tagname": "",
            "class": "eZ.AlloyEditorButton.eZ.AlloyEditor.ButtonHeading",
            "module": "ez-alloyeditor-button-remove",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/image.js",
            "line": 50,
            "description": "Executes the command generated by the ezembed plugin and set the\ncorrect value based on the choosen image.",
            "itemtype": "method",
            "name": "_addImage",
            "params": [
                {
                    "name": "e",
                    "description": "the result of the choice in the UDW",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.AlloyEditorButton.eZ.AlloyEditor.ButtonImage",
            "module": "ez-alloyeditor-button-remove",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/imagehref.js",
            "line": 52,
            "description": "Updates the image element with the selected content in UDW.",
            "itemtype": "method",
            "name": "_updateEmbed",
            "params": [
                {
                    "name": "e",
                    "description": "the contentDiscovered event facade",
                    "type": "EventFacade"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "eZ.AlloyEditorButton.ButtonImageHref",
            "module": "ez-alloyeditor-button-imagehref",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/buttons/paragraph.js",
            "line": 42,
            "description": "Executes the eZAppendContent to add a paragraph element in the editor.",
            "itemtype": "method",
            "name": "_addParagraph",
            "access": "protected",
            "tagname": "",
            "class": "eZ.AlloyEditorButton.eZ.AlloyEditor.ButtonParagraph",
            "module": "ez-alloyeditor-button-imagehref",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/plugins/addcontent.js",
            "line": 32,
            "description": "Fires the `editorInteraction` event this is done to make sure the\nAlloyEditor's UI remains visible",
            "itemtype": "method",
            "name": "fireEditorInteractionEvent",
            "access": "private",
            "tagname": "",
            "class": "CKEDITOR.plugins.ezaddcontent",
            "module": "ez-alloyeditor-button-imagehref",
            "namespace": "eZ.AlloyEditorButton"
        },
        {
            "file": "Resources/public/js/alloyeditor/plugins/embed.js",
            "line": 48,
            "description": "Set the embed as an embed representing an image",
            "itemtype": "method",
            "name": "setImageType",
            "return": {
                "description": "",
                "type": "CKEDITOR.plugins.widget"
            },
            "class": "CKEDITOR.plugins.ezembed",
            "module": "ez-alloyeditor-button-imagehref",
            "namespace": "CKEDITOR.plugins"
        },
        {
            "file": "Resources/public/js/alloyeditor/plugins/embed.js",
            "line": 59,
            "description": "Check whether the embed widget represents an image or not.",
            "itemtype": "method",
            "name": "isImage",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "CKEDITOR.plugins.ezembed",
            "module": "ez-alloyeditor-button-imagehref",
            "namespace": "CKEDITOR.plugins"
        },
        {
            "file": "Resources/public/js/alloyeditor/plugins/embed.js",
            "line": 69,
            "description": "Sets the `href` of the embed is URI to the embed content or\nlocation. (ezcontent://32 for instance).",
            "itemtype": "method",
            "name": "setHref",
            "params": [
                {
                    "name": "href",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "CKEDITOR.plugins.widget"
            },
            "class": "CKEDITOR.plugins.ezembed",
            "module": "ez-alloyeditor-button-imagehref",
            "namespace": "CKEDITOR.plugins"
        },
        {
            "file": "Resources/public/js/alloyeditor/plugins/embed.js",
            "line": 82,
            "description": "Sets the widget content. It makes sure the config element is\nnot overwritten.",
            "itemtype": "method",
            "name": "setWidgetContent",
            "params": [
                {
                    "name": "content",
                    "description": "",
                    "type": "String|CKEDITOR.dom.node"
                }
            ],
            "return": {
                "description": "",
                "type": "CKEDITOR.plugins.widget"
            },
            "class": "CKEDITOR.plugins.ezembed",
            "module": "ez-alloyeditor-button-imagehref",
            "namespace": "CKEDITOR.plugins"
        },
        {
            "file": "Resources/public/js/alloyeditor/plugins/embed.js",
            "line": 108,
            "description": "Sets a config value under the `key` for the embed.",
            "itemtype": "method",
            "name": "setConfig",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "CKEDITOR.plugins.widget"
            },
            "class": "CKEDITOR.plugins.ezembed",
            "module": "ez-alloyeditor-button-imagehref",
            "namespace": "CKEDITOR.plugins"
        },
        {
            "file": "Resources/public/js/alloyeditor/plugins/embed.js",
            "line": 128,
            "description": "Returns the element used as a container the config values. if\nit does not exist, it is created.",
            "itemtype": "method",
            "name": "_getEzConfigElement",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "CKEDITOR.dom.element"
            },
            "class": "CKEDITOR.plugins.ezembed",
            "module": "ez-alloyeditor-button-imagehref",
            "namespace": "CKEDITOR.plugins"
        },
        {
            "file": "Resources/public/js/alloyeditor/plugins/embed.js",
            "line": 147,
            "description": "Fires the editorInteraction event so that AlloyEditor editor\nUI remains visible and is updated.",
            "itemtype": "method",
            "name": "_fireEditorInteraction",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "evt",
                    "description": "this initial event info object",
                    "type": "Object"
                }
            ],
            "class": "CKEDITOR.plugins.ezembed",
            "module": "ez-alloyeditor-button-imagehref",
            "namespace": "CKEDITOR.plugins"
        },
        {
            "file": "Resources/public/js/alloyeditor/plugins/removeblock.js",
            "line": 16,
            "description": "Moves the caret to the element",
            "itemtype": "method",
            "name": "_moveCaretToElement",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "editor",
                    "description": "",
                    "type": "CKEDITOR.editor"
                },
                {
                    "name": "element",
                    "description": "",
                    "type": "CKEDITOR.dom.element"
                }
            ],
            "class": "CKEDITOR.plugins.ezremoveblock",
            "module": "ez-alloyeditor-button-imagehref",
            "namespace": "CKEDITOR.plugins"
        },
        {
            "file": "Resources/public/js/alloyeditor/plugins/removeblock.js",
            "line": 31,
            "description": "Fires the editorInteraction event so that AlloyEditor's UI is updated\nfor the newly focused element",
            "itemtype": "method",
            "name": "_fireEditorInteraction",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "editor",
                    "description": "",
                    "type": "CKEDITOR.editor"
                },
                {
                    "name": "removedElement",
                    "description": "",
                    "type": "CKEDITOR.dom.element"
                },
                {
                    "name": "newFocus",
                    "description": "",
                    "type": "CKEDITOR.dom.element"
                }
            ],
            "class": "CKEDITOR.plugins.ezremoveblock",
            "module": "ez-alloyeditor-button-imagehref",
            "namespace": "CKEDITOR.plugins"
        },
        {
            "file": "Resources/public/js/alloyeditor/plugins/removeblock.js",
            "line": 55,
            "description": "Changes the focused element in the editor to the given newFocus\nelement",
            "params": [
                {
                    "name": "editor",
                    "description": "",
                    "type": "CKEDITOR.editor"
                },
                {
                    "name": "newFocus",
                    "description": "",
                    "type": "CKEDITOR.dom.element"
                }
            ],
            "access": "protected",
            "tagname": "",
            "itemtype": "method",
            "name": "_changeFocus",
            "class": "CKEDITOR.plugins.ezremoveblock",
            "module": "ez-alloyeditor-button-imagehref",
            "namespace": "CKEDITOR.plugins"
        },
        {
            "file": "Resources/public/js/alloyeditor/processors/base.js",
            "line": 24,
            "description": "Process the `data` and returns a new string version of.",
            "itemtype": "method",
            "name": "process",
            "params": [
                {
                    "name": "data",
                    "description": "the data to process",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.EditorContentProcessorBase",
            "module": "ez-editorcontentprocessorbase",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/alloyeditor/processors/removeids.js",
            "line": 27,
            "description": "Removes the `id` attributes in `data`.",
            "itemtype": "method",
            "name": "process",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.EditorContentProcessorRemoveIds",
            "module": "ez-editorcontentprocessorremoveids",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/alloyeditor/processors/xhtml5edit.js",
            "line": 31,
            "description": "Converts `data` to an XHTML fragment with a `section` root element.",
            "itemtype": "method",
            "name": "_xhtmlify",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.EditorContentProcessorXHTML5Edit",
            "module": "ez-editorcontentprocessorxhtml5edit",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/alloyeditor/processors/xhtml5edit.js",
            "line": 53,
            "description": "Transforms `data` into a XHTML5Edit document.",
            "itemtype": "method",
            "name": "process",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.EditorContentProcessorXHTML5Edit",
            "module": "ez-editorcontentprocessorxhtml5edit",
            "namespace": "eZ"
        },
        {
            "file": "Resources/public/js/alloyeditor/toolbars/config/block-base.js",
            "line": 48,
            "description": "Returns the arrow box classes for the toolbar. The toolbar is\nalways positioned above its related block and has a special class to\nmove its tail on the left.",
            "itemtype": "method",
            "name": "getArrowBoxClasses",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "eZ.AlloyEditorToolbarConfig.Embed",
            "module": "ez-alloyeditor-toolbar-config-block-base"
        },
        {
            "file": "Resources/public/js/alloyeditor/toolbars/config/block-base.js",
            "line": 60,
            "description": "Sets the position of the toolbar. It overrides the default styles\ntoolbar positioning to position the toolbar just above its related\nblock element. The related block element is the block indicated in\nCKEditor's path or the target of the editorEvent event.",
            "itemtype": "method",
            "name": "setPosition",
            "params": [
                {
                    "name": "payload",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "editor",
                            "description": "",
                            "type": "AlloyEditor.Core"
                        },
                        {
                            "name": "selectionData",
                            "description": "",
                            "type": "Object"
                        },
                        {
                            "name": "editorEvent",
                            "description": "",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "return": {
                "description": "true if the method was able to position the\ntoolbar",
                "type": "Boolean"
            },
            "class": "eZ.AlloyEditorToolbarConfig.Embed",
            "module": "ez-alloyeditor-toolbar-config-block-base"
        },
        {
            "file": "Resources/public/js/alloyeditor/toolbars/config/embed.js",
            "line": 32,
            "description": "Tests whether the `embed` toolbar should be visible, it is visible\nwhen an ezembed widget gets the focus.",
            "itemtype": "method",
            "name": "test",
            "params": [
                {
                    "name": "payload",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "editor",
                            "description": "",
                            "type": "AlloyEditor.Core"
                        },
                        {
                            "name": "data",
                            "description": "",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "selectionData",
                                    "description": "",
                                    "type": "Object"
                                },
                                {
                                    "name": "nativeEvent",
                                    "description": "",
                                    "type": "Event"
                                }
                            ]
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.AlloyEditorToolbarConfig.Embed",
            "module": "ez-alloyeditor-toolbar-config-embed",
            "namespace": "eZ.AlloyEditorToolbarConfig"
        },
        {
            "file": "Resources/public/js/alloyeditor/toolbars/config/heading.js",
            "line": 49,
            "description": "Tests whether the `heading` toolbar should be visible. It is visible\nwhen the selection is empty and when the caret is inside a heading.",
            "itemtype": "method",
            "name": "test",
            "params": [
                {
                    "name": "payload",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "editor",
                            "description": "",
                            "type": "AlloyEditor.Core"
                        },
                        {
                            "name": "data",
                            "description": "",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "selectionData",
                                    "description": "",
                                    "type": "Object"
                                },
                                {
                                    "name": "nativeEvent",
                                    "description": "",
                                    "type": "Event"
                                }
                            ]
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.AlloyEditorToolbarConfig.Heading",
            "module": "ez-alloyeditor-toolbar-config-heading",
            "namespace": "eZ.AlloyEditorToolbarConfig"
        },
        {
            "file": "Resources/public/js/alloyeditor/toolbars/config/image.js",
            "line": 32,
            "description": "Tests whether the `image` toolbar should be visible, it is visible\nwhen an ezembed widget containing an <img> is visible.",
            "itemtype": "method",
            "name": "test",
            "params": [
                {
                    "name": "payload",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "editor",
                            "description": "",
                            "type": "AlloyEditor.Core"
                        },
                        {
                            "name": "data",
                            "description": "",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "selectionData",
                                    "description": "",
                                    "type": "Object"
                                },
                                {
                                    "name": "nativeEvent",
                                    "description": "",
                                    "type": "Event"
                                }
                            ]
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.AlloyEditorToolbarConfig.Image",
            "module": "ez-alloyeditor-toolbar-config-image",
            "namespace": "eZ.AlloyEditorToolbarConfig"
        },
        {
            "file": "Resources/public/js/alloyeditor/toolbars/config/paragraph.js",
            "line": 35,
            "description": "Tests whether the `paragraph` toolbar should be visible. It is\nvisible when the selection is empty and when the caret is inside a\nparagraph.",
            "itemtype": "method",
            "name": "test",
            "params": [
                {
                    "name": "payload",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "editor",
                            "description": "",
                            "type": "AlloyEditor.Core"
                        },
                        {
                            "name": "data",
                            "description": "",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "selectionData",
                                    "description": "",
                                    "type": "Object"
                                },
                                {
                                    "name": "nativeEvent",
                                    "description": "",
                                    "type": "Event"
                                }
                            ]
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "eZ.AlloyEditorToolbarConfig.Paragraph",
            "module": "ez-alloyeditor-toolbar-config-paragraph",
            "namespace": "eZ.AlloyEditorToolbarConfig"
        }
    ],
    "warnings": []
}